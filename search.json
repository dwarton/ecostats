[{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-1-crabs-on-seaweed","dir":"Articles","previous_headings":"","what":"Exercise 10.1: Crabs on seaweed","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"David Alistair… observed following presence (+) / absence (-)} patterns crabs (across 10 replicates): like know evidence difference crab presence patterns Distance Isolation. analyse data? looking evidence difference different values Dist wanting hypothesis test. presence-absence data thinking generalised linear model binomial response, Code Box 10.1.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-2-do-offshore-wind-farms-affect-fish-communities","dir":"Articles","previous_headings":"","what":"Exercise 10.2: Do offshore wind farms affect fish communities?","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"Lena colleagues… [] collecting paired data wind farm construction, 36 stations three zones (Wind Farm, North, South): Lena wants know evidence change eel abundance wind farm stations, compared others, following construction wind farm. analyse data? looking evidence difference across different values Zone Impact=wanting hypothesis test. BACI design, particularly interested Zone:Impact interaction. count data plenty zeros, analysed using generalised linear model (assuming negative binomial Poisson response, Code Box 10.1).","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-3-invertebrate-response-to-bush-regeneration","dir":"Articles","previous_headings":"","what":"Exercise 10.3: Invertebrate response to bush regeneration}","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"Anthony wants evaluate well invertebrate communities re-establishing following bush regeneration efforts. wants know evidence bush regeneration working. analyse data? looking evidence effect revegetation wanting hypothesis test Treatment effect. count data, zeros, analysed using generalised linear model (assuming negative binomial Poisson response, Code Box 10.1).","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-1-example-glm-fits-for-exercises-10-1-3-","dir":"Articles","previous_headings":"","what":"Code Box 10.1: Example GLM fits for Exercises 10.1-3.}","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"Exercise 10.1: Exercise 10.2: \\begin{verbatim} Exercise 10.3:","code":"library(ecostats) data(seaweed) seaweed$CrabPres = seaweed$Crab>0 ft_crab = glm(CrabPres~Time*Dist, family=binomial(\"cloglog\"),              data=seaweed) data(windFarms) eels = windFarms$abund[,16] ft_eels = glm(eels~Station+Year*Zone,family=\"poisson\",              data=windFarms$X) #> Warning: glm.fit: fitted rates numerically 0 occurred data(reveg) Haplotaxida=reveg$abund[,12] library(mvabund) worms = reveg$abund$Haplotaxida ft_worms = manyglm(worms~treatment,family=\"negative.binomial\", data=reveg)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-for-fig--10-5","dir":"Articles","previous_headings":"","what":"Code for Fig. 10.5","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"plot chunk fig10.5 plot chunk fig10.5","code":"data(reveg) library(mvabund) revegMV=mvabund(reveg$abund) treatment=reveg$treatment meanvar.plot(revegMV~treatment,legend=T,col=c(\"darkorange\",\"darkgreen\"),main=\"Poisson\") #> START SECTION 2  #> Plotting if overlay is TRUE #> using grouping variable Poisson 7 mean values were 0 and could  #>                                      not be included in the log-plot #> using grouping variable Poisson 10 variance values were 0 and could not  #>                                      be included in the log-plot #> FINISHED SECTION 2 x=10^(seq(-1,3.8,length=100)) lines(x,x,type=\"l\",col=\"red\") meanvar.plot(revegMV~treatment,legend=T,col=c(\"darkorange\",\"darkgreen\"), main=\"Negative binomial\") #> START SECTION 2  #> Plotting if overlay is TRUE #> using grouping variable Negative binomial 7 mean values were 0 and could  #>                                      not be included in the log-plot #> using grouping variable Negative binomial 10 variance values were 0 and could not  #>                                      be included in the log-plot #> FINISHED SECTION 2 x=10^(seq(-1,3.8,length=100)) points(x,x+x^2,type=\"l\",col=\"darkblue\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-2-a-summary-of-a-glm-fit-to-the-crab-presence-absence-data-of-exercise-10-1","dir":"Articles","previous_headings":"","what":"Code Box 10.2: A summary of a GLM fit to the crab presence-absence data of Exercise 10.1","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"","code":"seaweed$Dist = as.factor(seaweed$Dist) ft_crab = glm(CrabPres~Time*Dist, family=binomial(\"cloglog\"),              data=seaweed) summary(ft_crab) #>  #> Call: #> glm(formula = CrabPres ~ Time * Dist, family = binomial(\"cloglog\"),  #>     data = seaweed) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.3537  -0.6681  -0.6681   1.0108   2.1460   #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)  -2.3282     1.5046  -1.547    0.122 #> Time          0.1656     0.1741   0.952    0.341 #> Dist2        -1.5921     2.5709  -0.619    0.536 #> Dist10       -0.5843     2.1097  -0.277    0.782 #> Time:Dist2    0.1683     0.2899   0.581    0.561 #> Time:Dist10   0.1169     0.2399   0.487    0.626 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 71.097  on 56  degrees of freedom #> Residual deviance: 62.999  on 51  degrees of freedom #> AIC: 74.999 #>  #> Number of Fisher Scoring iterations: 5"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-3-dunn-smyth-residual-plots-for-the-crab-data-using-the-mvabund-package","dir":"Articles","previous_headings":"","what":"Code Box 10.3: Dunn-Smyth residual plots for the crab data, using the mvabund package","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"plot chunk box10.3","code":"library(mvabund) ftMany_crab = manyglm(CrabPres~Time*Dist,family=binomial(\"cloglog\"),              data=seaweed) plotenvelope(ftMany_crab, which=1)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-for-figure-10-8","dir":"Articles","previous_headings":"","what":"Code for Figure 10.8","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"plot chunk fig10.8 plot chunk fig10.8 (Note plotenvelope run just 39 iterations, speed computation time.)","code":"plotenvelope(ftMany_crab, which=1, n.sim=39) plotenvelope(ftMany_crab, which=1, n.sim=39)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-4-counts-of-ostracods-in-habitat-configuration-experiment-","dir":"Articles","previous_headings":"","what":"Exercise 10.4: Counts of Ostracods in habitat configuration experiment.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"sort model use Ostracod counts? plot chunk ex10.4 count variable plenty small counts (zeros category), thinking GLM. start consider Poisson regression, overdispersion, negative binomial regression. terms add model guess Time Dist, orthogonal factors. previously Wmass might also useful. check assumptions? Look fan-shape residual plot check mean-variance assumption, Code Box 10.4.","code":"with(seaweed,boxplot(Ost~Dist))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-4-assumption-checking-for-ostracod-counts-of-exercise-10-4-","dir":"Articles","previous_headings":"","what":"Code Box 10.4: Assumption checking for Ostracod counts of Exercise 10.4.}","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"(Note plotenvelope run just 99 iterations, speed computation time.) plot chunk box10.4b","code":"seaweed$logWmass = log(seaweed$Wmass) ft_countOst=manyglm(Ost~logWmass+Time*Dist,data=seaweed,              family=\"poisson\") par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_countOst, which=1:3, n.sim=99) # for a scale-location plot as well library(MASS) #this line is currently needed to deal with a bug but prob redundant soon par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) ft.countOstNB=manyglm(Ost~logWmass+Time*Dist,data=seaweed) plotenvelope(ft.countOstNB, which=1:3, n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-5-checking-the-poisson-assumption-on-the-wind-farm-data-","dir":"Articles","previous_headings":"","what":"Exercise 10.5: Checking the Poisson assumption on the wind farm data.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"Refit model using manyglm function, hence construct residual plot plot chunk ex10.5 Poisson assumption look reasonable? evidence fan shape, residuals close straight line normal quantile plot, looks pretty good .","code":"data(windFarms) eels = windFarms$abund[,16] ft_eels = manyglm(eels~Station+Year*Zone,family=\"poisson\",              data=windFarms$X) par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_eels, which=1:3, n.sim=99) #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x'"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-6-checking-the-poisson-assumption-for-the-worm-counts-","dir":"Articles","previous_headings":"","what":"Exercise 10.6: Checking the Poisson assumption for the worm counts.}","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"Refit model using manyglm function Poisson assumption, hence construct residual plot. plot chunk box10.6Poisson Also fit negative binomial data construct residual plot. plot chunk box10.6NB Can see differences plots? Poisson model fans couple residuals unusually large (see normal quantile plot). also may trend line residual vs fits plots slips outside simulation envelope. Compare BIC two models, using BIC function. model better fit worm counts? Well BIC suggests negative binomial model way better, corroborating result normal quantile plots.","code":"data(reveg) Haplotaxida=reveg$abund[,12] worms = reveg$abund$Haplotaxida ft_worms = manyglm(worms~treatment,family=poisson(), data=reveg) par(mfrow=c(1,2),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_worms, which=1:2, n.sim=99) ft_wormsNB = manyglm(worms~treatment,family=\"negative.binomial\", data=reveg) par(mfrow=c(1,2),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_wormsNB, which=1:2, n.sim=99) BIC(ft_worms, ft_wormsNB) #>            df      BIC #> ft_worms    2 80.55508 #> ft_wormsNB  3 53.93523"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-5-r-code-using-the-anova-function-to-test-the-key-hypotheses-of-interest-to-david-and-alistair-in-exercise-10-1-","dir":"Articles","previous_headings":"","what":"Code Box 10.5: R code using the anova function to test the key hypotheses of interest to David and Alistair in Exercise 10.1.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"evidence effect Isolation distance crabs? Nope :( Note Time effect significant Code Box 10.2. think might ? Code Box 10.2 uses Wald test, known give wacky answers separable models, see Maths Box 10.6 details.","code":"anova(ft_crab, test=\"Chisq\") #> Analysis of Deviance Table #>  #> Model: binomial, link: cloglog #>  #> Response: CrabPres #>  #> Terms added sequentially (first to last) #>  #>  #>           Df Deviance Resid. Df Resid. Dev Pr(>Chi)    #> NULL                         56     71.097             #> Time       1   6.6701        55     64.427 0.009804 ** #> Dist       2   1.0265        53     63.400 0.598553    #> Time:Dist  2   0.4012        51     62.999 0.818257    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-7-testing-if-there-a-wind-farm-effect","dir":"Articles","previous_headings":"","what":"Exercise 10.7: Testing if there a wind farm effect","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"model fitted, handle pairing structure? can fit glm previously need include Station one predictors, handle station--station variation eel abundance: OK write Year*Zone Zone main effect redundant Station main effect. also use mixed model random intercept Station. Fit appropriate model test effect wind farm. marginal evidence Year-Zone interaction.","code":"ft_eelsSt = glm(eels~Station+Year+Year:Zone,family=\"poisson\",              data=windFarms$X) #> Warning: glm.fit: fitted rates numerically 0 occurred anova(ft_eelsSt,test='Chisq') #> Analysis of Deviance Table #>  #> Model: poisson, link: log #>  #> Response: eels #>  #> Terms added sequentially (first to last) #>  #>  #>            Df Deviance Resid. Df Resid. Dev  Pr(>Chi)     #> NULL                         178    246.714               #> Station   107  169.443        71     77.270 0.0001145 *** #> Year        1    1.906        70     75.365 0.1674431     #> Year:Zone   2    4.821        68     70.544 0.0897813 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-6-model-based-inference-for-anthonys-worm-counts-from-exercise-10-3-","dir":"Articles","previous_headings":"","what":"Code Box 10.6: Model-based inference for Anthony’s worm counts from Exercise 10.3.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"","code":"ftmany_Hap=manyglm(Haplotaxida~treatment,family=\"negative.binomial\",               data=reveg) anova(ftmany_Hap) #> Time elapsed: 0 hr 0 min 0 sec #> Analysis of Deviance Table #>  #> Model: Haplotaxida ~ treatment #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev) #> (Intercept)      9                        #> treatment        8       1 2.811    0.158 #> Arguments: P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-7-design-based-inference-for-davids-and-alistairs-crab-data-using-mvabund-","dir":"Articles","previous_headings":"","what":"Code Box 10.7: Design-based inference for David’s and Alistair’s crab data using mvabund.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"important differences results David Alistair previously obtained Code Box 10.5? Nope, looks similar actually! guess Time effect slightly less significant now conclusion doesn’t really change, still reasonable evidence Time effect.","code":"ftMany_crab = manyglm(CrabPres~Time*Dist, family=binomial(\"cloglog\"),                  data=seaweed) anova(ftMany_crab) #> Time elapsed: 0 hr 0 min 1 sec #> Analysis of Deviance Table #>  #> Model: CrabPres ~ Time * Dist #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev)   #> (Intercept)     56                          #> Time            55       1 6.670    0.014 * #> Dist            53       2 1.026    0.654   #> Time:Dist       51       2 0.401    0.873   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-8-getting-the-wrong-answer-by-ignoring-overdispersion-in-anthonys-worm-counts-from-exercise-10-3-","dir":"Articles","previous_headings":"","what":"Code Box 10.8: Getting the wrong answer by ignoring overdispersion in Anthony’s worm counts from Exercise 10.3.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"","code":"ft_wormPois = glm(Haplotaxida~treatment, family=\"poisson\", data=reveg) anova(ft_wormPois,test=\"Chisq\") #> Analysis of Deviance Table #>  #> Model: poisson, link: log #>  #> Response: Haplotaxida #>  #> Terms added sequentially (first to last) #>  #>  #>           Df Deviance Resid. Df Resid. Dev  Pr(>Chi)     #> NULL                          9     63.946               #> treatment  1   11.668         8     52.278 0.0006359 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ft_wormmanyPois = manyglm(Haplotaxida~treatment,family=\"poisson\",                      data=reveg) anova(ft_wormmanyPois) #> Time elapsed: 0 hr 0 min 0 sec #> Analysis of Deviance Table #>  #> Model: Haplotaxida ~ treatment #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev) #> (Intercept)      9                        #> treatment        8       1 11.67    0.204 #> Arguments: P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-9-using-an-observation-level-random-effect-for-a-binomial-response","dir":"Articles","previous_headings":"","what":"Code Box 10.9: Using an observation-level random effect for a binomial response","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"plot chunk box10.9Load","code":"data(seedsTemp) seedsTemp$propGerm = seedsTemp$NumGerm / seedsTemp$NumSown plot(propGerm/(1-propGerm)~Test.Temp,data=seedsTemp,log=\"y\") #> Warning in xy.coords(x, y, xlabel, ylabel, log): 5 y values <= 0 omitted from logarithmic plot library(lme4) seedsTemp$ID = 1:length(seedsTemp$NumGerm) ft_temp = glmer(cbind(NumGerm,NumSown-NumGerm)~poly(Test.Temp,2)+                (1|ID),data=seedsTemp,family=\"binomial\") summary(ft_temp) #> Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) ['glmerMod'] #>  Family: binomial  ( logit ) #> Formula: cbind(NumGerm, NumSown - NumGerm) ~ poly(Test.Temp, 2) + (1 |      ID) #>    Data: seedsTemp #>  #>      AIC      BIC   logLik deviance df.resid  #>    212.7    218.1   -102.3    204.7       25  #>  #> Scaled residuals:  #>      Min       1Q   Median       3Q      Max  #> -1.10831 -0.00896  0.06063  0.13519  0.33025  #>  #> Random effects: #>  Groups Name        Variance Std.Dev. #>  ID     (Intercept) 2.961    1.721    #> Number of obs: 29, groups:  ID, 29 #>  #> Fixed effects: #>                     Estimate Std. Error z value Pr(>|z|)   #> (Intercept)          -0.5896     0.3428  -1.720   0.0854 . #> poly(Test.Temp, 2)1   2.8770     1.9395   1.483   0.1380   #> poly(Test.Temp, 2)2  -3.6910     1.9227  -1.920   0.0549 . #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Correlation of Fixed Effects: #>             (Intr) p(T.T,2)1 #> ply(T.T,2)1 -0.060           #> ply(T.T,2)2  0.066 -0.147"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-8-anthonys-ant-data-","dir":"Articles","previous_headings":"","what":"Exercise 10.8: Anthony’s ant data.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"model think appropriate dataset – Poisson negative binomial? hard question answer without fitting model. plot chunk ex10.8P OK Poisson fit spectacularly bad. Neither smoother stays envelope, data normal quantile plot stay anywhere near envelope. Plot data – seem evidence treatment effect? plot chunk ex10.8plot really! ant counts control sites similar middle revegetated sites. Use glm function fit Poisson log-linear model, use test treatment effect. get expected? Whoah told strongly significant evidence treatment effect, claim treated suspicion (evidence boxplot !) Now use negative binomial regression test treatment effect. Notice got different answer. Yeah, like completely opposite!!! answer likely correct case? plot chunk ex10.8NBplots Whereas diagnostic plots Poisson model showed serious problems, issues . negative binomial regression much better fit data. produced (much!) larger \\(P\\)-values lot overdispersion data, Poisson model unable account . (Note simulation envelopes cover broad range! small sample size. comparing plots Poisson fit, notice y-axis scale negative binomial plot much smaller – envelopes actually similar width sets plots, look different mostly axes different scales.)","code":"ants = reveg$abund$Formicidae ants_Poisson = glm(ants~treatment,data=reveg,family=poisson()) par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ants_Poisson, which=1:3, n.sim=99) with(reveg,boxplot(abund$Formicidae~treatment)) anova(ants_Poisson,test='Chisq') #> Analysis of Deviance Table #>  #> Model: poisson, link: log #>  #> Response: ants #>  #> Terms added sequentially (first to last) #>  #>  #>           Df Deviance Resid. Df Resid. Dev  Pr(>Chi)     #> NULL                          9     985.74               #> treatment  1   62.345         8     923.39 2.882e-15 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ants = reveg$abund$Formicidae ants_NB = manyglm(ants~treatment,data=reveg,family=\"negative.binomial\") anova(ants_NB) #> Time elapsed: 0 hr 0 min 0 sec #> Analysis of Deviance Table #>  #> Model: ants ~ treatment #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev) #> (Intercept)      9                        #> treatment        8       1 0.765    0.542 #> Arguments: P-value calculated using 999 iterations via PIT-trap resampling. par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ants_NB,which=1:3, n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-9-worm-counts-with-different-numbers-of-pitfall-traps","dir":"Articles","previous_headings":"","what":"Exercise 10.9: Worm counts with different numbers of pitfall traps","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"can account different sampling effort different sites model? Use offset log(pitfalls) Code Box 10.9.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"code-box-10-10-adding-an-offset-to-the-model-for-worm-counts-","dir":"Articles","previous_headings":"","what":"Code Box 10.10: Adding an offset to the model for worm counts.","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"","code":"ftmany_hapoffset = manyglm(Haplotaxida~treatment+offset(log(pitfalls)),                             family=\"negative.binomial\", data=reveg) anova(ftmany_hapoffset) #> Time elapsed: 0 hr 0 min 0 sec #> Analysis of Deviance Table #>  #> Model: Haplotaxida ~ treatment + offset(log(pitfalls)) #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev) #> (Intercept)      9                        #> treatment        8       1 2.889    0.143 #> Arguments: P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter10Solutions.html","id":"exercise-10-10-anthonys-cockroaches","dir":"Articles","previous_headings":"","what":"Exercise 10.10: Anthony’s cockroaches","title":"Chapter 10 -- Analysing discrete data -- Exercise solutions and Code Boxes","text":"analyse data? looks like Exercise 10.9 analysed similar way, assuming assumptions satisfied. main difference many zeros dataset (70%)… plot chunk ex10.10 Although many zeros dataset, treatment group, meaning observed predictor explains well. Poisson model seems fit reasonably data well, can conclude strong evidence effect revegetation cockroaches (disappeared revegetated plots).","code":"roaches = reveg$abund$Blattodea ftMany_roaches = manyglm(roaches~treatment,offset=log(pitfalls), family=\"poisson\", data=reveg) par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ftMany_roaches, which=1:3, n.sim=99) anova(ftMany_roaches) #> Time elapsed: 0 hr 0 min 0 sec #> Analysis of Deviance Table #>  #> Model: roaches ~ treatment #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev)    #> (Intercept)      9                           #> treatment        8       1 16.68    0.006 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-1-leaf-economics-and-environment","dir":"Articles","previous_headings":"","what":"Exercise 11.1: Leaf economics and environment","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Ian likes studying leaves. especially interested “leaf economics” – things like construction costs per unit area (lma), long-lived leaves (longev) vary environment. particular: evidence leaves vary (“economics” traits) across sites different levels rainfall soil nutrients? response variables? sort analysis appropriate ? response leaf economics traits, collectively, includes: lma (leaf construction costs per unit area) longev (long leaves live ) quantitative variables. multivariate analysis seem appropriate.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-2-flower-size-and-shape","dir":"Articles","previous_headings":"","what":"Exercise 11.2: Flower size and shape","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"response variables? sort analysis appropriate ? response variables flower size shape variables. : length petals width petals length sepals width sepals multivariate analysis way go .","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-3-hunting-spiders-and-their-environment","dir":"Articles","previous_headings":"","what":"Exercise 11.3: Hunting spiders and their environment","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"response variables? type analysis appropriate ? response variables abundance three abundant genera hunting spider. sort multivariate analyis appropriate, given dealing abundances, something accounts mean-variance relationship might needed.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-1-sample-variance-covariance-matrices-on-r","dir":"Articles","previous_headings":"","what":"Code Box 11.1: Sample variance-covariance matrices on R","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"","code":"library(smatr) data(leaflife) Yleaf=cbind(leaflife$lma,leaflife$longev) colnames(Yleaf)=c(\"lma\",\"longev\") var(Yleaf) #>              lma     longev #> lma    4186.0264 36.7905011 #> longev   36.7905  0.8232901 data(\"iris\") var(iris[,1:4]) #>              Sepal.Length Sepal.Width Petal.Length Petal.Width #> Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707 #> Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394 #> Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094 #> Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-2-fitting-a-multivariate-linear-model-to-the-leaf-economics-data-","dir":"Articles","previous_headings":"","what":"Code Box 11.2: Fitting a multivariate linear model to the leaf economics data.","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"plot chunk box11.2plot nature rainfall effect? red dots look higher black dots, blue dots look higher green dots. suggests low rainfall, thicker leaves (larger mass per unit area) needed achieve longevity. equivalently, low rainfall, leaves given LMA don’t live long.","code":"library(smatr) data(leaflife) Yleaf = cbind(leaflife$lma,leaflife$longev) ft_leaf = lm(Yleaf~rain*soilp, data=leaflife) anova(ft_leaf, test=\"Wilks\") #> Analysis of Variance Table #>  #>             Df   Wilks approx F num Df den Df    Pr(>F)     #> (Intercept)  1 0.11107  248.096      2     62 < 2.2e-16 *** #> rain         1 0.68723   14.108      2     62 8.917e-06 *** #> soilp        1 0.93478    2.163      2     62    0.1236     #> rain:soilp   1 0.95093    1.600      2     62    0.2102     #> Residuals   63                                              #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 plot(leaflife$lma~leaflife$longev, xlab=\"Leaf longevity (years)\",                      ylab=\"Leaf mass per area (mg/mm^2)\",                      col=interaction(leaflife$rain,leaflife$soilp)) legend(\"bottomright\",legend=c(\"high rain, high soilp\",          \"low rain, high soilp\", \"high rain, low soilp\",          \"low rain, low soilp\"), col=1:4, pch=1)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-3-checking-multivariate-linear-model-assumptions-for-leaf-economics-data","dir":"Articles","previous_headings":"","what":"Code Box 11.3: Checking multivariate linear model assumptions for leaf economics data","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"plot chunk box11.3 (Note plotenvelope run just 99 iterations, speed computation time.) think model assumptions made ? aren’t looking great – residual vs fits plot bit fan shape, confirmed scale-location plot, increasing trend stay inside simulation envelope. suggests variability increases mean increases, maybe transforming data.","code":"par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) library(ecostats) plotenvelope(ft_leaf,which=1:3,n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-4-a-multivariate-linear-model-for-the-leaf-economics-data-using-mvabund","dir":"Articles","previous_headings":"","what":"Code Box 11.4: A multivariate linear model for the leaf economics data using mvabund","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"","code":"library(mvabund) ftmany_leaf = manylm(Yleaf~rain*soilp, data=leaflife) anova(ftmany_leaf,cor.type=\"R\",test=\"LR\") #> Analysis of Variance Table #>  #> Model: manylm(formula = Yleaf ~ rain * soilp, data = leaflife) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(LR) Pr(>LR)    #> (Intercept)     66                            #> rain            65       1  23.941   0.002 ** #> soilp           64       1   4.475   0.128    #> rain:soilp      63       1   3.371   0.194    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming unconstrained correlation response  #>  P-value calculated using 999 iterations via residual (without replacement) resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-4-transforming-ians-leaf-economics-data","dir":"Articles","previous_headings":"","what":"Exercise 11.4: Transforming Ian’s leaf economics data","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Repeat analyses assumption checks Code Boxes 11.2-11.3 log-transformed data. assumptions look reasonable ? results different? plot chunk ex11.4 expected happen? Assumptions looking reasonable now, longer fan-shape appreciable right-skew data. expected (mentioned question) size variables tend make sense viewed proportional scale. MANOVA results generally similar, although test statistics (approx F) main effects slightly larger, keeping general result can see signals clearly reducing skew data (procedures tend efficient underlying assumptions reasonable).","code":"YleafLog = log(Yleaf) ft_leafLog = lm(YleafLog~rain*soilp, data=leaflife) anova(ft_leafLog, test=\"Wilks\") #> Analysis of Variance Table #>  #>             Df   Wilks approx F num Df den Df    Pr(>F)     #> (Intercept)  1 0.00239  12947.3      2     62 < 2.2e-16 *** #> rain         1 0.65969     16.0      2     62 2.509e-06 *** #> soilp        1 0.91520      2.9      2     62   0.06413 .   #> rain:soilp   1 0.96231      1.2      2     62   0.30389     #> Residuals   63                                              #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_leafLog,which=1:3,n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-5-transforming-edgars-data","dir":"Articles","previous_headings":"","what":"Exercise 11.5: Transforming Edgar’s data?","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Fit linear model predict petal length remaining flower variables check assumptions. evidence lack--fit? (imply problem multivariate normality assumptions.) plot chunk ex11.5Un doesn’t look bad, moderate fan-shape, evident increasing trend scale-location plot, drifts outside simulation envelope. trend strong however, y-axis predictions ranging 0.6 1 (varying factor 1.5). log-transformation help ? plot chunk ex11.5Log Oh well ’s disappointing! log-transformation hasn’t made things much better, reversing fan-shape trend scale-location plot (although strong trend). Residuals now appear quite non-normal long tails, especially lower end. issue largely petal variables (blue/green), get slightly better plot log-transformed sepal measurements. main issue saw previously - increasing trend scale-location plot - however less issue now (note trend line covers smaller range values, 0.7 0.9).","code":"data(iris) iris$Yflower = as.matrix(iris[,1:4]) ft_iris = lm(Yflower~Species,data=iris) par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_iris,which=1:3,n.sim=99) iris$YfLog = as.matrix(log(iris[,1:4])) ft_irisLog = lm(YfLog~Species,data=iris) par(mfrow=c(1,3),mar=c(3,3,1.5,0.5),mgp=c(1.75,0.75,0)) plotenvelope(ft_irisLog,which=1:3,n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-5-preparing-spider-data-for-analysis-on-lme4-or-glmmtmb","dir":"Articles","previous_headings":"","what":"Code Box 11.5: Preparing spider data for analysis on lme4 or glmmTMB","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Petrus’s data Exercise 11.3 available mvabund package, abundances 12 different species. First calculate abundance three abundant genera:","code":"library(mvabund) library(reshape2) data(spider) Alop=apply(spider$abund[,1:3],1,sum) Pard=apply(spider$abund[,7:10],1,sum) Troc = spider$abund[,11] spidGeneraWide = data.frame(rows=1:28,scale(spider$x[,c(1,4)]), Alop,Pard,Troc) head(spidGeneraWide) #>   rows   soil.dry       moss Alop Pard Troc #> 1    1 -0.1720862  0.6289186   35  117   57 #> 2    2  0.7146218 -0.6870394    2   54   65 #> 3    3  0.1062154  0.1916410   37   93   66 #> 4    4  0.2507444  0.1916410    8  131   86 #> 5    5  0.6728333 -1.4299919   21  214   91 #> 6    6  1.1247181  0.1916410    6   62   63 spiderGeneraLong = melt(spidGeneraWide,id=c(\"rows\",\"soil.dry\",\"moss\")) names(spiderGeneraLong)[4:5] = c(\"genus\",\"abundance\") head(spiderGeneraLong) #>   rows   soil.dry       moss genus abundance #> 1    1 -0.1720862  0.6289186  Alop        35 #> 2    2  0.7146218 -0.6870394  Alop         2 #> 3    3  0.1062154  0.1916410  Alop        37 #> 4    4  0.2507444  0.1916410  Alop         8 #> 5    5  0.6728333 -1.4299919  Alop        21 #> 6    6  1.1247181  0.1916410  Alop         6"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-6-fitting-a-hierarchical-glm-to-spider-data-on-glmmtmb","dir":"Articles","previous_headings":"","what":"Code Box 11.6: Fitting a hierarchical GLM to spider data on glmmTMB","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Can see differences response different spider genera environmental conditions? Pard Trop seem increase response soil.dry, significantly , whereas Alop decreases. suggestion difference moss response well, difference 0.93 slope Pard Troc, reasonably large compared standard errors.","code":"library(glmmTMB) spid_glmm = glmmTMB(abundance~genus+soil.dry:genus+moss:genus  +(0+genus|rows), family=\"poisson\",data=spiderGeneraLong) summary(spid_glmm) #>  Family: poisson  ( log ) #> Formula:          abundance ~ genus + soil.dry:genus + moss:genus + (0 + genus |      rows) #> Data: spiderGeneraLong #>  #>      AIC      BIC   logLik deviance df.resid  #>    681.1    717.5   -325.5    651.1       69  #>  #> Random effects: #>  #> Conditional model: #>  Groups Name      Variance Std.Dev. Corr       #>  rows   genusAlop 1.3576   1.1652              #>         genusPard 1.5900   1.2610   0.75       #>         genusTroc 0.7682   0.8765   0.59 0.82  #> Number of obs: 84, groups:  rows, 28 #>  #> Conditional model: #>                    Estimate Std. Error z value Pr(>|z|)     #> (Intercept)          1.9843     0.2463   8.058 7.76e-16 *** #> genusPard            1.0846     0.2100   5.165 2.41e-07 *** #> genusTroc            0.6072     0.2335   2.600  0.00932 **  #> genusAlop:soil.dry  -0.6012     0.3284  -1.831  0.06716 .   #> genusPard:soil.dry   1.4041     0.3704   3.791  0.00015 *** #> genusTroc:soil.dry   1.4108     0.2950   4.782 1.74e-06 *** #> genusAlop:moss       0.3435     0.3322   1.034  0.30103     #> genusPard:moss       0.7361     0.3547   2.075  0.03796 *   #> genusTroc:moss      -0.2033     0.2648  -0.768  0.44264     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-7-mcmcglmm-fit-to-petruss-spider-genus-data","dir":"Articles","previous_headings":"","what":"Code Box 11.7: MCMCglmm fit to Petrus’s spider genus data","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"results compare model fitted using glmmTMB? Estimates parameters mean model (intercepts, slopes) quite similar seem similar levels significance also. Variance-covariance parameters random effects presented different format however – MCMCglmm directly reports values \\(\\boldsymbol{\\Sigma}\\), whereas glmmTMB reports variances correlations. can convert MCMCglmm values correlations, best done taking MCMC samples, transforming individual one, finding posterior mean: returns value similar correlation glmmTMB output. Note however variances quite different, e.g. Alop posterior mean 1.97 MCMCglmm estimate 1.38 glmmTMB. reason glmmTMB uses maximum likelihood, point estimate corresponds closely posterior mode posterior mean. Estimating posterior densities using histograms: plot chunk code11.7hists posterior modes show much closer agreement glmmTMB variance estimates, although still tending slightly larger.","code":"library(MCMCglmm) set.seed(1) ft_MCMC = MCMCglmm(cbind(Alop,Pard,Troc)~trait+soil.dry:trait+moss:trait,    rcov=~us(trait):units,data=spidGeneraWide, family=rep(\"poisson\",3)) #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000214 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.186036 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.207750 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.214000 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.214607 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.219536 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.220250 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.222143 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.221500 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.221071 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.222321 #>  #>                        MCMC iteration = 11000 #>  #>  Acceptance ratio for liability set 1 = 0.219536 #>  #>                        MCMC iteration = 12000 #>  #>  Acceptance ratio for liability set 1 = 0.217964 #>  #>                        MCMC iteration = 13000 #>  #>  Acceptance ratio for liability set 1 = 0.218321 summary(ft_MCMC) #>  #>  Iterations = 3001:12991 #>  Thinning interval  = 10 #>  Sample size  = 1000  #>  #>  DIC: 515.7024  #>  #>  R-structure:  ~us(trait):units #>  #>                           post.mean l-95% CI u-95% CI eff.samp #> traitAlop:traitAlop.units    1.9674   0.6896    3.396    171.9 #> traitPard:traitAlop.units    1.5216   0.5111    2.619    750.4 #> traitTroc:traitAlop.units    0.8476   0.1973    1.620    735.5 #> traitAlop:traitPard.units    1.5216   0.5111    2.619    750.4 #> traitPard:traitPard.units    2.1081   1.0427    3.557    624.8 #> traitTroc:traitPard.units    1.2399   0.5337    2.169    738.7 #> traitAlop:traitTroc.units    0.8476   0.1973    1.620    735.5 #> traitPard:traitTroc.units    1.2399   0.5337    2.169    738.7 #> traitTroc:traitTroc.units    1.0877   0.4375    1.837    545.8 #>  #>  Location effects: cbind(Alop, Pard, Troc) ~ trait + soil.dry:trait + moss:trait  #>  #>                    post.mean l-95% CI u-95% CI eff.samp  pMCMC     #> (Intercept)          1.96106  1.40677  2.56137    564.0 <0.001 *** #> traitPard            1.10316  0.62128  1.55902    307.0 <0.001 *** #> traitTroc            0.60433  0.07406  1.12209    314.2  0.028 *   #> traitAlop:soil.dry  -0.60527 -1.38983  0.14573    797.5  0.102     #> traitPard:soil.dry   1.44406  0.61769  2.22122    741.5 <0.001 *** #> traitTroc:soil.dry   1.46411  0.76420  2.04801    353.2 <0.001 *** #> traitAlop:moss       0.35515 -0.34662  1.14501    683.7  0.332     #> traitPard:moss       0.76450 -0.01952  1.60829    902.7  0.064 .   #> traitTroc:moss      -0.19314 -0.76568  0.37943    646.0  0.498     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 mean(ft_MCMC$VCV[,2]/sqrt(ft_MCMC$VCV[,1]*ft_MCMC$VCV[,5])) #> [1] 0.7483585 par(mfrow=c(1,3),mgp=c(1.75,0.75,0),mar=c(3,3,1,1)) hist(ft_MCMC$VCV[,1],breaks=15,xlab=\"Alop variance\",main=\"\") abline(v=summary(spid_glmm)$varcor$cond$rows[1,1],col=\"red\") hist(ft_MCMC$VCV[,5],breaks=15,xlab=\"Pard variance\",main=\"\") abline(v=summary(spid_glmm)$varcor$cond$rows[2,2],col=\"red\") hist(ft_MCMC$VCV[,9],breaks=15,xlab=\"Troc variance\",main=\"\") abline(v=summary(spid_glmm)$varcor$cond$rows[3,3],col=\"red\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-6-different-effects-on-different-spider-genera","dir":"Articles","previous_headings":"","what":"Exercise 11.6: Different effects on different spider genera?","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Use spiderGeneraLong fit model assumes spiders respond way environment. Now use anova compare model spid_glmm. evidence different spider genera respond different ways environment? Yes!","code":"spid_sameResponse = glmmTMB(abundance~genus+soil.dry+moss  +(0+genus|rows), family=\"poisson\",data=spiderGeneraLong) summary(spid_sameResponse) #>  Family: poisson  ( log ) #> Formula:          abundance ~ genus + soil.dry + moss + (0 + genus | rows) #> Data: spiderGeneraLong #>  #>      AIC      BIC   logLik deviance df.resid  #>    736.6    763.3   -357.3    714.6       73  #>  #> Random effects: #>  #> Conditional model: #>  Groups Name      Variance Std.Dev. Corr       #>  rows   genusAlop 6.6327   2.5754              #>         genusPard 2.3031   1.5176   0.63       #>         genusTroc 0.7952   0.8917   0.10 0.67  #> Number of obs: 84, groups:  rows, 28 #>  #> Conditional model: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   1.8623     0.5123   3.635 0.000278 *** #> genusPard     1.2207     0.4187   2.915 0.003553 **  #> genusTroc     0.7931     0.5335   1.487 0.137088     #> soil.dry      0.9635     0.5288   1.822 0.068451 .   #> moss         -0.3894     0.2991  -1.302 0.192993     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 anova(spid_sameResponse,spid_glmm) #> Data: spiderGeneraLong #> Models: #> spid_sameResponse: abundance ~ genus + soil.dry + moss + (0 + genus | rows), zi=~0, disp=~1 #> spid_glmm: abundance ~ genus + soil.dry:genus + moss:genus + (0 + genus | , zi=~0, disp=~1 #> spid_glmm:     rows), zi=~0, disp=~1 #>                   Df    AIC    BIC  logLik deviance  Chisq Chi Df Pr(>Chisq)     #> spid_sameResponse 11 736.58 763.32 -357.29   714.58                              #> spid_glmm         15 681.08 717.54 -325.54   651.08 63.505      4  5.313e-13 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-for-figure-11-4","dir":"Articles","previous_headings":"","what":"Code for Figure 11.4","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"simplify referencing parameters let’s refit intercept model plot chunk fig11.4 note plot excludes absences… taxa. situations many zeros, lot data missing plot constructed way, unless get creative!","code":"spid_glmm0 = glmmTMB(abundance~0+genus+soil.dry:genus+moss:genus    +(0+genus|rows), family=\"poisson\",data=spiderGeneraLong)    par(mgp=c(2,0.75,0),mar=c(3,3,0.5,0.5))   plot(log(abundance)~soil.dry,data=spiderGeneraLong,type=\"n\",yaxt=\"n\",        ylab=\"Abundance[log scale]\",xlab=\"Soil dryness [standardised]\")   yTicks = c(1,2,5,10,20,50,100)   axis(2,at=log(yTicks),labels=yTicks)   for(iVar in 1:nlevels(spiderGeneraLong$genus))   {     points(log(abundance)~soil.dry,            data=spiderGeneraLong[spiderGeneraLong$genus==levels(spiderGeneraLong$genus)[iVar],],col=iVar)     abline(spid_glmm0$fit$par[iVar], spid_glmm0$fit$par[3+iVar],col=iVar)   }   legend(\"topleft\",levels(spiderGeneraLong$genus),col=1:3,pch=1,cex=0.9,y.intersp=1.0)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-8-diagnostic-plots-for-a-hierarchical-glm-of-petruss-spider-data","dir":"Articles","previous_headings":"","what":"Code Box 11.8: Diagnostic plots for a hierarchical GLM of Petrus’s spider data","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"plot chunk code11.8 plots tell us model assumptions? evidence plots violations model assumptions.","code":"par(mfrow=c(1,2),mgp=c(2,0.75,0),mar=c(3,3,1,1)) library(DHARMa) spidFits = predict(spid_glmm,re.form=NA) res_spid = qnorm( simulateResiduals(spid_glmm)$scaledResiduals ) plot(spidFits,res_spid,col=spiderGeneraLong$genus, xlab=\"Fitted values\", ylab=\"Dunn-Smyth residuals\") abline(h=0,col=\"olivedrab\") addSmooth(spidFits,res_spid) # a function in ecostats package to add smoother and confidence band qqenvelope(res_spid,col=spiderGeneraLong$genus)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"code-box-11-9-diagnosing-convergence-in-a-mcmcglmm-fit","dir":"Articles","previous_headings":"","what":"Code Box 11.9: Diagnosing convergence in a MCMCglmm fit","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"plot chunk code11.9","code":"set.seed(2) ft_MCMC2=MCMCglmm(cbind(Alop,Pard,Troc)~trait+soil.dry:trait+moss:trait, rcov=~us(trait):units,data=spidGeneraWide, family=rep(\"poisson\",3)) #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000286 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.185036 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.205036 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.213000 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.229357 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.230929 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.236750 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.238821 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.231536 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.233607 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.229786 #>  #>                        MCMC iteration = 11000 #>  #>  Acceptance ratio for liability set 1 = 0.237571 #>  #>                        MCMC iteration = 12000 #>  #>  Acceptance ratio for liability set 1 = 0.237393 #>  #>                        MCMC iteration = 13000 #>  #>  Acceptance ratio for liability set 1 = 0.233786 set.seed(3) ft_MCMC3=MCMCglmm(cbind(Alop,Pard,Troc)~trait+soil.dry:trait+moss:trait, rcov=~us(trait):units,data=spidGeneraWide, family=rep(\"poisson\",3)) #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000321 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.181964 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.210643 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.214429 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.236429 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.243071 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.238143 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.238464 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.244143 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.242000 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.235464 #>  #>                        MCMC iteration = 11000 #>  #>  Acceptance ratio for liability set 1 = 0.238321 #>  #>                        MCMC iteration = 12000 #>  #>  Acceptance ratio for liability set 1 = 0.245214 #>  #>                        MCMC iteration = 13000 #>  #>  Acceptance ratio for liability set 1 = 0.238143 whichPlot=c(1:3,5:6,9) # indices of unique variance-covariance parameters par(mfrow=c(length(whichPlot),1),mar=c(2,0.5,1.5,0)) for(iPlot in whichPlot) { plot.default(ft_MCMC$VCV[,iPlot],type=\"l\",lwd=0.3,yaxt=\"n\") lines(ft_MCMC2$VCV[,iPlot],col=2,lwd=0.3) lines(ft_MCMC3$VCV[,iPlot],col=3,lwd=0.3) mtext(colnames(ft_MCMC$VCV)[iPlot]) } gelman.diag(mcmc.list(ft_MCMC$VCV[,whichPlot],ft_MCMC2$VCV[,whichPlot], ft_MCMC3$VCV[,whichPlot])) #> Potential scale reduction factors: #>  #>                           Point est. Upper C.I. #> traitAlop:traitAlop.units       1.00       1.00 #> traitPard:traitAlop.units       1.00       1.01 #> traitTroc:traitAlop.units       1.00       1.00 #> traitPard:traitPard.units       1.01       1.02 #> traitTroc:traitPard.units       1.00       1.01 #> traitTroc:traitTroc.units       1.00       1.01 #>  #> Multivariate psrf #>  #> 1.02"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter11Solutions.html","id":"exercise-11-7-non-converging-model-for-petruss-alopecosa-species","dir":"Articles","previous_headings":"","what":"Exercise 11.7: Non-converging model for Petrus’s Alopecosa species","title":"Chapter 11 -- Multivariate analysis -- Exercise solutions and Code Boxes","text":"Try fit hierarchical GLM, along lines Code Boxes 11.6 11.7, three Alopecosa species. First try using glmmTMB: Uh oh, non-convergence. Try using MCMCglmm: plot chunk ex11.7mcmc Roughly every second run returns error, sometimes doesn’t happen. can see issues however trace plot, different chains clearly mix – able distinguish trend colour, parameters, one chain (colour) values consistently larger another clearly sampling distribution. Gelman-Rubin statistics close 1!","code":"spider3Wide = data.frame(rows=1:28, scale(spider$x[,c(1,4)]), spider$abund[,1:3]) spider3Long = melt(spider3Wide,id=c(\"rows\",\"soil.dry\",\"moss\")) names(spider3Long)[4:5] = c(\"species\",\"abundance\") head(spider3Long) #>   rows   soil.dry       moss  species abundance #> 1    1 -0.1720862  0.6289186 Alopacce        25 #> 2    2  0.7146218 -0.6870394 Alopacce         0 #> 3    3  0.1062154  0.1916410 Alopacce        15 #> 4    4  0.2507444  0.1916410 Alopacce         2 #> 5    5  0.6728333 -1.4299919 Alopacce         1 #> 6    6  1.1247181  0.1916410 Alopacce         0  spid_glmm3 = glmmTMB(abundance~species+soil.dry:species+moss:species    +(0+species|rows), family=\"poisson\",data=spider3Long) #> Warning in fitTMB(TMBStruc): Model convergence problem; non-positive-definite Hessian matrix. #> See vignette('troubleshooting') #> Warning in fitTMB(TMBStruc): Model convergence problem; singular convergence (7). See #> vignette('troubleshooting') set.seed(1) ft_MCMC2=try(MCMCglmm(cbind(Alopacce,Alopcune,Alopfabr)~trait+soil.dry:trait+moss:trait, rcov=~us(trait):units,data=spider3Wide, family=rep(\"poisson\",3))) #this one returns an error #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000214 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.182714 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.018536 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.009429 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.014821 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.013643 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.008107 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.005179 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.007893 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.003679 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.002143 #> Error in MCMCglmm(cbind(Alopacce, Alopcune, Alopfabr) ~ trait + soil.dry:trait +  :  #>   ill-conditioned G/R structure (CN = 35410684926832716.000000): use proper priors if you haven't or rescale data if you have set.seed(3) ft_MCMC=MCMCglmm(cbind(Alopacce,Alopcune,Alopfabr)~trait+soil.dry:trait+moss:trait, rcov=~us(trait):units,data=spider3Wide, family=rep(\"poisson\",3)) #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000250 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.182607 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.062679 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.035679 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.018500 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.011643 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.009071 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.004071 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.002714 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.001750 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.002179 #>  #>                        MCMC iteration = 11000 #>  #>  Acceptance ratio for liability set 1 = 0.001571 #>  #>                        MCMC iteration = 12000 #>  #>  Acceptance ratio for liability set 1 = 0.002036 #>  #>                        MCMC iteration = 13000 #>  #>  Acceptance ratio for liability set 1 = 0.002321 set.seed(5) ft_MCMC2=MCMCglmm(cbind(Alopacce,Alopcune,Alopfabr)~trait+soil.dry:trait+moss:trait, rcov=~us(trait):units,data=spider3Wide, family=rep(\"poisson\",3)) #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000143 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.237036 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.054286 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.045607 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.013393 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.012286 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.010893 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.005464 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.004714 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.003929 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.002464 #>  #>                        MCMC iteration = 11000 #>  #>  Acceptance ratio for liability set 1 = 0.002179 #>  #>                        MCMC iteration = 12000 #>  #>  Acceptance ratio for liability set 1 = 0.003607 #>  #>                        MCMC iteration = 13000 #>  #>  Acceptance ratio for liability set 1 = 0.002357 set.seed(6) ft_MCMC3=MCMCglmm(cbind(Alopacce,Alopcune,Alopfabr)~trait+soil.dry:trait+moss:trait, rcov=~us(trait):units,data=spider3Wide, family=rep(\"poisson\",3)) #>  #>                        MCMC iteration = 0 #>  #>  Acceptance ratio for liability set 1 = 0.000250 #>  #>                        MCMC iteration = 1000 #>  #>  Acceptance ratio for liability set 1 = 0.145679 #>  #>                        MCMC iteration = 2000 #>  #>  Acceptance ratio for liability set 1 = 0.029393 #>  #>                        MCMC iteration = 3000 #>  #>  Acceptance ratio for liability set 1 = 0.039321 #>  #>                        MCMC iteration = 4000 #>  #>  Acceptance ratio for liability set 1 = 0.022536 #>  #>                        MCMC iteration = 5000 #>  #>  Acceptance ratio for liability set 1 = 0.004929 #>  #>                        MCMC iteration = 6000 #>  #>  Acceptance ratio for liability set 1 = 0.004786 #>  #>                        MCMC iteration = 7000 #>  #>  Acceptance ratio for liability set 1 = 0.006286 #>  #>                        MCMC iteration = 8000 #>  #>  Acceptance ratio for liability set 1 = 0.006536 #>  #>                        MCMC iteration = 9000 #>  #>  Acceptance ratio for liability set 1 = 0.004929 #>  #>                        MCMC iteration = 10000 #>  #>  Acceptance ratio for liability set 1 = 0.002000 #>  #>                        MCMC iteration = 11000 #>  #>  Acceptance ratio for liability set 1 = 0.001393 #>  #>                        MCMC iteration = 12000 #>  #>  Acceptance ratio for liability set 1 = 0.001893 #>  #>                        MCMC iteration = 13000 #>  #>  Acceptance ratio for liability set 1 = 0.000964 whichPlot=c(1:3,5:6,9) # indices of unique variance-covariance parameters par(mfrow=c(length(whichPlot),1),mar=c(2,0.5,1.5,0)) for(iPlot in whichPlot) { plot.default(ft_MCMC$VCV[,iPlot],type=\"l\",lwd=0.3,yaxt=\"n\") lines(ft_MCMC2$VCV[,iPlot],col=2,lwd=0.3) lines(ft_MCMC3$VCV[,iPlot],col=3,lwd=0.3) mtext(colnames(ft_MCMC$VCV)[iPlot]) } gelman.diag(mcmc.list(ft_MCMC$VCV[,whichPlot],ft_MCMC2$VCV[,whichPlot], ft_MCMC3$VCV[,whichPlot])) #> Potential scale reduction factors: #>  #>                                   Point est. Upper C.I. #> traitAlopacce:traitAlopacce.units       1.74       2.97 #> traitAlopcune:traitAlopacce.units       1.31       1.90 #> traitAlopfabr:traitAlopacce.units       2.87       6.04 #> traitAlopcune:traitAlopcune.units       1.45       2.31 #> traitAlopfabr:traitAlopcune.units       2.56       4.96 #> traitAlopfabr:traitAlopfabr.units       3.00       9.29 #>  #> Multivariate psrf #>  #> 4.53"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"exercise-12-1-flower-size-and-shape","dir":"Articles","previous_headings":"","what":"Exercise 12.1: Flower size and shape","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"three species Iris differ terms flower size shape? sort graph Edgar produce visualise species differ flower size shape? two response variables guess well plotting response one---time try plotting simultaneously using ordination (factor analysis, example). either plot want label different species differently see variation across species.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"exercise-12-2-bush-regeneration-and-invertebrate-counts","dir":"Articles","previous_headings":"","what":"Exercise 12.2: Bush regeneration and invertebrate counts","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"evidence change invertebrate communities due bush regeneration efforts? sort graph Anthony produce visualise effects bush regeneration invertebrate communities? Anthony bunch response variables guess well plotting response one---time try plotting simultaneously using ordination. counts need something works non-Gaussian responses like generalised latent variable models. either plot want label different species differently see variation revegetated control plots.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-1-plotting-the-bush-regeneration-data-of-exercise-12-1-using-mvabund-","dir":"Articles","previous_headings":"","what":"Code Box 12.1: Plotting the bush regeneration data of Exercise 12.1 using mvabund.","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"plot chunk code12.1 Can see taxa seem associated bush regeneration? seem less invertebrates control plots Collembola, Acarina, Coloeptera, Amphipoda maybe Orders.","code":"library(mvabund) library(ecostats) data(reveg) reveg$abundMV=mvabund(reveg$abund) #to treat data as multivariate plot(abundMV~treatment, data=reveg) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR #> Only the variables Collembola, Acarina, Formicidae, Coleoptera, Diptera, Amphipoda, Isopoda, Larvae, Hemiptera, Soleolifera, Hymenoptera, Araneae were included in the plot  #> (the variables with highest total abundance)."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-2-a-pca-of-edgars-iris-data","dir":"Articles","previous_headings":"","what":"Code Box 12.2: A PCA of Edgar’s Iris data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"plot chunk code12.2","code":"data(\"iris\") pc = princomp(iris[,1:4],cor=TRUE) pc #> Call: #> princomp(x = iris[, 1:4], cor = TRUE) #>  #> Standard deviations: #>    Comp.1    Comp.2    Comp.3    Comp.4  #> 1.7083611 0.9560494 0.3830886 0.1439265  #>  #>  4  variables and  150 observations. loadings(pc) #>  #> Loadings: #>              Comp.1 Comp.2 Comp.3 Comp.4 #> Sepal.Length  0.521  0.377  0.720  0.261 #> Sepal.Width  -0.269  0.923 -0.244 -0.124 #> Petal.Length  0.580        -0.142 -0.801 #> Petal.Width   0.565        -0.634  0.524 #>  #>                Comp.1 Comp.2 Comp.3 Comp.4 #> SS loadings      1.00   1.00   1.00   1.00 #> Proportion Var   0.25   0.25   0.25   0.25 #> Cumulative Var   0.25   0.50   0.75   1.00 biplot( pc, xlabs=rep(\"\\u00B0\",dim(iris)[1]) )"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-3-factor-analysis-of-the-iris-data","dir":"Articles","previous_headings":"","what":"Code Box 12.3: Factor analysis of the Iris data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"results compare principal components analysis? look awfully similar. second factor looks little different, flipped around way (big vlues mean narrow sepals), also postive loadings petal variables. interpreted measure large petals relative sepal width: big scores large petals narrow sepals, low scores small petals wide sepals. Recall previously, second PC pretty much just measure wide sepals , now relative petal size.","code":"library(psych) fa_iris <- fa(iris[,1:4], nfactors=2, fm=\"ml\", rotate=\"varimax\") loadings(fa_iris) #>  #> Loadings: #>              ML1    ML2    #> Sepal.Length  0.997        #> Sepal.Width  -0.115 -0.665 #> Petal.Length  0.871  0.486 #> Petal.Width   0.818  0.514 #>  #>                  ML1   ML2 #> SS loadings    2.436 0.942 #> Proportion Var 0.609 0.236 #> Cumulative Var 0.609 0.844"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-4-assumption-checking-for-a-factor-analysis-of-the-iris-data","dir":"Articles","previous_headings":"","what":"Code Box 12.4: Assumption checking for a factor analysis of the Iris data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"plot chunk code12.4 plot chunk code12.4matrix (Note plotenvelope run just 59 iterations, speed computation time.)","code":"par(mfrow=c(2,2),mar=c(3,3,2,1),mgp=c(1.75,0.75,0)) for(iVar in 1:4) {   irisIvar = iris[,iVar]   plotenvelope(lm(irisIvar~fa_iris$scores), which=1, col=iris$Species, main=print(names(iris)[iVar]), n.sim=99) } #> [1] \"Sepal.Length\" #> [1] \"Sepal.Width\" #> [1] \"Petal.Length\" #> [1] \"Petal.Width\" plot(iris[,1:4],col=iris$Species)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"exercise-12-4-a-factor-analysis-for-anthonys-data","dir":"Articles","previous_headings":"","what":"Exercise 12.4: A factor analysis for Anthony’s data(?)","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"Load Anthony’s revegetation data (stored reveg ecostats package) factor analysis (two factors). might able get solution using maximum likelihood estimation (fm=“ml”), case, try fitting using without specifying fm argument (tries minimise residuals). returned concerning warnings fit model :) Check assumptions, fitting linear model response variables, function factor scores. plot chunk ex12.4RFplots plot chunk ex12.4QQplots Can see issues factor analysis assumptions? ten observations always hard see issues, residual plots huge error bars ! points outside normal quantile simulation envelopes several plots, suggestion right-skew (occasional large value). Note also fitted values go zero many species concerning considering modelling counts!","code":"data(reveg) library(psych) fa_reveg <- try(fa(reveg$abund, nfactors=2, fm=\"ml\", rotate=\"varimax\")) #> Warning in cor.smooth(R): Matrix was not positive definite, smoothing was done #> In smc, smcs < 0 were set to .0 #> Warning in cor.smooth(R): Matrix was not positive definite, smoothing was done #> In smc, smcs < 0 were set to .0 #> Warning in log(e): NaNs produced #> Error in optim(start, FAfn, FAgr, method = \"L-BFGS-B\", lower = 0.005,  :  #>   L-BFGS-B needs finite values of 'fn' fa_reveg <- fa(reveg$abund, nfactors=2) #> Warning in cor.smooth(R): Matrix was not positive definite, smoothing was done #> In smc, smcs < 0 were set to .0 #> Warning in cor.smooth(R): Matrix was not positive definite, smoothing was done #> In smc, smcs < 0 were set to .0 #> Warning in cor.smooth(R): Matrix was not positive definite, smoothing was done #> In smc, smcs < 0 were set to .0 #> Loading required namespace: GPArotation #> Warning in cor.smooth(r): Matrix was not positive definite, smoothing was done #> Warning in fa.stats(r = r, f = f, phi = phi, n.obs = n.obs, np.obs = np.obs, : The estimated #> weights for the factor scores are probably incorrect. Try a different factor score estimation #> method. #> In factor.scores, the correlation matrix is singular, an approximation is used #> Warning in cor.smooth(r): Matrix was not positive definite, smoothing was done par(mfrow=c(3,3),mar=c(3,3,2,1),mgp=c(1.75,0.75,0)) for(iVar in 1:9) {   y=reveg$abund[,iVar]   plotenvelope(lm(y~fa_reveg$scores), which=1,main=names(reveg$abund)[iVar], n.sim=99) } par(mfrow=c(3,3),mar=c(3,3,2,1),mgp=c(1.75,0.75,0)) for(iVar in 1:9) {   y=reveg$abund[,iVar]   plotenvelope(lm(y~fa_reveg$scores), which=2,main=names(reveg$abund)[iVar], n.sim=99) }"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-5-choosing-the-number-of-factors-for-the-iris-data","dir":"Articles","previous_headings":"","what":"Code Box 12.5: Choosing the number of factors for the iris data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"plot chunk code12.5scree many factors supported data? One, smallest BIC.","code":"plot(fa_iris$values,type=\"l\") nFactors=3 # to compare models with up to 3 factors BICs = rep(NA,nFactors) # define the vector that BIC values go in names(BICs) = 1:nFactors # name its values according to #factors for(iFactors in 1:nFactors) {   fa_iris <- fa(iris[,1:4], nfactors=iFactors, fm=\"ml\", rotate=\"varimax\")   BICs[iFactors] = fa_iris$objective - log(fa_iris$nh) * fa_iris$dof } BICs #>         1         2         3  #> -9.436629  5.171006 15.031906"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-6-a-generalised-latent-variable-model-for-anthonys-revegetation-data","dir":"Articles","previous_headings":"","what":"Code Box 12.6: A generalised latent variable model for Anthony’s revegetation data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"Repeating several times usually returns answer -689.3, can confident (close ) maximum likelihood solution. get biplot solution: plot chunk code12.6bi plot chunk code12.6plot","code":"data(reveg) library(gllvm) #>  #> Attaching package: 'gllvm' #> The following objects are masked from 'package:VGAM': #>  #>     AICc, nobs, predict, vcov #> The following objects are masked from 'package:stats4': #>  #>     nobs, vcov #> The following object is masked from 'package:vegan': #>  #>     ordiplot #> The following object is masked from 'package:mvabund': #>  #>     coefplot #> The following objects are masked from 'package:stats': #>  #>     nobs, predict, simulate, vcov reveg_LVM = gllvm(reveg$abund, num.lv=2, family=\"negative.binomial\", trace=TRUE, jitter.var=0.2) logLik(reveg_LVM) #> 'log Lik.' -675.5768 (df=95) ordiplot(reveg_LVM, col=as.numeric(reveg$treatment), biplot=TRUE, ind.spp=12) par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plot(reveg_LVM,which=c(1,2,5))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"exercise-12-5-checking-analysis-decisions-for-anthonys-revegetation-data","dir":"Articles","previous_headings":"","what":"Exercise 12.5: Checking analysis decisions for Anthony’s revegetation data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"Code Box 12.6, negative binomial model fitted, using two latent variables. two latent variables needed, use , less? Fit models varying number latent variables. model fits data best, according BIC? two latent variable models winner! Fit Poisson model data check assumptions. signs overdispersion? ’ll go two latent variable models, account looking best . plot chunk ex12.5 Wow look good! clear fan-shape residual vs fits plot, also shows increasing trend scale-location plot. Points normal quantile plot well outside bounds sides, frequently falling -5 5 (expect values -3 3). strong signs overdispersion.","code":"reveg_LVM1 = gllvm(reveg$abund, num.lv=1, family=\"negative.binomial\", trace=TRUE, jitter.var=0.2) reveg_LVM2 = gllvm(reveg$abund, num.lv=2, family=\"negative.binomial\", trace=TRUE, jitter.var=0.2) reveg_LVM3 = gllvm(reveg$abund, num.lv=3, family=\"negative.binomial\", trace=TRUE, jitter.var=0.2) reveg_LVM4 = gllvm(reveg$abund, num.lv=4, family=\"negative.binomial\", trace=TRUE, jitter.var=0.2) reveg_LVM5 = gllvm(reveg$abund, num.lv=5, family=\"negative.binomial\", trace=TRUE, jitter.var=0.2) BIC(reveg_LVM1,reveg_LVM2,reveg_LVM3,reveg_LVM4,reveg_LVM5) #>             df      BIC #> reveg_LVM1  72 1557.821 #> reveg_LVM2  95 1578.730 #> reveg_LVM3 117 1575.276 #> reveg_LVM4 138 1587.444 #> reveg_LVM5 158 1633.496 reveg_LVM1 = gllvm(reveg$abund, num.lv=2, family=\"poisson\", trace=TRUE, jitter.var=0.2) par(mfrow=c(1,3)) plot(reveg_LVM1,which=c(1,2,5))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-7-a-non-metric-multi-dimensional-scaling-ordination-of-anthonys-data","dir":"Articles","previous_headings":"","what":"Code Box 12.7: A non-metric multi-dimensional scaling ordination of Anthony’s data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"plot chunk code12.7","code":"library(vegan) ord_mds=metaMDS(reveg$abund) #> Square root transformation #> Wisconsin double standardization #> Run 0 stress 0.1611237  #> Run 1 stress 0.1687788  #> Run 2 stress 0.2684195  #> Run 3 stress 0.1611236  #> ... New best solution #> ... Procrustes: rmse 0.0004585684  max resid 0.0008197316  #> ... Similar to previous best #> Run 4 stress 0.2062042  #> Run 5 stress 0.3314815  #> Run 6 stress 0.1611239  #> ... Procrustes: rmse 0.0005366897  max resid 0.0009748253  #> ... Similar to previous best #> Run 7 stress 0.1680773  #> Run 8 stress 0.1680773  #> Run 9 stress 0.1641165  #> Run 10 stress 0.2022877  #> Run 11 stress 0.1641165  #> Run 12 stress 0.1680773  #> Run 13 stress 0.1680773  #> Run 14 stress 0.1687788  #> Run 15 stress 0.1611236  #> ... Procrustes: rmse 0.0001032944  max resid 0.0001868105  #> ... Similar to previous best #> Run 16 stress 0.1880315  #> Run 17 stress 0.1880316  #> Run 18 stress 0.1611238  #> ... Procrustes: rmse 0.0006247713  max resid 0.001114103  #> ... Similar to previous best #> Run 19 stress 0.1880315  #> Run 20 stress 0.1611236  #> ... New best solution #> ... Procrustes: rmse 0.0002105525  max resid 0.0003734638  #> ... Similar to previous best #> *** Solution reached plot(ord_mds$points,pch=as.numeric(reveg$treatment),col=reveg$treatment)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"exercise-12-6-mds-ordinations-of-coral-data","dir":"Articles","previous_headings":"","what":"Exercise 12.6: MDS ordinations of coral data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"Construct MDS plot data, using Bray-Curtis distance (default), colour-code symbols year sampling. plot chunk ex12.6ordination plot agree Warwick et al. (1990) interpretation? [Warwick et al. (1990) used dataset MDS ordinations argue stress increases dispersion coral communities] Yes , 1981 (El Niño disturbance) points close together middle ordination, 1983 (post disturbance) spread around point way apart, suggesting change dispersion. Construct another MDS plot using Euclidean distance log(y+1)-transformed data. plot chunk ex12.6EucOrdination plot agree Warwick et al. (1990) interpretation? Nope – says opposite, much lower dispersion post disturbance. suggestive location effect well, , change mean abundance just variability. Use plot.mvabund function plot coral response variable function time. main pattern see? plot chunk ex12.6plot Convert data presence-absence use gllvm package construct ordination plot chunk ex12.6PA assumptions appear reasonable? interpret plot? plot chunk ex12.6assumptions","code":"library(mvabund) data(tikus) tikusAbund = tikus$abund[1:20,] # for 1981 and 1983 data only tikusAbund = tikusAbund[,apply(tikusAbund,2,sum)>0] # remove zerotons tikus_mds=metaMDS(tikusAbund) #> Square root transformation #> Wisconsin double standardization #> Run 0 stress 0.09863027  #> Run 1 stress 0.1096412  #> Run 2 stress 0.1144806  #> Run 3 stress 0.111816  #> Run 4 stress 0.09970471  #> Run 5 stress 0.1479043  #> Run 6 stress 0.1275178  #> Run 7 stress 0.1093704  #> Run 8 stress 0.09954172  #> Run 9 stress 0.1158263  #> Run 10 stress 0.1165909  #> Run 11 stress 0.10266  #> Run 12 stress 0.1054471  #> Run 13 stress 0.09954171  #> Run 14 stress 0.09954136  #> Run 15 stress 0.1010792  #> Run 16 stress 0.09863103  #> ... Procrustes: rmse 0.000412243  max resid 0.0009883379  #> ... Similar to previous best #> Run 17 stress 0.1078694  #> Run 18 stress 0.09863022  #> ... New best solution #> ... Procrustes: rmse 0.002205194  max resid 0.005495785  #> ... Similar to previous best #> Run 19 stress 0.1078696  #> Run 20 stress 0.1475714  #> *** Solution reached plot(tikus_mds$points,pch=as.numeric(tikus$x$time),col=tikus$x$time) tikus_mdsEuc=metaMDS(log(tikusAbund+1),distance=\"euclidean\") #> Run 0 stress 0.05741195  #> Run 1 stress 0.0574117  #> ... New best solution #> ... Procrustes: rmse 0.0006040334  max resid 0.001755331  #> ... Similar to previous best #> Run 2 stress 0.05741207  #> ... Procrustes: rmse 0.0002360083  max resid 0.0007165394  #> ... Similar to previous best #> Run 3 stress 0.0574119  #> ... Procrustes: rmse 0.0005762837  max resid 0.001677264  #> ... Similar to previous best #> Run 4 stress 0.07425327  #> Run 5 stress 0.05741188  #> ... Procrustes: rmse 0.0005713984  max resid 0.00166317  #> ... Similar to previous best #> Run 6 stress 0.05741211  #> ... Procrustes: rmse 0.0002562405  max resid 0.0007773331  #> ... Similar to previous best #> Run 7 stress 0.05741165  #> ... New best solution #> ... Procrustes: rmse 7.397262e-05  max resid 0.0002236007  #> ... Similar to previous best #> Run 8 stress 0.05741203  #> ... Procrustes: rmse 0.000571415  max resid 0.001643115  #> ... Similar to previous best #> Run 9 stress 0.07425304  #> Run 10 stress 0.05741166  #> ... Procrustes: rmse 4.266406e-05  max resid 0.000132459  #> ... Similar to previous best #> Run 11 stress 0.07425298  #> Run 12 stress 0.05741199  #> ... Procrustes: rmse 0.0005544893  max resid 0.001591259  #> ... Similar to previous best #> Run 13 stress 0.05741213  #> ... Procrustes: rmse 0.0003408697  max resid 0.001033423  #> ... Similar to previous best #> Run 14 stress 0.05741181  #> ... Procrustes: rmse 0.0001640364  max resid 0.0004996793  #> ... Similar to previous best #> Run 15 stress 0.05741166  #> ... Procrustes: rmse 0.0003297201  max resid 0.0009738707  #> ... Similar to previous best #> Run 16 stress 0.05741166  #> ... Procrustes: rmse 3.541119e-05  max resid 0.0001048059  #> ... Similar to previous best #> Run 17 stress 0.05741194  #> ... Procrustes: rmse 0.0005278599  max resid 0.001523223  #> ... Similar to previous best #> Run 18 stress 0.05741206  #> ... Procrustes: rmse 0.0005868747  max resid 0.00168278  #> ... Similar to previous best #> Run 19 stress 0.07425299  #> Run 20 stress 0.05741184  #> ... Procrustes: rmse 0.0001881958  max resid 0.0005719071  #> ... Similar to previous best #> *** Solution reached plot(tikus_mdsEuc$points,pch=as.numeric(tikus$x$time),col=tikus$x$time) tikusMV = mvabund(tikusAbund) plot(tikusMV~tikus$x$time[1:20]) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR #> Only the variables Heliopora.coerulea, Montipora.digitata, Favites.abdita, Favites.chinensis, Platygyra.daedalea, Montipora.foliosa, Pocillopora.damicornis, Acropora.cytherea, Acropora.hyacinthus, Acropora.formosa, Pocillopora.verrucosa, Acropora.pulchra were included in the plot  #> (the variables with highest total abundance). tikusPA = tikusAbund tikusPA[tikusPA>1]=1 tikus_LVM = gllvm(tikusPA, num.lv=2, family=\"binomial\", trace=TRUE, jitter.var=0.2) ordiplot.gllvm(tikus_LVM, s.col=as.numeric(tikus$x$time), biplot=TRUE, ind.spp=12) par(mfrow=c(1,3)) plot(tikus_LVM,which=c(1,2,5))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter12Solutions.html","id":"code-box-12-8-studying-each-observation-separately-for-the-iris-data","dir":"Articles","previous_headings":"","what":"Code Box 12.8: Studying each observation separately for the Iris data","title":"Chapter 12 -- Visualising many responses -- Exercise solutions and Code Boxes","text":"plot chunk code12.8 #remove chunk gllvm updated CRAN:","code":"by(iris, iris$Species, function(dat){ apply(dat[,1:4],2,mean) } ) #> iris$Species: setosa #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>        5.006        3.428        1.462        0.246  #> ----------------------------------------------------------------------  #> iris$Species: versicolor #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>        5.936        2.770        4.260        1.326  #> ----------------------------------------------------------------------  #> iris$Species: virginica #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>        6.588        2.974        5.552        2.026 par(mfrow=c(2,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plot(Sepal.Length~Species,data=iris,xlab=\"\") plot(Sepal.Width~Species,data=iris,xlab=\"\") plot(Petal.Length~Species,data=iris,xlab=\"\") plot(Petal.Width~Species,data=iris,xlab=\"\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"exercise-13-1-brain-size-body-size-relationships","dir":"Articles","previous_headings":"","what":"Exercise 13.1: Brain size-body size relationships","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"brain size scale 2/3 power body size? analyse data answer research question? primarily interested slope coefficient, predictor response, rather two response variables. want avoid regression mean look multivariate problem, use principal components analysis (related methods).","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"exercise-13-2-leaf-economics-and-environment","dir":"Articles","previous_headings":"","what":"Exercise 13.2: Leaf economics and environment","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"steep slope line representing leaf economics spectrum? steeper one? steepness line vary across environments? method [Ian] use ? primarily interested slope coefficients, predictor response, rather two response variables. want avoid regression mean look multivariate problem, use principal components analysis (related methods) generalisations designed compare slopes several axes.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"code-box-13-1-linear-models-of-the-brain-size-body-size-data","dir":"Articles","previous_headings":"","what":"Code Box 13.1: Linear models of the brain size-body size data","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"confidence interval cover 2/3 suggests data fit 2/3 power law. Flipping x y axes, confidence interval cover 3/2, suggests data fit 2/3 power law!","code":"library(MASS) data(Animals) ftBrainBody=lm(log(brain)~log(body),data=Animals) confint(ftBrainBody) #>                 2.5 %    97.5 % #> (Intercept) 1.7056829 3.4041133 #> log(body)   0.3353152 0.6566742 ftBodyBrain=lm(log(body)~log(brain),data=Animals) confint(ftBodyBrain) #>                  2.5 %    97.5 % #> (Intercept) -3.6396580 0.3396307 #> log(brain)   0.8281789 1.6218881"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"code-box-13-2-testing-if-the-brain-body-mass-slope-is-23","dir":"Articles","previous_headings":"","what":"Code Box 13.2: Testing if the brain-body mass slope is 2/3","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"got \\(r=-0.07\\), \\(P=0.71\\) conclude evidence 2/3 power law. Note 2/3 towards centre confidence interval SMA slope. Reversing axes: get exactly test results: \\(r=-0.07\\), \\(P=0.71\\) reach conclusion. Note 3/2 towards centre confidence interval SMA slope. expected? evidence 2/3 power law? expected, (S)MA invariant flipping x y. evidence 2/3 power law.","code":"library(smatr) sma_brainBody = sma(brain~body, data=Animals,log=\"xy\",slope.test=2/3) sma_brainBody #> Call: sma(formula = brain ~ body, data = Animals, log = \"xy\", slope.test = 2/3)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Coefficients: #>             elevation     slope #> estimate    0.8797718 0.6363038 #> lower limit 0.4999123 0.4955982 #> upper limit 1.2596314 0.8169572 #>  #> H0 : variables uncorrelated #> R-squared : 0.6076101  #> P-value : 1.0169e-06  #>  #> ------------------------------------------------------------ #> H0 : slope not different from 0.6666667  #> Test statistic : r= -0.07424 with 26 degrees of freedom under H0 #> P-value : 0.70734 sma(body~brain, data=Animals,log=\"xy\",slope.test=3/2) #> Call: sma(formula = body ~ brain, data = Animals, log = \"xy\", slope.test = 3/2)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Coefficients: #>              elevation    slope #> estimate    -1.3826286 1.571576 #> lower limit -2.2584635 1.224054 #> upper limit -0.5067936 2.017763 #>  #> H0 : variables uncorrelated #> R-squared : 0.6076101  #> P-value : 1.0169e-06  #>  #> ------------------------------------------------------------ #> H0 : slope not different from 1.5  #> Test statistic : r= 0.07424 with 26 degrees of freedom under H0 #> P-value : 0.70734"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"code-box-13-3-comparing-allometric-slopes-for-ians-data-using-smatr","dir":"Articles","previous_headings":"","what":"Code Box 13.3: Comparing allometric slopes for Ian’s data using smatr","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"","code":"data(leaflife) leafSlopes = sma(longev~lma*site, log=\"xy\", data=leaflife) summary(leafSlopes) #> Call: sma(formula = longev ~ lma * site, data = leaflife, log = \"xy\")  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Results of comparing lines among groups. #>  #> H0 : slopes are equal. #> Likelihood ratio statistic : 9.382 with 3 degrees of freedom #> P-value : 0.02462  #> ------------------------------------------------------------ #>  #> Coefficients by group in variable \"site\" #>  #> Group: 1  #>             elevation    slope #> estimate    -4.218236 2.119823 #> lower limit -5.903527 1.451816 #> upper limit -2.532946 3.095192 #>  #> H0 : variables uncorrelated. #> R-squared : 0.5039152  #> P-value : 0.0014113  #>  #> Group: 2  #>             elevation     slope #> estimate    -2.321737 1.1768878 #> lower limit -3.475559 0.7631512 #> upper limit -1.167915 1.8149286 #>  #> H0 : variables uncorrelated. #> R-squared : 0.3407371  #> P-value : 0.013891  #>  #> Group: 3  #>             elevation     slope #> estimate    -2.523634 1.1825381 #> lower limit -3.135266 0.9398479 #> upper limit -1.912003 1.4878965 #>  #> H0 : variables uncorrelated. #> R-squared : 0.7392636  #> P-value : 1.462e-07  #>  #> Group: 4  #>             elevation    slope #> estimate    -3.837710 1.786551 #> lower limit -5.291926 1.257257 #> upper limit -2.383495 2.538672 #>  #> H0 : variables uncorrelated. #> R-squared : 0.80651  #> P-value : 0.00041709 plot(leafSlopes)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"code-box-13-4-comparing-elevations-of-allometric-lines-for-ians-low-soil-nutrients-data-using-smatr","dir":"Articles","previous_headings":"","what":"Code Box 13.4: Comparing elevations of allometric lines for Ian’s low soil nutrients data using smatr","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"","code":"leaf_low_soilp = subset(leaflife, soilp == \"low\") leafElev = sma(longev~lma+rain, log=\"xy\", data=leaf_low_soilp) leafElev #> Call: sma(formula = longev ~ lma + rain, data = leaf_low_soilp, log = \"xy\")  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Results of comparing lines among groups. #>  #> H0 : slopes are equal. #> Likelihood ratio statistic : 2.367 with 1 degrees of freedom #> P-value : 0.12395  #> ------------------------------------------------------------ #>  #> H0 : no difference in elevation. #> Wald statistic: 6.566 with 1 degrees of freedom #> P-value : 0.010393  #> ------------------------------------------------------------ #>  #> Use the summary() function to print coefficients by group."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"code-box-13-5-residual-plots-for-brain-body-size-relationship","dir":"Articles","previous_headings":"","what":"Code Box 13.5: Residual plots for brain-body size relationship","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) {plot(sma_brainBody,which=\"residual\") # residual plot abline(a=0,b=0,col=\"red\")} qqnorm(residuals(sma_brainBody)) qqline(residuals(sma_brainBody), col=\"red\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"code-box-13-6-robust-sma-for-brain-body-size-relationship","dir":"Articles","previous_headings":"","what":"Code Box 13.6: Robust SMA for brain-body size relationship","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"Notice line slightly steeper previously, less sensitive outliers line, also note confidence interval narrower. expected happen? Yes – outliers towards bottom-right, giving less weight analysis drag line towards rest data. makes sense CIs narrower outliers make variances covariances inefficient estimators, using method can better handle outliers can get precise estimates.","code":"sma_brainBodyRobust = sma(brain~body, data=Animals,log=\"xy\", slope.test=2/3,robust=TRUE) sma_brainBodyRobust #> Call: sma(formula = brain ~ body, data = Animals, log = \"xy\", slope.test = 2/3,  #>     robust = TRUE)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Coefficients: #>             elevation     slope #> estimate    0.8367912 0.7541820 #> lower limit 0.6056688 0.6452409 #> upper limit 1.0679136 0.8815164 #>  #> H0 : variables uncorrelated #> R-squared : 0.6076101  #> P-value : 1.0169e-06  #>  #> ------------------------------------------------------------ #> H0 : slope not different from 0.6666667  #> Test statistic : r= 0.3458 with 26 degrees of freedom under H0 #> P-value : 0.11673 plot(brain~body,data=Animals,log=\"xy\") abline(sma_brainBody, col=\"red\") abline(sma_brainBodyRobust, col=\"blue\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"exercise-13-3-outlier-sensitivity-for-the-brain-body-mass-data","dir":"Articles","previous_headings":"","what":"Exercise 13.3: Outlier sensitivity for the brain-body mass data","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"Repeat analyses brain-body mass data, Code Boxes 13.2 13.6, excluding three dinosaur species analysis using data=AnimalsSnipped[-c(6,16,26),]. suddenly gives significant effect (\\(r=0.50\\), \\(P=0.01\\)), slope jumped 0.64 0.78. Using robust methods: robust SMA less sensitive dinosaur outliers? expected? results changed cases, less dramatic way using robust SMA. robust SMA slope changed 0.75 0.77 outlier removal, whereas regular SMA slope changed 0.64 0.78. cases significant evidence 2/3 power law outlier removal, robust case, change less dramatic. expected robust SMA less sensitive outliers.","code":"AnimalsSnipped=Animals[-c(6,16,26),] sma_brainBody = sma(brain~body, data=AnimalsSnipped,log=\"xy\",slope.test=2/3) sma_brainBody #> Call: sma(formula = brain ~ body, data = AnimalsSnipped, log = \"xy\",  #>     slope.test = 2/3)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Coefficients: #>             elevation     slope #> estimate    0.8927447 0.7835628 #> lower limit 0.7115619 0.6946736 #> upper limit 1.0739275 0.8838260 #>  #> H0 : variables uncorrelated #> R-squared : 0.9216991  #> P-value : 3.2428e-14  #>  #> ------------------------------------------------------------ #> H0 : slope not different from 0.6666667  #> Test statistic : r= 0.5016 with 23 degrees of freedom under H0 #> P-value : 0.010623 sma_brainBodyRobust = sma(brain~body, data=AnimalsSnipped,log=\"xy\", slope.test=2/3,robust=TRUE) sma_brainBodyRobust #> Call: sma(formula = brain ~ body, data = AnimalsSnipped, log = \"xy\",  #>     slope.test = 2/3, robust = TRUE)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Coefficients: #>             elevation     slope #> estimate    0.8844792 0.7709489 #> lower limit 0.7222772 0.6990277 #> upper limit 1.0466812 0.8502700 #>  #> H0 : variables uncorrelated #> R-squared : 0.9216991  #> P-value : 3.2428e-14  #>  #> ------------------------------------------------------------ #> H0 : slope not different from 0.6666667  #> Test statistic : r= 0.5261 with 23 degrees of freedom under H0 #> P-value : 0.005345"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter13Solutions.html","id":"exercise-13-4-robust-allometric-line-fitting-for-ians-leaf-data","dir":"Articles","previous_headings":"","what":"Exercise 13.4: Robust allometric line fitting for Ian’s leaf data","title":"Chapter 13 -- Allometric line-fitting -- Exercise solutions and Code Boxes","text":"Repeat analysis Ian’s leaf economics data, Code Boxes 13.3-13.4, using robust=TRUE. results work differently? result fairly similar, although stronger evidence now slopes , perhaps slope group 1 now noticeably steeper. comparing elevation lines fitted low soil nutrient sites, seem evidence difference due rainfall.","code":"leafSlopes = sma(longev~lma*site, log=\"xy\", data=leaflife, robust=TRUE) summary(leafSlopes) #> Call: sma(formula = longev ~ lma * site, data = leaflife, log = \"xy\",  #>     robust = TRUE)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Results of comparing lines among groups. #>  #> H0 : slopes are equal. #> Likelihood ratio statistic : 15.03 with 3 degrees of freedom #> P-value : 0.001789  #> ------------------------------------------------------------ #>  #> Coefficients by group in variable \"site\" #>  #> Group: 1  #>             elevation    slope #> estimate    -4.811259 2.411612 #> lower limit -6.589002 1.694694 #> upper limit -3.033515 3.431812 #>  #> H0 : variables uncorrelated. #> R-squared : 0.5039152  #> P-value : 0.0014113  #>  #> Group: 2  #>             elevation     slope #> estimate    -2.824595 1.4019760 #> lower limit -4.040935 0.9552956 #> upper limit -1.608255 2.0575167 #>  #> H0 : variables uncorrelated. #> R-squared : 0.3407371  #> P-value : 0.013891  #>  #> Group: 3  #>             elevation     slope #> estimate    -2.448110 1.1510462 #> lower limit -2.979219 0.9373065 #> upper limit -1.917001 1.4135261 #>  #> H0 : variables uncorrelated. #> R-squared : 0.7392636  #> P-value : 1.462e-07  #>  #> Group: 4  #>             elevation    slope #> estimate    -4.142043 1.925544 #> lower limit -5.680918 1.361460 #> upper limit -2.603167 2.723342 #>  #> H0 : variables uncorrelated. #> R-squared : 0.80651  #> P-value : 0.00041709 leaf_low_soilp = subset(leaflife, soilp == \"low\") leafElev = sma(longev~lma+rain, log=\"xy\", data=leaf_low_soilp, robust=TRUE) leafElev #> Call: sma(formula = longev ~ lma + rain, data = leaf_low_soilp, log = \"xy\",  #>     robust = TRUE)  #>  #> Fit using Standardized Major Axis  #>  #> These variables were log-transformed before fitting: xy  #>  #> Confidence intervals (CI) are at 95% #>  #> ------------------------------------------------------------ #> Results of comparing lines among groups. #>  #> H0 : slopes are equal. #> Likelihood ratio statistic : 1.84 with 1 degrees of freedom #> P-value : 0.17498  #> ------------------------------------------------------------ #>  #> H0 : no difference in elevation. #> Wald statistic: 6.017 with 1 degrees of freedom #> P-value : 0.014166  #> ------------------------------------------------------------ #>  #> Use the summary() function to print coefficients by group."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-1-revegetation-and-invertebrate-counts","dir":"Articles","previous_headings":"","what":"Exercise 14.1: Revegetation and invertebrate counts","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"Anthony’s revegetation study (Exercise 10.3), classified anything fell pitfall traps Order, thus counted abundance 24 invertebrate Orders across ten sites. wants know: evidence change invertebrate communities due revegetation efforts? type response variable(s) ? Anthony analyse data? multivariate abundance dataset, 24 correlated counts invertebrates different Orders. needs use GLM approach can handle correlation many responses, like manyglm mvabund package.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-2-invertebrates-settling-on-seaweed","dir":"Articles","previous_headings":"","what":"Exercise 14.2: Invertebrates settling on seaweed","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"Exercise 1.13, David Alistair looked invertebrate epifauna settling algal beds (seaweed) different levels isolation (0, 2, 10 metre buffer) , two sampling times (5 10 weeks). observed presence/absence patterns 16 different types invertebrate (across 10 replicates). like know evidence difference invertebrate presence/absence patterns Distance Isolation. analyse data? multivariate abundance dataset, 16 correlated presence/absence measurements invertebrates. need use GLM approach can handle correlation many responses, like manyglm mvabund package.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-3-do-offshore-wind-farms-affect-fish-communities","dir":"Articles","previous_headings":"","what":"Exercise 14.3: Do offshore wind farms affect fish communities?","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"Exercise 10.2, Lena studied effects offshore wind farm fish communities, collecting paired data wind farm construction, 36 stations three zones (wind farm, North, South). counted many fish caught station, classified 16 different taxa. Lena wants know evidence change fish communities wind farm stations, compared others, following construction wind farm. analyse data? multivariate abundance dataset, 16 correlated counts different fish species. needs use GLM approach can handle correlation many responses, like manyglm mvabund package.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-1-using-mvabund-to-test-for-an-effect-of-revegetation-in-exercise-12-2","dir":"Articles","previous_headings":"","what":"Code Box 14.1: Using mvabund to test for an effect of revegetation in Exercise 12.2","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"","code":"library(ecostats) library(mvabund) data(reveg) reveg$abundMV=mvabund(reveg$abund) ft_reveg=manyglm(abundMV~treatment+offset(log(pitfalls)), family=\"negative.binomial\", data=reveg) # offset included as in Exercise 10.9 anova(ft_reveg) #> Time elapsed: 0 hr 0 min 7 sec #> Analysis of Deviance Table #>  #> Model: abundMV ~ treatment + offset(log(pitfalls)) #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev)   #> (Intercept)      9                          #> treatment        8       1 78.25     0.02 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-4-testing-for-an-effect-of-isolation-on-invertebrates-in-seaweed","dir":"Articles","previous_headings":"","what":"Exercise 14.4: Testing for an effect of isolation on invertebrates in seaweed","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"Consider seaweed dataset David’s Alistair’s study invertebrate epifauna settling algal beds different levels isolation (0, 2 10 metre buffer) different sampling times (5 10 weeks), varying seaweed biomass patch. sort model appropriate dataset? Fit model call ft_epiAlt run anova(ft_epiAlt). (might take couple minutes run.) Previous experience suggests anything beyond second-order interactions seem matter – fit take longer. warning take long time run set nBoot=99 quicker, rough answer: Now fit model null hypothesis effect Distance isolation, call ft_epiNull. Run anova(ft_epiNull, ft_epiAlt). second anova took much less time fit – ? evidence effect distance isolation presence/absence patterns invertebrate community? see effect Dist guess remove model entirely see anything: second anova took much less time fit – ? test one hypothesis, seven, took seventh time! evidence effect distance isolation presence/absence patterns invertebrate community? :(","code":"data(seaweed) seaweed$Dist = as.factor(seaweed$Dist) # set up presence-absence response: seaweed$PA = mvabund(seaweed[,6:21]) seaweed$PA[seaweed$PA>1] = 1  #fit model ft_epiAlt = manyglm(PA~(Wmass+Size+Time)*Dist,family=\"cloglog\", data=seaweed) anova(ft_epiAlt,nBoot=99) #> Time elapsed: 0 hr 0 min 13 sec #> Analysis of Deviance Table #>  #> Model: PA ~ (Wmass + Size + Time) * Dist #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev)   #> (Intercept)     56                          #> Wmass           55       1  6.66     0.93   #> Size            54       1 36.98     0.02 * #> Time            53       1 32.35     0.04 * #> Dist            51       2 28.26     0.79   #> Wmass:Dist      49       2 33.29     0.25   #> Size:Dist       47       2 26.77     0.10 . #> Time:Dist       45       2 32.56     0.07 . #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 99 iterations via PIT-trap resampling. ft_epiNull = manyglm(PA~Wmass+Size+Time,family=\"cloglog\", data=seaweed) anova(ft_epiNull, ft_epiAlt, nBoot=99) #> Time elapsed: 0 hr 0 min 2 sec #> Analysis of Deviance Table #>  #> ft_epiNull: PA ~ Wmass + Size + Time #> ft_epiAlt: PA ~ (Wmass + Size + Time) * Dist #>  #> Multivariate test: #>            Res.Df Df.diff   Dev Pr(>Dev) #> ft_epiNull     53                        #> ft_epiAlt      45       8 115.2     0.41 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 99 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-2-checking-assumptions-for-the-revegetation-model-of-code-box-14-1","dir":"Articles","previous_headings":"","what":"Code Box 14.2: Checking assumptions for the revegetation model of Code Box 14.1","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"plot chunk code14.2 reckon? Assumptions seem reasonable .","code":"par(mfrow=c(1,3),mar=c(3,3,2,1),mgp=c(1.75,0.75,0)) ft_reveg=manyglm(abundMV~treatment,offset=log(pitfalls),family=\"negative.binomial\", data=reveg) plotenvelope(ft_reveg, which=1:3)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-3-checking-mean-variance-assumptions-for-a-poisson-revegetation-model","dir":"Articles","previous_headings":"","what":"Code Box 14.3: Checking mean-variance assumptions for a Poisson revegetation model","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"plot chunk code14.3 plot chunk code14.3MV ’s Poisson assumption looking? sorts trouble, strong fan-shape residuals vs fits plot, points drift well outside simulation envelope nromal quantile plot (many residuals larger 5 less -5) strong increasing trend residual vs fits plot. symptomatic overdispersion, confirmed sample mean-variance plot, points tend fall one--one line large means.","code":"ft_revegP=manyglm(abundMV~treatment, offset=log(pitfalls), family=\"poisson\", data=reveg) par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plotenvelope(ft_revegP, which=1:3, sim.method=\"stand.norm\") meanvar.plot(reveg$abundMV~reveg$treatment) #> START SECTION 2  #> Plotting if overlay is TRUE #> using grouping variable reveg$treatment 7 mean values were 0 and could  #>                                      not be included in the log-plot #> using grouping variable reveg$treatment 10 variance values were 0 and could not  #>                                      be included in the log-plot #> FINISHED SECTION 2 abline(a=0,b=1,col=\"darkgreen\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-5-checking-assumptions-for-the-habitat-configuration-data","dir":"Articles","previous_headings":"","what":"Exercise 14.5: Checking assumptions for the habitat configuration data","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"assumptions made? assumed: observations conditionally independent data Bernoulli cloglog mean linear function predictors residuals constant correlation possible, check assumptions. plot chunk ex14.5 assumptions seem reasonable? Yes looks good . unexpected presence-absence data definition Bernoulli, potential issues higher order interactions violations te independence assumption.","code":"par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) ft_epiAlt = manyglm(PA~(Wmass+Size+Time)*Dist,family=binomial(\"cloglog\"), data=seaweed) plotenvelope(ft_epiAlt, which=1:3)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-6-checking-assumptions-for-the-wind-farm-data","dir":"Articles","previous_headings":"","what":"Exercise 14.6: Checking assumptions for the wind farm data","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"Consider Lena’s offshore wind farm study (Exercise 14.3). Fit appropriate model data. Make sure include Station main effect (account paired sampling design). assumptions made? assumed: observations conditionally independent data Poisson log mean linear function predictors residuals constant correlation possible, check assumptions. Used “stand.norm” model takes fit. plot chunk ex14.6assumptions assumptions seem reasonable? particular, think whether evidence counts overdispersed compared Poisson. Things generally look OK, downward trend scale-location plot, weakly suggestive -dispersion. Note sim envelope constructed using \"stand.norm\", meaning compared smoother expected bunch standard normal residuals. kink weird artifact model fitted (loads parameters) let’s repeat using \"refit\", smaller value n.sim doesn’t take long (take minutes though): plot chunk ex14.6refit (can ignore error messages - seem happen predicted values numerically zero.) Anyway, downward trend scale-location plot happened simulated data , nothing really worry . seems artifact, probably overfitting data including Station term model – means parameter every two observations data! (random effect used instead, effect weaker. isn’t really problem.)","code":"data(windFarms) ft_wind=manyglm(mvabund(windFarms$abund)~Station+Year+Year:Zone, family=\"poisson\", data=windFarms$X) par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plotenvelope(ft_wind, which=1:3, sim.method=\"stand.norm\") par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plotenvelope(ft_wind, which=1:3, n.sim=59) #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error : inner loop 1; cannot correct step size #> Error : inner loop 1; cannot correct step size #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error : inner loop 1; cannot correct step size #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error : inner loop 1; cannot correct step size #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error : inner loop 1; cannot correct step size #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x' #> Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  :  #>   NA/NaN/Inf in 'x'"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-4-a-manyglm-analysis-of-the-revegetation-data-using-a-statistic-accounting-for-correlation","dir":"Articles","previous_headings":"","what":"Code Box 14.4: A manyglm analysis of the revegetation data, using a statistic accounting for correlation","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"","code":"anova(ft_reveg,test=\"wald\",cor.type=\"shrink\") #> Time elapsed: 0 hr 0 min 6 sec #> Analysis of Variance Table #>  #> Model: abundMV ~ treatment #>  #> Multivariate test: #>             Res.Df Df.diff  wald Pr(>wald)   #> (Intercept)      9                           #> treatment        8       1 8.698      0.05 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming correlated response via ridge regularization  #>  P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-7-testing-for-an-effect-of-offshore-wind-farms-slowly","dir":"Articles","previous_headings":"","what":"Exercise 14.7: Testing for an effect of offshore wind farms (slowly)","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"Fit models [Lena’s windfarm data] null alternative hypotheses interest. Run anova compare two models, just 19 bootstrap resamples, estimate computation time. null model case Year:Zone term… still year--year variation, affect different Zones different ways. took 12 seconds . Remove zerotons singletons dataset using: windMV = mvabund( windFarms$abund[,colSums(windFarms$abund>0)>1] ) Now fit model new response variable, just 19 bootstrap resamples. run take less time? Yes, much less, took 10 seconds . results compare? Results almost identical, test statistic (two decimal places). long think take fit model 999 bootstrap resamples, accurate 𝑃-value? rough estimate, multiply time just got 50. 500 seconds, expect take eight minutes. curious didn’t change computation time much. Looking number non-zero values windMV: see three 16 species one less presence. couple three counts, removing well: slightly quicker, tad surprising. test statistic slightly smaller, can see clearly action happening abundant species – surprising, enough information rare species detect interaction!","code":"windMV = mvabund(windFarms$abund) ft_wind=manyglm(windMV~Station+Year+Year:Zone, family=\"poisson\", data=windFarms$X) ft_windNull=manyglm(windMV~Station+Year, family=\"poisson\", data=windFarms$X) anova(ft_windNull, ft_wind, nBoot=19) #> Time elapsed: 0 hr 0 min 11 sec #> Analysis of Deviance Table #>  #> ft_windNull: windMV ~ Station + Year #> ft_wind: windMV ~ Station + Year + Year:Zone #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev)   #> ft_windNull     70                          #> ft_wind         68       2 81.83     0.05 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 19 iterations via PIT-trap resampling. windMV1 = mvabund(windFarms$abund[,colSums(windFarms$abund>0)>1]) ft_wind1=manyglm(windMV1~Station+Year+Year:Zone, family=\"poisson\", data=windFarms$X) ft_windNull1=manyglm(windMV1~Station+Year, family=\"poisson\", data=windFarms$X) anova(ft_windNull1, ft_wind1, nBoot=19) #> Time elapsed: 0 hr 0 min 11 sec #> Analysis of Deviance Table #>  #> ft_windNull1: windMV1 ~ Station + Year #> ft_wind1: windMV1 ~ Station + Year + Year:Zone #>  #> Multivariate test: #>              Res.Df Df.diff   Dev Pr(>Dev)   #> ft_windNull1     70                          #> ft_wind1         68       2 81.83     0.05 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 19 iterations via PIT-trap resampling. colSums(windFarms$abund>0) #>         Bergvar         Oxsimpa         Piggvar      Roodspotta       Rootsimpa  #>               0              51               1               3              30  #>     Sandskaadda         Sjurygg   Skrubbskaadda     Skaaggsimpa    Skaarsnultra  #>               5               6              22               6               4  #>     Stensnultra Svart.smoorbult           Torsk        Tanglake     Aakta.tunga  #>              37               3             134             136               0  #>              AL  #>              61 windMV3 = mvabund(windFarms$abund[,colSums(windFarms$abund>0)>3]) ft_wind3=manyglm(windMV3~Station+Year+Year:Zone, family=\"poisson\", data=windFarms$X) ft_windNull3=manyglm(windMV3~Station+Year, family=\"poisson\", data=windFarms$X) anova(ft_windNull3, ft_wind3, nBoot=19) #> Time elapsed: 0 hr 0 min 10 sec #> Analysis of Deviance Table #>  #> ft_windNull3: windMV3 ~ Station + Year #> ft_wind3: windMV3 ~ Station + Year + Year:Zone #>  #> Multivariate test: #>              Res.Df Df.diff   Dev Pr(>Dev)   #> ft_windNull3     70                          #> ft_wind3         68       2 74.19     0.05 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 19 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-5-analysing-ordinal-data-from-the-habitat-configuration-study-using-manyany","dir":"Articles","previous_headings":"","what":"Code Box 14.5: Analysing ordinal data from the habitat configuration study using manyany","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"hypothesis tested ? evidence ? tested effect distance abundance, classified three-level ordinal factor. evidence Dist effect. ordinal package bug (version 2019.12) conflicts lme4 (specifically overwrites ranef function), [issue posted Github] (https://github.com/runehaubo/ordinal/issues/48). running analyses using packages, need detach ordinal package continuing…","code":"habOrd = counts = as.matrix( round(seaweed[,6:21]*seaweed$Wmass))  habOrd[counts>0 & counts<10] = 1 habOrd[counts>=10] = 2 library(ordinal) #>  #> Attaching package: 'ordinal' #> The following objects are masked from 'package:VGAM': #>  #>     dgumbel, dlgamma, pgumbel, plgamma, qgumbel, rgumbel, wine #> The following objects are masked from 'package:glmmTMB': #>  #>     ranef, VarCorr #> The following objects are masked from 'package:nlme': #>  #>     ranef, VarCorr #> The following objects are masked from 'package:lme4': #>  #>     ranef, VarCorr #> The following object is masked from 'package:dplyr': #>  #>     slice summary(habOrd) # Amphipods are all \"2\" which would return an error in clm #>       Amph        Cope            Poly            Anem             Iso            Bival       #>  Min.   :2   Min.   :0.000   Min.   :0.000   Min.   :0.0000   Min.   :0.000   Min.   :0.000   #>  1st Qu.:2   1st Qu.:2.000   1st Qu.:2.000   1st Qu.:0.0000   1st Qu.:2.000   1st Qu.:0.000   #>  Median :2   Median :2.000   Median :2.000   Median :0.0000   Median :2.000   Median :2.000   #>  Mean   :2   Mean   :1.895   Mean   :1.772   Mean   :0.2456   Mean   :1.877   Mean   :1.351   #>  3rd Qu.:2   3rd Qu.:2.000   3rd Qu.:2.000   3rd Qu.:0.0000   3rd Qu.:2.000   3rd Qu.:2.000   #>  Max.   :2   Max.   :2.000   Max.   :2.000   Max.   :2.0000   Max.   :2.000   Max.   :2.000   #>       Gast            Turb             Prawn            Urchin             Fish        #>  Min.   :1.000   Min.   :0.00000   Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   #>  1st Qu.:2.000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   #>  Median :2.000   Median :0.00000   Median :0.0000   Median :0.00000   Median :0.0000   #>  Mean   :1.947   Mean   :0.08772   Mean   :0.5263   Mean   :0.07018   Mean   :0.1754   #>  3rd Qu.:2.000   3rd Qu.:0.00000   3rd Qu.:2.0000   3rd Qu.:0.00000   3rd Qu.:0.0000   #>  Max.   :2.000   Max.   :2.00000   Max.   :2.0000   Max.   :2.00000   Max.   :2.0000   #>       Crab            Caddis             Opi              Ost            Bstar        #>  Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.000   Min.   :0.0000   #>  1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:0.0000   #>  Median :0.0000   Median :0.00000   Median :0.0000   Median :2.000   Median :0.0000   #>  Mean   :0.5965   Mean   :0.03509   Mean   :0.1404   Mean   :1.404   Mean   :0.2105   #>  3rd Qu.:2.0000   3rd Qu.:0.00000   3rd Qu.:0.0000   3rd Qu.:2.000   3rd Qu.:0.0000   #>  Max.   :2.0000   Max.   :2.00000   Max.   :2.0000   Max.   :2.000   Max.   :2.0000 habOrd=habOrd[,-1] #remove Amphipods manyOrd=manyany(habOrd~Dist*Time*Size,\"clm\",data=seaweed) manyOrdNull=manyany(habOrd~Time*Size,\"clm\",data=seaweed) anova(manyOrdNull, manyOrd) #>  #>              LR Pr(>LR) #> sum-of-LR 101.1    0.17 detach(\"package:ordinal\", unload=TRUE) #> Warning: 'ordinal' namespace cannot be unloaded: #>   namespace 'ordinal' is imported by 'ecoCopula' so cannot be unloaded"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-6-a-compositional-analysis-of-anthonys-revegetation","dir":"Articles","previous_headings":"","what":"Code Box 14.6: A compositional analysis of Anthony’s revegetation","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"data term measures effect treatment relative abundance? evidence effect relative abundance? cols:treatment. evidence effect relative abundance.","code":"ft_comp=manyglm(abundMV~treatment+offset(log(pitfalls)), data=reveg, composition=TRUE) anova(ft_comp,nBoot=99) #> Time elapsed: 0 hr 0 min 21 sec #> Analysis of Deviance Table #>  #> Model: abundMV ~ cols + treatment + offset(log(pitfalls)) + rows + cols:(treatment + offset(log(pitfalls))) #>  #> Multivariate test: #>                Res.Df Df.diff   Dev Pr(>Dev)    #> (Intercept)       239                           #> cols              216      23 361.2     0.01 ** #> treatment         215       1  14.1     0.01 ** #> rows              206       9  25.5     0.02 *  #> cols:treatment    184      23  56.7     0.01 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 99 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-7-a-faster-compositional-analysis-of-anthonys-revegetation-data","dir":"Articles","previous_headings":"","what":"Code Box 14.7: A faster compositional analysis of Anthony’s revegetation data","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"","code":"ft_null = manyglm(abundMV~cols+rows+offset(log(pitfalls)), data=ft_comp$data) ft_alt = manyglm(abundMV~cols+rows+treatment:cols +offset(log(pitfalls)), data=ft_comp$data) anova(ft_null,ft_alt,nBoot=99,block=ft_comp$rows) #> Time elapsed: 0 hr 0 min 5 sec #> Analysis of Deviance Table #>  #> ft_null: abundMV ~ cols + rows + offset(log(pitfalls)) #> ft_alt: abundMV ~ cols + rows + treatment:cols + offset(log(pitfalls)) #>  #> Multivariate test: #>         Res.Df Df.diff   Dev Pr(>Dev)    #> ft_null    207                           #> ft_alt     184      23 56.74     0.01 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 99 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-8-quick-and-dirty-compositional-analysis-of-anthonys-revegetation-data","dir":"Articles","previous_headings":"","what":"Code Box 14.8: Quick-and-dirty compositional analysis of Anthony’s revegetation data","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"ten times quicker Code Box 14.7 (note used ten times many resamples), results slightly different – test statistic slightly smaller, \\(P\\)-value larger. think might case? quick--dirty offset approach roughly approximates row effect, expected lose efficiency (leading smaller test statistic larger \\(P\\)-value).","code":"ft_reveg0 = manyglm(abundMV~1+offset(log(pitfalls)), data=reveg) QDrows0 = log(rowSums(reveg$abundMV)) - log( rowSums(fitted(ft_reveg0)) ) ft_row0=manyglm(abundMV~1+offset(log(pitfalls))+offset(QDrows0), data=reveg) ft_reveg = manyglm(abundMV~treatment+offset(log(pitfalls)), data=reveg) QDrows = log(rowSums(reveg$abundMV)) - log( rowSums(fitted(ft_reveg)) ) ft_row=manyglm(abundMV~treatment+offset(log(pitfalls))+offset(QDrows), data=reveg) anova(ft_row0,ft_row) #> Time elapsed: 0 hr 0 min 7 sec #> Analysis of Deviance Table #>  #> ft_row0: abundMV ~ 1 + offset(log(pitfalls)) + offset(QDrows0) #> ft_row: abundMV ~ treatment + offset(log(pitfalls)) + offset(QDrows) #>  #> Multivariate test: #>         Res.Df Df.diff   Dev Pr(>Dev)   #> ft_row0      9                          #> ft_row       8       1 50.26    0.073 . #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-9-posthoc-testing-for-the-bush-regeneration-data","dir":"Articles","previous_headings":"","what":"Code Box 14.9: Posthoc testing for the bush regeneration data","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"","code":"an_reveg = anova(ft_reveg,p.uni=\"adjusted\") #> Time elapsed: 0 hr 0 min 6 sec an_reveg #> Analysis of Deviance Table #>  #> Model: abundMV ~ treatment + offset(log(pitfalls)) #>  #> Multivariate test: #>             Res.Df Df.diff   Dev Pr(>Dev)   #> (Intercept)      9                          #> treatment        8       1 78.25    0.022 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Univariate Tests: #>             Acarina          Amphipoda          Araneae          Blattodea          #>                 Dev Pr(>Dev)       Dev Pr(>Dev)     Dev Pr(>Dev)       Dev Pr(>Dev) #> (Intercept)                                                                         #> treatment     8.538    0.183     9.363    0.155   0.493    0.976    10.679    0.118 #>             Coleoptera          Collembola          Dermaptera          Diotocardia          #>                    Dev Pr(>Dev)        Dev Pr(>Dev)        Dev Pr(>Dev)         Dev Pr(>Dev) #> (Intercept)                                                                                  #> treatment        9.741    0.143      6.786    0.297      0.196    0.976           0    0.983 #>             Diplura          Diptera          Formicidae          Haplotaxida          #>                 Dev Pr(>Dev)     Dev Pr(>Dev)        Dev Pr(>Dev)         Dev Pr(>Dev) #> (Intercept)                                                                            #> treatment      2.24    0.840    5.93    0.348      0.831    0.973       2.889    0.766 #>             Hemiptera          Hymenoptera          Isopoda          Larvae          #>                   Dev Pr(>Dev)         Dev Pr(>Dev)     Dev Pr(>Dev)    Dev Pr(>Dev) #> (Intercept)                                                                          #> treatment       1.302    0.967       4.254    0.528   1.096    0.973  0.463    0.976 #>             Lepidoptera          Polydesmida          Pseudoscorpionida          #>                     Dev Pr(>Dev)         Dev Pr(>Dev)               Dev Pr(>Dev) #> (Intercept)                                                                      #> treatment         0.913    0.973       1.451    0.957             1.056    0.973 #>             Scolopendrida          Seolifera          Soleolifera          Thysanoptera #>                       Dev Pr(>Dev)       Dev Pr(>Dev)         Dev Pr(>Dev)          Dev #> (Intercept)                                                                             #> treatment           0.913    0.973      1.03    0.973       4.223    0.528        1.056 #>                      Tricladida          #>             Pr(>Dev)        Dev Pr(>Dev) #> (Intercept)                              #> treatment      0.973      2.804    0.766 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #> P-value calculated using 999 iterations via PIT-trap resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"code-box-14-10-exploring-indicator-taxa-most-strongly-associated-with-the-treatment-effect-in-anthonys-revegetation-data","dir":"Articles","previous_headings":"","what":"Code Box 14.10: Exploring indicator taxa most strongly associated with the treatment effect in Anthony’s revegetation data","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"","code":"sortedRevegStats = sort(an_reveg$uni.test[2,],decreasing=T, index.return=T) sortedRevegStats$x[1:5] #>  Blattodea Coleoptera  Amphipoda    Acarina Collembola  #>  10.679374   9.741038   9.362519   8.537903   6.785946 sum(sortedRevegStats$x[1:5])/an_reveg$table[2,3] #> [1] 0.5764636 coef(ft_reveg)[,sortedRevegStats$ix[1:5]] #>                  Blattodea Coleoptera Amphipoda  Acarina Collembola #> (Intercept)     -0.3566749  -1.609438 -16.42495 1.064711   5.056246 #> treatmentImpact -3.3068867   5.009950  19.42990 2.518570   2.045361 ft_reveg$stderr[,sortedRevegStats$ix[1:5]] #>                 Blattodea Coleoptera Amphipoda   Acarina Collembola #> (Intercept)     0.3779645   1.004969  707.1068 0.5171539  0.4879159 #> treatmentImpact 1.0690450   1.066918  707.1069 0.5713194  0.5453801"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter14Solutions.html","id":"exercise-14-8-indicator-species-for-offshore-wind-farms","dir":"Articles","previous_headings":"","what":"Exercise 14.8: Indicator species for offshore wind farms?","title":"Chapter 14 -- Multivariate abundances -- inference about environmental associations -- Exercise solutions and Code Boxes","text":"fish species strongly associated offshore wind farms, Lena’s study? Reanalyse data obtain univariate test statistics univariate \\(P\\)-values adjusted multiple testing. evidence species clearly Zone:Year interaction, adjusting multiple testing? Yes looks like evidence effect Tanglake (Viviparous Eelpout) Torsk (cod). proportion total Zone:Year effect attributable potential indicator species? (code chunk run reliant previous code chunk.) 63% Zone:Year effect just two species. Plot abundance potential indicator species Zone Year. nature wind farm effect species? think species good indicators effect wind farms? hard say. guess big increase Ellpout 2010, perhaps wind farms North Zone. Cod numbers seemed increase 2010 South Zone wind farms. Interaction plots might better way see …","code":"data(windFarms) windMV1 = mvabund(windFarms$abund[,colSums(windFarms$abund>0)>1]) ft_wind1=manyglm(windMV1~Station+Year+Year:Zone, family=\"poisson\", data=windFarms$X) an_wind1 = anova(ft_wind1,p.uni=\"adjusted\",nBoot=99) #> Time elapsed: 0 hr 2 min 48 sec sortedWindStats = sort(an_wind1$uni.test[4,], decreasing=T, index.return=T) sortedWindStats$x[1:5] #>  Tanglake     Torsk   Oxsimpa Rootsimpa        AL  #> 29.019951 22.296044  6.899955  6.801339  4.819447 an_wind1$uni.p[4,sortedWindStats$ix[1:5]] #>  Tanglake     Torsk   Oxsimpa Rootsimpa        AL  #>      0.01      0.01      0.15      0.15      0.23 sum(sortedWindStats$x[1:2])/an_wind1$table[4,3] plot(windMV1~interaction(windFarms$X$Zone,windFarms$X$Year),var.subset=sortedWindStats$ix[1:4])"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"exercise-15-1-predicting-fish-communities-at-wind-farms","dir":"Articles","previous_headings":"","what":"Exercise 15.1: Predicting fish communities at wind farms?","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"Consider Lena’s wind farm study (Exericise 14.3). like predict fish occur . type model use, get best predictions? focus prediction using model designed good predictive performance. One thing might help putting random effects terms, take different values different species, borrow strength across species.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"exercise-15-2-which-environmental-variables-predict-hunting-spider-communities","dir":"Articles","previous_headings":"","what":"Exercise 15.2: Which environmental variables predict hunting spider communities?","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"Petrus set 28 pitfall traps sand dunes, different environmental conditions (open, shrubs, etc) classified hunting spiders fell trap species. measured six environmental variables characterising site. like know: environmental variables best predict hunting spider communities? analysis approach use? variable selection problem, using multivariate model selection techniques. One approach construct models designed pretty good prediction, choose one best predictive performance. example, fit mixed models, random effects different species, use cross-validation see set predictors gives model best predictive performance.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-1-predictive-likelihood-for-the-wind-farm-data","dir":"Articles","previous_headings":"","what":"Code Box 15.1: Predictive likelihood for the wind farm data","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"results tell us model preferred? results suggest main effect model better.","code":"library(ecostats) data(windFarms) set.seed(5) # use this seed to get the same results as below: nStations = length(levels(as.factor(windFarms$X$Station))) isTestStn = sample(nStations,nStations/2) isTest = windFarms$X$Station %in% levels(windFarms$X$Station)[isTestStn] library(mvabund) windMV = mvabund(windFarms$abund) windFt_Train=manyglm(windMV[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_Train=manyglm(windMV[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_Test = predict.manyglm(windFt_Train,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_Test = predict.manyglm(windFt_Int_Train, newdata=windFarms$X[isTest,], type=\"response\") predLogL = dpois(windMV[isTest,],lambda=prWind_Test,log=TRUE) predLogL_Int = dpois(windMV[isTest,],lambda=prWind_Int_Test,log=TRUE) c(sum(predLogL),sum(predLogL_Int)) #> [1] -931.5643 -928.3885"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"exercise-15-3-cross-validation-for-wind-farm-data-and-rare-species","dir":"Articles","previous_headings":"","what":"Exercise 15.3: Cross-validation for wind farm data and rare species","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"Repeat analyses Code Box 15.1 removing rare species (observed less 10 times), using following code: get similar answer? Nope – now model interaction term looks better! Note far considered one test sample, randomness choice training/test split. Repeat analyses Code Box 15.1 well done , without rare species, multiple times (form cross-validation). set results tends reliable (less variable) – ones without rare species? think happened? Without rare species, results reliable, predictive likelihood usually mid -700’s, interaction model consistently performing better (although sometimes narrowly ). rare species, bounces around lot , smaller model (main effects ) sometimes better predictive performance. likely rare species absences one treatment combination can blow predictive likelihood (predicted mean zero, non-zero cases test data).","code":"notRare=colSums(windMV>0)>10 windMVnotRare=mvabund(windFarms$abund[,notRare]) windFt_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_TestRare = predict.manyglm(windFt_TrainRare,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_TestRare = predict.manyglm(windFt_Int_TrainRare, newdata=windFarms$X[isTest,], type=\"response\") predLogLRare = dpois(windMVnotRare[isTest,],lambda=prWind_TestRare,log=TRUE) predLogL_IntRare = dpois(windMVnotRare[isTest,],lambda=prWind_Int_TestRare,log=TRUE) c(sum(predLogLRare),sum(predLogL_IntRare)) #> [1] -781.0415 -788.9616 set.seed(1) # use this seed to get the same results as below: nStations = length(levels(as.factor(windFarms$X$Station))) isTestStn = sample(nStations,nStations/2) isTest = windFarms$X$Station %in% levels(windFarms$X$Station)[isTestStn] windFt_Train=manyglm(windMV[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_Train=manyglm(windMV[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_Test = predict.manyglm(windFt_Train,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_Test = predict.manyglm(windFt_Int_Train, newdata=windFarms$X[isTest,], type=\"response\") predLogL = dpois(windMV[isTest,],lambda=prWind_Test,log=TRUE) predLogL_Int = dpois(windMV[isTest,],lambda=prWind_Int_Test,log=TRUE) c(sum(predLogL),sum(predLogL_Int)) #> [1] -915.8434 -970.8314  windFt_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_TestRare = predict.manyglm(windFt_TrainRare,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_TestRare = predict.manyglm(windFt_Int_TrainRare, newdata=windFarms$X[isTest,], type=\"response\") predLogLRare = dpois(windMVnotRare[isTest,],lambda=prWind_TestRare,log=TRUE) predLogL_IntRare = dpois(windMVnotRare[isTest,],lambda=prWind_Int_TestRare,log=TRUE) c(sum(predLogLRare),sum(predLogL_IntRare)) #> [1] -734.4901 -780.1963 set.seed(2) # use this seed to get the same results as below: nStations = length(levels(as.factor(windFarms$X$Station))) isTestStn = sample(nStations,nStations/2) isTest = windFarms$X$Station %in% levels(windFarms$X$Station)[isTestStn] library(mvabund) windMV = mvabund(windFarms$abund) windFt_Train=manyglm(windMV[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_Train=manyglm(windMV[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_Test = predict.manyglm(windFt_Train,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_Test = predict.manyglm(windFt_Int_Train, newdata=windFarms$X[isTest,], type=\"response\") predLogL = dpois(windMV[isTest,],lambda=prWind_Test,log=TRUE) predLogL_Int = dpois(windMV[isTest,],lambda=prWind_Int_Test,log=TRUE) c(sum(predLogL),sum(predLogL_Int)) #> [1] -886.4941 -992.3476  windFt_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_TestRare = predict.manyglm(windFt_TrainRare,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_TestRare = predict.manyglm(windFt_Int_TrainRare, newdata=windFarms$X[isTest,], type=\"response\") predLogLRare = dpois(windMVnotRare[isTest,],lambda=prWind_TestRare,log=TRUE) predLogL_IntRare = dpois(windMVnotRare[isTest,],lambda=prWind_Int_TestRare,log=TRUE) c(sum(predLogLRare),sum(predLogL_IntRare)) #> [1] -756.8341 -865.5058 set.seed(3) # use this seed to get the same results as below: nStations = length(levels(as.factor(windFarms$X$Station))) isTestStn = sample(nStations,nStations/2) isTest = windFarms$X$Station %in% levels(windFarms$X$Station)[isTestStn] library(mvabund) windMV = mvabund(windFarms$abund) windFt_Train=manyglm(windMV[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_Train=manyglm(windMV[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_Test = predict.manyglm(windFt_Train,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_Test = predict.manyglm(windFt_Int_Train, newdata=windFarms$X[isTest,], type=\"response\") predLogL = dpois(windMV[isTest,],lambda=prWind_Test,log=TRUE) predLogL_Int = dpois(windMV[isTest,],lambda=prWind_Int_Test,log=TRUE) c(sum(predLogL),sum(predLogL_Int)) #> [1] -830.5662 -832.3659  windFt_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year+Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") windFt_Int_TrainRare=manyglm(windMVnotRare[isTest==FALSE,]~Year*Zone,       data=windFarms$X[isTest==FALSE,],family=\"poisson\") prWind_TestRare = predict.manyglm(windFt_TrainRare,newdata=windFarms$X[isTest,], type=\"response\") prWind_Int_TestRare = predict.manyglm(windFt_Int_TrainRare, newdata=windFarms$X[isTest,], type=\"response\") predLogLRare = dpois(windMVnotRare[isTest,],lambda=prWind_TestRare,log=TRUE) predLogL_IntRare = dpois(windMVnotRare[isTest,],lambda=prWind_Int_TestRare,log=TRUE) c(sum(predLogLRare),sum(predLogL_IntRare)) #> [1] -734.7738 -738.2911"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-2-fitting-a-mixed-model-to-the-wind-farm-data","dir":"Articles","previous_headings":"","what":"Code Box 15.2: Fitting a mixed model to the wind farm data","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"","code":"windComp = manyglm(windMV~Zone*Year,data=windFarms$X,composition=TRUE) library(glmmTMB) wind_glmm = glmmTMB(windMV~Year*Zone+diag(Year*Zone|cols), family=poisson(), data=windComp$data) summary(wind_glmm) #>  Family: poisson  ( log ) #> Formula:          windMV ~ Year * Zone + diag(Year * Zone | cols) #> Data: windComp$data #>  #>      AIC      BIC   logLik deviance df.resid  #>   3259.9   3331.4  -1617.9   3235.9     2852  #>  #> Random effects: #>  #> Conditional model: #>  Groups Name           Variance Std.Dev. Corr                      #>  cols   (Intercept)    5.3421   2.3113                             #>         Year2010       1.6302   1.2768   0.00                      #>         ZoneN          0.6807   0.8251   0.00 0.00                 #>         ZoneS          3.9012   1.9751   0.00 0.00 0.00            #>         Year2010:ZoneN 0.8519   0.9230   0.00 0.00 0.00 0.00       #>         Year2010:ZoneS 0.3777   0.6146   0.00 0.00 0.00 0.00 0.00  #> Number of obs: 2864, groups:  cols, 16 #>  #> Conditional model: #>                Estimate Std. Error z value Pr(>|z|)     #> (Intercept)    -3.18913    0.65414  -4.875 1.09e-06 *** #> Year2010       -0.26989    0.45008  -0.600    0.549     #> ZoneN          -0.15541    0.35209  -0.441    0.659     #> ZoneS          -0.16619    0.61670  -0.269    0.788     #> Year2010:ZoneN  0.08998    0.41305   0.218    0.828     #> Year2010:ZoneS  0.56211    0.37247   1.509    0.131     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"exercise-15-4-predictive-likelihood-for-wind-farm-mixed-model","dir":"Articles","previous_headings":"","what":"Exercise 15.4: Predictive likelihood for wind farm mixed model","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"Calculate predictive likelihood mixed model fitted wind farm data (Code Box 15.2), following method Code Box 15.1. better predictive performance? think happened? waaaay better manyglm. Probably borrowing strength across species better predict rare ones, overfitting quite badly.","code":"isTest = windComp$data$Station %in% levels(windComp$data$Station)[isTestStn] wind_glmm = glmmTMB(windMV~Year*Zone+diag(Year*Zone|cols),   family=poisson(), data=windComp$data[isTest==FALSE,]) prGLMM_Test = predict(wind_glmm, newdata=windComp$data[isTest==TRUE,], type=\"response\") predGLMM = sum(dpois(windComp$data$windMV[isTest==TRUE],lambda=prGLMM_Test,log=TRUE)) c(predGLMM,sum(predLogL)) #> [1] -744.1239 -830.5662"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-3-fitting-a-lasso-to-the-wind-farm-data-via-glmnet","dir":"Articles","previous_headings":"","what":"Code Box 15.3: Fitting a LASSO to the wind farm data via glmnet","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"plot chunk code15.3 plot chunk code15.3beta","code":"library(glmnet) X = model.matrix(windMV~Year*Zone*cols,data=windComp$data) y = windComp$data$windMV windLasso = glmnet(X,y, family=\"poisson\") isTest = windComp$data$Station %in% levels(windComp$data$Station)[isTestStn] windLassoTrain = glmnet(X[isTest==FALSE,], y[isTest==FALSE], family=\"poisson\") prLassoTest = predict(windLassoTrain,X[isTest,],type=\"response\") predLLlasso=colSums(dpois(windComp$data$windMV[isTest],prLassoTest, log=TRUE)) plot(windLassoTrain$lambda,predLLlasso,type=\"l\",log=\"x\") isBestLambda = which(predLLlasso==max(predLLlasso)) matplot(windLasso$lambda,t(windLasso$beta),type=\"n\", log=\"x\") matlines(windLasso$lambda,t(windLasso$beta))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-4-fitting-a-group-lasso-to-the-wind-farm-data","dir":"Articles","previous_headings":"","what":"Code Box 15.4: Fitting a group-LASSO to the wind farm data","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"plot chunk code15.4 plot chunk code15.4beta","code":"library(grplasso) windLambdaTrain = lambdamax(windMV~Year*Zone*cols, data=windComp$data,   subset=isTest==FALSE, model = PoissReg()) * 0.7^(0:19) windGrplasso = grplasso(windMV~Year*Zone*cols, data=windComp$data,   lambda=windLambdaTrain, subset=isTest==FALSE, model = PoissReg()) #> Lambda: 556.505  nr.var: 16  #> Lambda: 389.5535  nr.var: 31  #> Lambda: 272.6875  nr.var: 61  #> Lambda: 190.8812  nr.var: 61  #> Lambda: 133.6169  nr.var: 61  #> Lambda: 93.5318  nr.var: 61  #> Lambda: 65.47226  nr.var: 91  #> Lambda: 45.83058  nr.var: 91  #> Lambda: 32.08141  nr.var: 91  #> Lambda: 22.45699  nr.var: 91  #> Lambda: 15.71989  nr.var: 91  #> Lambda: 11.00392  nr.var: 91  #> Lambda: 7.702746  nr.var: 91  #> Lambda: 5.391922  nr.var: 91  #> Lambda: 3.774346  nr.var: 91  #> Lambda: 2.642042  nr.var: 91  #> Lambda: 1.849429  nr.var: 91  #> Lambda: 1.294601  nr.var: 91  #> Lambda: 0.9062204  nr.var: 91  #> Lambda: 0.6343543  nr.var: 91 prGrpTest = predict(windGrplasso,newdata=windComp$data[isTest,], type=\"response\") predLLgrplasso = colSums(dpois(windComp$data$windMV[isTest], prGrpTest,log=TRUE)) plot(windGrplasso$lambda,predLLgrplasso,log=\"x\",type=\"l\") isBestLambdaGrplasso = which(predLLgrplasso==max(predLLgrplasso)) matplot(windGrplasso$lambda,t(windGrplasso$coefficients),type=\"n\",log=\"x\") matlines(windGrplasso$lambda,t(windGrplasso$coefficients))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"exercise-15-5-comparing-predictive-likelihoods-for-the-wind-farm-data","dir":"Articles","previous_headings":"","what":"Exercise 15.5: Comparing predictive likelihoods for the wind farm data","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"Compare predictive log-likelihoods Code Box 15.1 Figures 15.1c-d. models applied using test dataset. model seems fit data better? think ? LASSO models fit way better, expected. models shrink parameters together, borrowing strength across taxa. two LASSO fits well .","code":"c(sum(predLogL),sum(predLogL_Int), max(predLLlasso), max(predLLgrplasso)) #> [1] -830.5662 -832.3659 -744.2159 -739.6487"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-5-reduced-rank-regression-for-the-wind-farm-data","dir":"Articles","previous_headings":"","what":"Code Box 15.5: Reduced rank regression for the wind farm data","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"plot chunk code15.5 model fits better, according BIC? reduced rank approach fits better.","code":"library(VGAM) wind_RR2=rrvglm(as.matrix(windFarms$abund)~Year*Zone, family=poissonff, data=windFarms$X, Rank=2) wind_manyglm = manyglm(windMV~Year*Zone, data=windFarms$X, family=poisson()) c( BIC(wind_RR2), sum(BIC(wind_manyglm))) #> [1] 3318.548 3471.901 zoneyear = interaction(windFarms$X$Zone,windFarms$X$Year) matplot(as.numeric(zoneyear),latvar(wind_RR2),pch=c(1,19))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-6-using-the-lasso-for-petruss-spider-data","dir":"Articles","previous_headings":"","what":"Code Box 15.6: Using the LASSO for Petrus’s spider data","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"plot chunk code15.6 plot chunk code15.6 environmental variables seem strongest effect spider abundances? soil.dry strongly negative coefficients, fallen.leaves herb.layer also strong (positive) interactions.","code":"library(mvabund) data(spider) spid.trait = traitglm(spider$abund,spider$x,method=\"cv.glm1path\") #> No traits matrix entered, so will fit SDMs with different env response for each spp library(lattice) a = max( abs(spid.trait$fourth.corner) ) colort = colorRampPalette(c(\"blue\",\"white\",\"red\")) plot.4th = levelplot(t(as.matrix(spid.trait$fourth.corner)), xlab=\"Environmental Variables\", ylab=\"Species\", col.regions=colort(100), at=seq(-a, a, length=100), scales = list( x= list(rot = 45)) ) print(plot.4th)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter15Solutions.html","id":"code-box-15-7-mixed-model-prediction-of-spider-abundances","dir":"Articles","previous_headings":"","what":"Code Box 15.7: Mixed model prediction of spider abundances","title":"Chapter 15 -- Predicting multivariate abundances -- Exercise solutions and Code Boxes","text":"convergence warnings , fair enough 12 species heaps correlated terms model. Results seem reasonably stable multiple runs, tweaking settings, ’ll go fit. predictors seem important spider community composition? largest variance component, margin, soil.dry (1.8), followed herb.layer reflection.","code":"spidXY = data.frame(scale(spider$x),spider$abund) # scale standardises data! library(reshape2) spiderLong = melt(id=1:6,spidXY,variable.name=\"cols\") Xformula = paste(colnames(spider$x),collapse=\"+\") fullFormula = formula(paste0(\"value~cols+\",Xformula,\"+(\",Xformula,\"|cols)\")) library(glmmTMB) spid_glmm = glmmTMB(fullFormula,family=nbinom2(),data=spiderLong) #> Warning in fitTMB(TMBStruc): Model convergence problem; non-positive-definite Hessian matrix. #> See vignette('troubleshooting') #> Warning in fitTMB(TMBStruc): Model convergence problem; false convergence (8). See #> vignette('troubleshooting') summary(spid_glmm) #>  Family: nbinom2  ( log ) #> Formula:          value ~ cols + soil.dry + bare.sand + fallen.leaves + moss +   #>     herb.layer + reflection + (soil.dry + bare.sand + fallen.leaves +   #>     moss + herb.layer + reflection | cols) #> Data: spiderLong #>  #>      AIC      BIC   logLik deviance df.resid  #>       NA       NA       NA       NA      289  #>  #> Random effects: #>  #> Conditional model: #>  Groups Name          Variance Std.Dev. Corr                                 #>  cols   (Intercept)   0.6198   0.7873                                        #>         soil.dry      1.8397   1.3564   -0.88                                #>         bare.sand     0.1567   0.3959   -0.10 -0.08                          #>         fallen.leaves 0.4022   0.6342    0.67 -0.67 -0.68                    #>         moss          0.2354   0.4852   -0.70  0.40  0.51 -0.59              #>         herb.layer    0.6003   0.7748   -0.91  0.82 -0.20 -0.40  0.47        #>         reflection    0.6677   0.8172    0.15 -0.52  0.33  0.20  0.40 -0.33  #> Number of obs: 336, groups:  cols, 12 #>  #> Dispersion parameter for nbinom2 family ():  1.5  #>  #> Conditional model: #>               Estimate Std. Error z value Pr(>|z|)     #> (Intercept)    0.16776    0.47850   0.351 0.725894     #> colsAlopcune   0.54986    0.33996   1.617 0.105785     #> colsAlopfabr  -1.63899    0.58105  -2.821 0.004792 **  #> colsArctlute  -1.97278    0.82953  -2.378 0.017398 *   #> colsArctperi  -4.54237    1.35504  -3.352 0.000802 *** #> colsAuloalbi   0.07721    0.53723   0.144 0.885718     #> colsPardlugu  -1.36175    0.81877  -1.663 0.096279 .   #> colsPardmont   1.70514    0.42854   3.979 6.92e-05 *** #> colsPardnigr   0.92672    0.65593   1.413 0.157703     #> colsPardpull   1.12798    0.72752   1.550 0.121034     #> colsTrocterr   2.26516    0.54456   4.160 3.19e-05 *** #> colsZoraspin   0.34212    0.69131   0.495 0.620682     #> soil.dry       0.65262    0.42430   1.538 0.124020     #> bare.sand      0.06150    0.15994   0.385 0.700601     #> fallen.leaves -0.35286    0.26457  -1.334 0.182309     #> moss           0.13402    0.18688   0.717 0.473289     #> herb.layer     1.10662    0.27995   3.953 7.72e-05 *** #> reflection    -0.03521    0.29688  -0.119 0.905585     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-1-understanding-how-spiders-vary-in-environmental-response","dir":"Articles","previous_headings":"","what":"Exercise 16.1: Understanding how spiders vary in environmental response","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Consider Petrus’s hunting spider data Exercise 15.2. established (e.g. Code Box 15.7) different species respond differently environmental gradients, especially soil dryness, herb layer reflectance. like know main types environmental response , across species. approach use answer question? wants understand taxa vary environmental response, use Species Archetype Model classify species according type environmental response.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"code-box-16-1-fitting-a-species-archetype-model-to-petruss-spider-data","dir":"Articles","previous_headings":"","what":"Code Box 16.1: Fitting a Species Archetype Model to Petrus’s spider data","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Run lines install ecomix: Code fit ecomix run installed (statement included CRAN policies require vignettes able run using packages can installed CRAN) predictors vary across archetypes (hence across taxa)? saw Code Box 15.7? soil.dry biggest change, jumping 2.15 0.10. next biggest changes herb.layer reflection. pretty much happening Code Box 15.7 well.","code":"library(devtools) install_github(\"skiptoniam/ecomix\") is_ecomix_installed = requireNamespace(\"ecomix\", quietly = TRUE) library(mvabund) data(spider) SpiderDF=spider$x SpiderDF$abund=as.matrix(spider$abund) spiderFormula = abund ~ soil.dry + bare.sand + fallen.leaves + moss + herb.layer + reflection if(is_ecomix_installed) {   ft_Mix = ecomix::species_mix(spiderFormula, data=SpiderDF, family=\"negative.binomial\", nArchetypes=2, control=list(init_method='kmeans',ecm_refit=5, ecm_steps=2) )   coef(ft_Mix)$beta } #> SAM modelling #> There are 2 archetypes to group the species into #> There are 28 site observations for 12 species #> The model for the archetype (grouping) is ~soil.dry + bare.sand + fallen.leaves + moss + herb.layer + reflection #> The model for the species is ~1 #> You are implementing a negative.binomial Species Archetype Model. #> Using ECM algorithm to find starting values; using 5 refits #> ECM restart 1 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -1041.731 | Ratio loglik 0 #> Iteration: 2 | New loglik -834.997 | Ratio loglik 0.801548 #> ECM restart 2 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -1041.731 | Ratio loglik 0 #> Iteration: 2 | New loglik -834.997 | Ratio loglik 0.801548 #> ECM restart 3 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -1041.731 | Ratio loglik 0 #> Iteration: 2 | New loglik -834.997 | Ratio loglik 0.801548 #> ECM restart 4 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -1041.731 | Ratio loglik 0 #> Iteration: 2 | New loglik -834.997 | Ratio loglik 0.801548 #> ECM restart 5 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -1041.731 | Ratio loglik 0 #> Iteration: 2 | New loglik -834.997 | Ratio loglik 0.801548 #> initial  value 834.997322  #> iter  10 value 822.933991 #> iter  20 value 818.054221 #> iter  30 value 816.602567 #> iter  40 value 812.844421 #> iter  50 value 793.214165 #> iter  60 value 791.057454 #> iter  70 value 786.683339 #> iter  80 value 778.413169 #> iter  90 value 777.956005 #> final  value 777.933344  #> converged #>              soil.dry   bare.sand fallen.leaves       moss herb.layer reflection #> Archetype1  1.5629184 -0.05470042    -0.2784744 -0.1449658  0.7081518 -0.4730736 #> Archetype2 -0.1069941  0.22420728    -0.2855582  0.4186874  0.5894873  0.4759734"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"code-box-16-2-minding-your-ps-and-qs-for-petruss-species-archetype-model","dir":"Articles","previous_headings":"","what":"Code Box 16.2: Minding your P’s and Q’s for Petrus’s Species Archetype Model","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"plot chunk code16.2 model assumptions seem reasonable ? generally looks good, fan-shape residual vs fits plot, points close(ish) straight line normal quanitle plot.","code":"if(is_ecomix_installed)   plot(ft_Mix, type=\"link\") #> Infinite residuals removed from residual plots: 82 in total."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-2-archetypal-revegetation-response","dir":"Articles","previous_headings":"","what":"Exercise 16.2: Archetypal revegetation response","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Consider Anthony’s revegetation study. like better characterise different invertebrate orders respond revegetation treatment. Fit Species Archetype Model two archetypes. Explain main two types response revegetation , across invertebrate taxa. Oh ’s odd – estimated trend almost identical two groups. Look posterior probabilities Order, identify taxa characterise response type, plot raw data taxa. Species Archetype Model seem capture main trends response revegetation treatment? doesn’t seem worthwhile differences response across archetypes!!","code":"library(ecostats) data(reveg) revegDF=data.frame(reveg) revegDF$abundMat=as.matrix(reveg$abund) if(is_ecomix_installed) {   ft_revegMix = ecomix::species_mix(abundMat~treatment, data=revegDF, family=\"negative.binomial\", nArchetypes=2, control=list(init_method='kmeans',ecm_refit=5, ecm_steps=2) )   coef(ft_revegMix)$beta } #> SAM modelling #> There are 2 archetypes to group the species into #> There are 10 site observations for 24 species #> The model for the archetype (grouping) is ~treatment #> The model for the species is ~1 #> You are implementing a negative.binomial Species Archetype Model. #> Using ECM algorithm to find starting values; using 5 refits #> ECM restart 1 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -932.547 | Ratio loglik 0 #> Iteration: 2 | New loglik -745.016 | Ratio loglik 0.798905 #> ECM restart 2 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -932.547 | Ratio loglik 0 #> Iteration: 2 | New loglik -745.016 | Ratio loglik 0.798905 #> ECM restart 3 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -932.547 | Ratio loglik 0 #> Iteration: 2 | New loglik -745.016 | Ratio loglik 0.798905 #> ECM restart 4 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -932.547 | Ratio loglik 0 #> Iteration: 2 | New loglik -745.016 | Ratio loglik 0.798905 #> ECM restart 5 of 5 #> Initialising starting values #> Initial groups parameter estimates by K-means clustering #> Iteration: 1 | New loglik -932.547 | Ratio loglik 0 #> Iteration: 2 | New loglik -745.016 | Ratio loglik 0.798905 #> initial  value 745.015688  #> final  value 745.015688  #> converged #>            treatmentImpact #> Archetype1        5.350399 #> Archetype2        1.441362"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"code-box-16-3-choosing-the-number-of-archetypes-for-petruss-spider-data","dir":"Articles","previous_headings":"","what":"Code Box 16.3: Choosing the number of archetypes for Petrus’s spider data","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"code chunk run, takes minute complete many archetypes use? guess ’d go four archetypes, looks like winner . Note repeat runs didn’t always give BIC. happen? Maths Box 16.1, mixture model likelihoods can messy multiple maxima. Hence ’s good idea run multiple times keep best solution.","code":"if(is_ecomix_installed) {   nClust=rep(2:6,3)   bics = rep(NA, length(nClust))   for(iClust in 1:length(nClust))   {     fti_Mix = ecomix::species_mix(spiderFormula, data=SpiderDF,       family=\"negative.binomial\", nArchetypes=nClust[iClust],       control=list(init_method='kmeans',ecm_refit=5, ecm_steps=2))     bics[iClust] = BIC(fti_Mix)   }   plot(bics~nClust, ylab=\"BIC\", xlab=\"# archetypes\") }"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-3-how-many-revegetation-archetypes","dir":"Articles","previous_headings":"","what":"Exercise 16.3: How many revegetation archetypes?","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Consider Species Archetype Model Anthony’s revegetation data. Exercise 16.2 assumed two archetypes. many archetypes used Anthony’s data? Answer question using model selection technique choice. OK ’m going BIC . code chunk run, takes minute complete Well looks like two archetypes (presumably, one increasing revegetation, ).","code":"if(is_ecomix_installed) {   nClust=rep(1:5,3)   bics = rep(NA, length(nClust))   for(iClust in 1:length(nClust))   {     fti_Mix = ecomix::species_mix(abundMat~treatment, data=revegDF,        family=\"negative.binomial\", nArchetypes=nClust[iClust])     bics[iClust] = BIC(fti_Mix)   }   plot(bics~nClust, ylab=\"BIC\", xlab=\"# archetypes\") }"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-4-understanding-why-spiders-vary-in-environmental-response","dir":"Articles","previous_headings":"","what":"Exercise 16.4: Understanding why spiders vary in environmental response","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Consider Petrus’s hunting spider data Exercise 15.2… wants know extent species traits explain interspecific variation environmental response. approach use answer question? wants know species vary environmental response, good idea include predictors species (species traits) use fourth corner model understand extent interspecific variation environmental response can explained traits.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"code-box-16-4-a-fourth-corner-model-for-spider-data-using-traitglm","dir":"Articles","previous_headings":"","what":"Code Box 16.4: A fourth corner model for spider data using traitglm","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"plot chunk code16.4 plot chunk code16.4","code":"library(gllvm) #>  #> Attaching package: 'gllvm' #> The following objects are masked from 'package:VGAM': #>  #>     AICc, nobs, predict, vcov #> The following objects are masked from 'package:stats4': #>  #>     nobs, vcov #> The following object is masked from 'package:vegan': #>  #>     ordiplot #> The following object is masked from 'package:mvabund': #>  #>     coefplot #> The following objects are masked from 'package:stats': #>  #>     nobs, predict, simulate, vcov data(spider) X = spider$x[,c(\"soil.dry\",\"herb.layer\")] ft_trait = gllvm(spider$abund, X, spider$trait, randomX=~soil.dry+herb.layer, family=\"negative.binomial\") logLik(ft_trait) #> 'log Lik.' -711.2906 (df=60) library(lattice) a = max( abs(ft_trait$fourth.corner) ) colort = colorRampPalette(c(\"blue\",\"white\",\"red\")) plot.4th = levelplot(ft_trait$fourth.corner, col.regions=colort(100),            at=seq(-a, a, length=100), scales = list( x=list(rot = 45)) ) print(plot.4th) coefplot(ft_trait)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-5-heloises-ants","dir":"Articles","previous_headings":"","what":"Exercise 16.5: Heloise’s ants","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Heloise collected counts 41 species ants 30 sites across south-eastern Australia, stored antTraits mvabund package. also recorded five environmental variables site, five functional traits species. like know traits explain ant species differ environmental response. Fit fourth corner model dataset. (code chunk takes minute run.) plot chunk ex16.5 plot chunk ex16.5 doesn’t always produce coefplot infinite values – symptomatic non-convergence. Make sure end logLik value -2300 better, doesn’t happen re-run. ended using starting.val=\"zero\" usually gave better fits (doesn’t always time around). key traits capture () ants differ environment response? big one seems Canopy.cover:polymorphism. Canopy.cover:Pilosity also seemed negative runs, fairly large standard error. Don’t forget check P’s Q’s! code chunk evaluated function previous one looks good . points normal quantile plot don’t stay envelope (pointwise global, tighter ), violations alarming kind – residuals smaller magnitude expected, rather large. often symptomatic overfitting rather lack--fit – model lot parameters !","code":"data(antTraits) envMat = as.matrix(antTraits$env) ft_anttrait = gllvm(antTraits$abund, envMat, antTraits$traits, randomX=~envMat, family=\"negative.binomial\", starting.val=\"zero\") logLik(ft_anttrait) #> 'log Lik.' -1919.352 (df=223) library(lattice) a = max( abs(ft_anttrait$fourth.corner) ) colort = colorRampPalette(c(\"blue\",\"white\",\"red\")) plot_4th = levelplot(t(as.matrix(ft_anttrait$fourth.corner)),   col.regions=colort(100), at=seq(-a, a, length=100),   scales = list( x= list(rot = 45)) ) print(plot_4th) coefplot(ft_anttrait) par(mfrow=c(1,2),mgp=c(1.75,0.75,0),mar=c(3,3,1,1)) plot(ft_anttrait, which=1:2)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"code-box-16-5-a-fourth-corner-interaction-plot-for-petruss-spider-data","dir":"Articles","previous_headings":"","what":"Code Box 16.5: A fourth corner interaction plot for Petrus’s spider data","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"plot chunk code16.5","code":"nVars = dim(spider$abund)[2] newTraits = spider$trait # set factors not of interest here to be a constant value newTraits$length= mean(spider$trait$length) #set length to its mean newTraits$colour=factor(rep(levels(spider$trait$colour)[1],nVars),    levels=levels(spider$trait$colour)) #set to first level of factor # set starting rows of ’marks’ to take all possible values nMarks = nlevels(spider$trait$marks) newTraits$marks[1:nMarks]=levels(spider$trait$marks) # create a new env dataset where the only thing that varies is soil: newEnv = spider$x[1:2,c(\"soil.dry\",\"herb.layer\")] newEnv[,\"soil.dry\"]=range(scale(spider$x[,\"soil.dry\"])) newEnv[,\"herb.layer\"]=0 #make predictions and plot: newPreds = predict(ft_trait,newX=newEnv,newTR=newTraits,type=\"response\", level=0) matplot(newEnv[,1], newPreds[,1:nMarks],type=\"l\", log=\"y\") legend(\"topright\",levels(newTraits$marks),lty=1:nMarks,col=1:nMarks)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-6-a-fourth-corner-interaction-plot-for-heloises-ants","dir":"Articles","previous_headings":"","what":"Exercise 16.6: A fourth corner interaction plot for Heloise’s ants","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Recall fourth corner model fitted Heloise’s data Exercise 16.5. interaction choice, construct plot visualise environment-abundance association changes different values functional trait. ’m going Canopy.cover:Polymorphism, one biggest (significant) interaction term: code chunk evaluated function previous one can see polymorphism, abundance relatively high low canopy cover.","code":"nVars = dim(antTraits$abund)[2] newTraits = antTraits$traits #set length vars to their mean newTraits$Femur.length= mean(antTraits$traits$Femur.length)  newTraits$Webers.length= mean(antTraits$traits$Webers.length) # set factors not of interest here to be a constant value newTraits$No.spines=rep(0,nVars) newTraits$Pilosity = factor(rep(levels(antTraits$traits$Pilosity)[1],nVars), # set first few levels of Polymorphism to all possible values levels=levels(antTraits$traits$Pilosity)) #set to first level of factor nPoly = nlevels(antTraits$traits$Polymorphism) newTraits$Polymorphism[1:nPoly]=levels(antTraits$traits$Polymorphism) # create a new env dataset where the only thing that varies is Canopy.cover: newEnv = antTraits$env newEnv$Canopy.cover=range(scale(newEnv$Canopy.cover)) newEnv$Bare.ground = mean(newEnv$Bare.ground) newEnv$Shrub.cover = mean(newEnv$Shrub.cover) newEnv$Volume.lying.CWD = mean(newEnv$Volume.lying.CWD) newEnv$Feral.mammal.dung = mean(newEnv$Feral.mammal.dung) newEnv=as.matrix(newEnv) #make predictions and plot: newPreds = predict(ft_anttrait,newX=newEnv,newTR=newTraits,type=\"response\", level=0) matplot(newEnv[,\"Canopy.cover\"], newPreds[,1:nPoly],type=\"l\", ylab=\"Mean abundance\", xlab=\"Canopy cover\", log=\"y\") legend(\"topright\",levels(newTraits$Polymorphism),lty=1:nPoly,col=1:nPoly)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"code-box-16-6-quantifying-how-effectively-traits-explain-𝛽-diversity","dir":"Articles","previous_headings":"","what":"Code Box 16.6: Quantifying how effectively traits explain 𝛽-diversity","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"","code":"ft_spp = gllvm(spider$abund, X, family=\"negative.binomial\") ft_trait = gllvm(spider$abund, X, spider$trait, family=\"negative.binomial\") ft_main = gllvm(spider$abund, X, spider$trait, family=\"negative.binomial\", formula=~soil.dry+herb.layer) an_spider4th = anova(ft_main, ft_trait, ft_spp) #> Model  1 :  ~ soil.dry + herb.layer  #> Model  2 :  y ~ soil.dry + herb.layer + (soil.dry + herb.layer):(length + colour + marks)  #> Model  3 :  y ~ X an_spider4th #>   Resid.Df        D Df.diff     P.value #> 1      287  0.00000       0             #> 2      279 40.12996       8 3.02999e-06 #> 3      265 76.84430      14 1.08408e-10 an_spider4th$D[2]/sum(an_spider4th$D) #> [1] 0.3430666"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter16Solutions.html","id":"exercise-16-7-variation-explained-by-traits-for-heloises-ants","dir":"Articles","previous_headings":"","what":"Exercise 16.7: Variation explained by traits for Heloise’s ants","title":"Chapter 16 -- Understanding variation in environmental response across taxa -- Exercise solutions and Code Boxes","text":"Consider Heloise’s ant data. proportion variation environmental response explained measured species traits? looks like quarter interspecific variation can explained traits, super, especially considering trait model uses quarter many parameters. suggests really onto winner … #remove chunk gllvm updated CRAN:","code":"ft_antspp = gllvm(antTraits$abund, envMat, family=\"negative.binomial\") ft_anttrait = gllvm(antTraits$abund, envMat, antTraits$traits, family=\"negative.binomial\") mainFormula=as.formula(paste(\"~\", paste(colnames(envMat),collapse=\"+\"))) ft_antmain = gllvm(antTraits$abund, envMat, antTraits$traits, family=\"negative.binomial\", formula=mainFormula) an_ant4th = anova(ft_antmain, ft_anttrait, ft_antspp) #> Warning in anova.gllvm(ft_antmain, ft_anttrait, ft_antspp): This test was not designed for tests with a df.diff larger than 20 so the P-value should be treated as approximate. #> Model  1 :  ~ Bare.ground + Canopy.cover + Shrub.cover + Volume.lying.CWD + Feral.mammal.dung  #> Model  2 :  y ~ Bare.ground + Canopy.cover + Shrub.cover + Volume.lying.CWD + Feral.mammal.dung + (Bare.ground + Canopy.cover + Shrub.cover + Volume.lying.CWD + Feral.mammal.dung):(Femur.length + No.spines + Pilosity + Polymorphism + Webers.length)  #> Model  3 :  y ~ X an_ant4th #>   Resid.Df         D Df.diff     P.value #> 1     1062   0.00000       0             #> 2     1022  75.73794      40 0.000548758 #> 3      862 271.85048     160 8.23701e-08 an_ant4th$D[2]/sum(an_ant4th$D) #> [1] 0.2178955"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"exercise-17-1-co-occurrence-in-hunting-spider-data","dir":"Articles","previous_headings":"","what":"Exercise 17.1: Co-occurrence in hunting spider data","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"Petrus like think co-occurrence hunting spider species. wants know species co-occur, extent can co-occurrence patterns explained joint response environmental gradients. approach used look questions? clearly methods studying co-occurrence, wants covariance modelling \\(\\Sigma\\), e.g. using latent variables graphical modelling.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"code-box-17-1-estimating-co-occurrence-patterns-using-a-copula-model","dir":"Articles","previous_headings":"","what":"Code Box 17.1: Estimating co-occurrence patterns using a copula model","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"","code":"library(mvabund) data(spider) library(ecoCopula) par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) spiderAbund = mvabund(spider$abund) spider_glmInt = manyglm(spiderAbund~1,data=spider$x) ord_spiderInt = cord(spider_glmInt) plot(ord_spiderInt, biplot=TRUE) #for a biplot # now plot a correlation matrix library(gclus) #> Loading required package: cluster sortVars=order.single(ord_spiderInt$sigma) library(corrplot) #> corrplot 0.92 loaded corrplot(ord_spiderInt$sigma[sortVars, sortVars], type=\"lower\", diag=FALSE, method=\"square\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"code-box-17-2-co-occurrence-patterns-explained-by-environmental-variables","dir":"Articles","previous_headings":"","what":"Code Box 17.2: Co-occurrence patterns explained by environmental variables","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"","code":"par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) spider_glmX = manyglm(spiderAbund~.,data=spider$x) ord_spiderX=cord(spider_glmX) plot(ord_spiderX,biplot=TRUE) corrplot(ord_spiderX$sigma[sortVars,sortVars],type=\"lower\",diag=FALSE, method=\"square\") ss = c(sum(ord_spiderInt$loadings^2), sum(ord_spiderX$loadings^2)) c(ss, 1-ss[2]/ss[1]) #> [1] 7.4856063 4.1535659 0.4451263 absCor = c( sum(abs(ord_spiderInt$sigma)), sum( abs(ord_spiderX$sigma)) ) - ncol(spider$abund) c(absCor, 1-absCor[2]/absCor[1]) #> [1] 52.7393552 22.0588873  0.5817376"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"exercise-17-2-spider-presence-absence","dir":"Articles","previous_headings":"","what":"Exercise 17.2: Spider presence-absence","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"Repeat analyses Code Box 17.1 presence-absence data, can construct using spiderPA=pmin(spiderAbund,1). Estimate correlation matrix.  correlation matrix compare Figure 17.2b? Correlations tend smaller, range -0.4 0.4. Calculate sum squared loadings, without predictors, Code Box 17.2. values smaller presence/absence data?  expected? fact correlations became weaker expected. interestingly, predictors able explain correlation, responses close uncorrelated environmental variables included. conclusions different Code Box 17.2, terms extent patterns co-occurrence can explained environmental variables? guess conclude (two thirds) co-occurrence presence-absence can explained environmental variables, whereas number half looking abundance.","code":"par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) spiderPA=pmin(spiderAbund,1) spiderPA_glmInt = manyglm(spiderPA~1,data=spider$x, family=\"cloglog\") ord_spiderPAInt=cord(spiderPA_glmInt) plot(ord_spiderPAInt, biplot=TRUE) #for a biplot # now plot a correlation matrix sortVars=order.single(ord_spiderPAInt$sigma) corrplot(ord_spiderPAInt$sigma[sortVars, sortVars], type=\"lower\", diag=FALSE, method=\"square\") par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) spiderPA_glmX = manyglm(spiderPA~.,data=spider$x, family=\"cloglog\") ord_spiderPAX = cord(spiderPA_glmX) plot(ord_spiderPAX, biplot=TRUE) corrplot(ord_spiderPAX$sigma[sortVars,sortVars], type=\"lower\", diag=FALSE, method=\"square\") ss = c(sum(ord_spiderPAInt$loadings^2), sum(ord_spiderPAX$loadings^2)) c(ss, 1-ss[2]/ss[1]) #> [1] 4.5080541 1.3822963 0.6933718 absCor = c( sum(abs(ord_spiderPAInt$sigma)), sum( abs(ord_spiderPAX$sigma)) ) - ncol(spiderPA) c(absCor, 1-absCor[2]/absCor[1]) #> [1] 31.6055948  1.7043414  0.9460747"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"exercise-17-3-co-occurrence-in-bird-communities","dir":"Articles","previous_headings":"","what":"Exercise 17.3: Co-occurrence in bird communities","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"Françoise visited 51 sites near Lyon, France, estimated abundance 40 different species birds (listening bird songs 15 minutes) (Tatibouët, 1981). like understand bird co-occurrence, extent explained predictors related urbanisation. Load data fit ordinal regressions response: Use cord fit latent variable model estimate correlation matrix.  Looks like nothing much happening ! Add fields model, study extent presence absence fields explains co-occurrence patterns. Calculate sum squared loadings, latent variable models without fields predictor.  can conclude co-occurrence patterns birds, extent explained presence absence fields? proportion co-occurrence patterns can explained relatively small, guess can say fields major driver co-occurrence patterns birds. ordinal package bug (version 2019.12) conflicts lme4 (specifically overwrites ranef function), [issue posted Github] (https://github.com/runehaubo/ordinal/issues/48). running analyses using packages, need detach ordinal package continuing…","code":"library(ade4) data(aviurba) abund=mvabund(aviurba$fau) library(ordinal) ft_birdsInt=manyany(abund~1, \"clm\", family=\"ordinal\", data=aviurba$mil) par(mfrow=c(1,2),mgp=c(1.75,0.75,0),mar=c(3,3,1,1)) ord_birdsInt=cord(ft_birdsInt) plot(ord_birdsInt, biplot=TRUE) sortBirdVars=order.single(ord_birdsInt$sigma) corrplot(ord_birdsInt$sigma[sortBirdVars, sortBirdVars], type=\"lower\", diag=FALSE, method=\"square\") par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) ft_birdsX=manyany(abund~fields, \"clm\", family=\"ordinal\", data=aviurba$mil) ord_birdsX=cord(ft_birdsX) plot(ord_birdsX,biplot=TRUE) corrplot(ord_birdsX$sigma[sortBirdVars,sortBirdVars],type=\"lower\",diag=FALSE, method=\"square\") ss = c(sum(ord_birdsInt$loadings^2), sum(ord_birdsX$loadings^2)) c(ss, 1-ss[2]/ss[1]) #> [1] 4.8871171 4.2395611 0.1325027 absCor = c( sum(abs(ord_birdsInt$sigma)), sum( abs(ord_birdsX$sigma)) ) - ncol(abund) c(absCor, 1-absCor[2]/absCor[1]) #> [1] 87.1314376 72.9138311  0.1631742 detach(\"package:ordinal\", unload=TRUE) #> Warning: 'ordinal' namespace cannot be unloaded: #>   namespace 'ordinal' is imported by 'ecoCopula' so cannot be unloaded"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"code-box-17-3-a-copula-graphical-model-for-petruss-spider-data","dir":"Articles","previous_headings":"","what":"Code Box 17.3: A copula graphical model for Petrus’s spider data","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"","code":"par(mfrow=c(1,2),mgp=c(1.75,0.75,0),mar=c(3,3,1,1)) graph_spiderInt = cgr(spider_glmInt) plot(graph_spiderInt, vary.edge.lwd=TRUE) graph_spiderX = cgr(spider_glmX, graph_spiderInt$all_graphs$lambda.opt) #> Warning in cgr(spider_glmX, graph_spiderInt$all_graphs$lambda.opt): 'best' model #> selected among supplied lambda only plot(graph_spiderX, vary.edge.lwd=TRUE) absCor = c( sum(abs(graph_spiderInt$best_graph$cov)),   sum( abs(graph_spiderX$best_graph$cov)) ) - ncol(spider$abund) c(absCor, 1-absCor[2]/absCor[1]) #> [1] 45.0716501 16.5610787  0.6325611"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter17Solutions.html","id":"exercise-17-4-does-soil-dryness-explain-co-occurrence-patterns-in-petruss-data","dir":"Articles","previous_headings":"","what":"Exercise 17.4: Does soil dryness explain co-occurrence patterns in Petrus’s data?","title":"Chapter 17 -- Studying co-occurrence patterns -- Exercise solutions and Code Boxes","text":"Recall Figure 16.1a, Alopecosa accentuata, Alopecosa fabrilis Arctosa perita decreased response soil dryness, species increased. Note “unconstrained” correlation matrix Figure 17.2b found negative correlation patterns species others. extent contrasting responses soil dryness explain negative correlations Figure 17.2b? Answer question fitting covariance model choice spider data without soil dryness predictor.  explained less covariation model six environmental variables, like fifth rather half. anyway, negative correlations saw previously (, left) involve Arctperi, Alopacce Alopfabr, three species negative association soil.dry. three species positively correlated negatively correlated species. including soil.dry model (, right), negative associations disappeared, species become largely uncorrelated others. plenty covariation seem explained soil.dry, good job capturing negative co-occurrence patterns spider abundance.","code":"par(mfrow=c(1,2),mgp=c(1.75,0.75,0),mar=c(3,3,1,1)) spider_glmSoil = manyglm(spiderAbund~soil.dry,data=spider$x) ord_spiderSoil=cord(spider_glmSoil) corrplot(ord_spiderInt$sigma[sortVars,sortVars],type=\"lower\",diag=FALSE, method=\"square\") corrplot(ord_spiderSoil$sigma[sortVars,sortVars],type=\"lower\",diag=FALSE, method=\"square\") ss = c(sum(ord_spiderInt$loadings^2), sum(ord_spiderSoil$loadings^2)) c(ss, 1-ss[2]/ss[1]) #> [1] 7.4856063 5.9380303 0.2067402 absCor = c( sum(abs(ord_spiderInt$sigma)), sum( abs(ord_spiderSoil$sigma)) ) - ncol(spider$abund) c(absCor, 1-absCor[2]/absCor[1]) #> [1] 52.7393552 40.5172155  0.2317461"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-1-experimental-design-issues","dir":"Articles","previous_headings":"","what":"Exercise 1.1: Experimental design issues","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"issue compare step – mite treatment differed mite treatment just presence absence mites, also presence absence crumpled old leaves base plant. Crumpled leaves beneficial plants, e.g. providing extra nutrients, mulch keeps moisture soil longer. issue replicate step – Beryl replicate application treatment interest. oven temperature treatment applied 10 loaves. means unable make generalisations effect oven temperature aspects way treatment applied one instance also affect results, e.g. maybe ovens different (size, shaoe, maybe one faulty door leaks air ), maybe loaves taken slightly earlier one batch another, maybe one oven pre-heated better . replicating baking process, randomly chosen choices treatment, uncontrolled sources variation can considered random inferences can account . issue randomise step – teachers instructed ensure wasn’t undue proportion well fed undernourished children either group, point given responsibility assigning students treatments rather done randomly. weight difference start study suggests teachers actually assign smaller potentially undernourished children group receiving milk, presumably compassionate grounds. may may done consciously. treatment groups homogeneous start study, possible conclude changes study due milk – groups different start differences end study related . example, possible students receiving milk smaller initially later growth spurt, grew study developmental reasons unrelated milk.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-2-which-plot-for-which-research-question","dir":"Articles","previous_headings":"","what":"Exercise 1.2: Which plot for which research question?","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"Plot (c), boxplot -differences, best looking whether counts larger gunshot . (larger , counts zero.) Plot (), scatterplot vs counts, best studying counts gunshot relatd counts gunshot sound. Plot (b), Tukey mean-difference plot -differences average counts, best looking whether counts measure thing. counts measuring underlying quantity, differences centered around zero, relatively close , ideally function mean count.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-3-raven-count-data-what-data-properties","dir":"Articles","previous_headings":"","what":"Exercise 1.3: Raven count data – what data properties?","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"# ravens discrete, quantitative variable. Sampling time categorical variable. Strictly speaking nominal two levels sampling ordering irrelevant.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-4-gender-ratios-in-bats","dir":"Articles","previous_headings":"","what":"Exercise 1.4: Gender ratios in bats","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"one variable, bat gender. categorical variable. research question like know evidence gender bias. looking evidence gender bias Kerryn making inference true proportion females colony, wants know different 50:50 ratio. wants hypothesis test (whether evidence true proportion females 50%). specific procedure use one-sample test proportions, e.g. using ‘prop.test’ function ‘R’: marginal evidence true proportion females colony larger 50:50 (since P close 0.05). appropriate graph bar graph","code":"prop.test(65,65+44) #>  #>  1-sample proportions test with continuity correction #>  #> data:  65 out of 65 + 44, null probability 0.5 #> X-squared = 3.6697, df = 1, p-value = 0.05541 #> alternative hypothesis: true p is not equal to 0.5 #> 95 percent confidence interval: #>  0.4978787 0.6879023 #> sample estimates: #>         p  #> 0.5963303 barplot(c(65,44),names.arg=c(\"females\",\"males\"))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-5-ravens-and-gunshots","dir":"Articles","previous_headings":"","what":"Exercise 1.5: Ravens and gunshots","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"Exercise 1.3, two variables: # ravens discrete, quantitative variable. Sampling time categorical variable taking two levels (). (argue location also variable, categorical, used analyse data using linear model Chapter 4.) question whether ravens fly towards sound gunshots. really descriptive question want know ravens fly towards sound gunshots general, just 12 sites. best approached using hypothesis test, test evidence ravens fly towards sound gunshots, also construct confidence interval difference counts, estimate size -mean count (particular interest whether covers zero). Like : evidence, although still bit marginal, ravens fly towards gunshot sounds (P bit 0.01). suitable graph, , boxplot paired differences:","code":"library(ecostats) #> Loading required package: mvabund data(ravens) ravens1 = ravens[ravens$treatment==1,] #limit to just gunshot treatment t.test(ravens1$Before,ravens1$After,paired=TRUE,alternative = \"less\") #>  #>  Paired t-test #>  #> data:  ravens1$Before and ravens1$After #> t = -2.6, df = 11, p-value = 0.01235 #> alternative hypothesis: true mean difference is less than 0 #> 95 percent confidence interval: #>       -Inf -0.335048 #> sample estimates: #> mean difference  #>       -1.083333 boxplot(ravens1$delta,ylab=\"After-Before differences\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-6-pregnancy-and-smoking","dir":"Articles","previous_headings":"","what":"Exercise 1.6: Pregnancy and smoking","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"two variables: errors quantitative treatment categorical two levels (control nicotine treatment) research question effect mother’s smoking pregnancy resulting offspring?. context experiment, means estimating size change average #errors treatment vs control. estimation problem, can use confidence intervals average difference. use t-test procedure put focus confidence interval estimation: pretty sure (95% confident) true mean #errors made nicotine treatment 4 37 control. use comparative boxplots:","code":"t.test(errors~treatment,data=guineapig, var.equal=TRUE) #>  #>  Two Sample t-test #>  #> data:  errors by treatment #> t = -2.671, df = 18, p-value = 0.01558 #> alternative hypothesis: true difference in means between group C and group N is not equal to 0 #> 95 percent confidence interval: #>  -37.339333  -4.460667 #> sample estimates: #> mean in group C mean in group N  #>            23.4            44.3 plot(errors~treatment,data=guineapig)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-7-inference-notation-gender-ratio-in-bats","dir":"Articles","previous_headings":"","what":"Exercise 1.7: Inference notation – Gender ratio in bats","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"\\(n=65+44=109\\). \\(\\hat{p}\\). true proportion female bats colony written \\(p\\).","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-8-inference-notation-raven-counts","dir":"Articles","previous_headings":"","what":"Exercise 1.8: Inference notation – raven counts","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"know value \\(\\bar{x}_\\text{}-\\bar{x}_\\text{}\\). want make inferences unknown value \\(\\mu_\\text{}-\\mu_\\text{}\\).","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"code-box-1-1-analysing-kerrys-sex-ratio-data-on-bats","dir":"Articles","previous_headings":"","what":"Code Box 1.1: Analysing Kerry’s sex ratio data on bats","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"","code":"prop.test(65,109,0.5) #>  #>  1-sample proportions test with continuity correction #>  #> data:  65 out of 109, null probability 0.5 #> X-squared = 3.6697, df = 1, p-value = 0.05541 #> alternative hypothesis: true p is not equal to 0.5 #> 95 percent confidence interval: #>  0.4978787 0.6879023 #> sample estimates: #>         p  #> 0.5963303 2*pbinom(64,109,0.5,lower.tail=FALSE) #> [1] 0.05490882"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-9-assumptions-gender-ratio-in-bats","dir":"Articles","previous_headings":"","what":"Exercise 1.9: Assumptions – Gender ratio in bats","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"bats randomly sampled colony, taking simple random sample, assumption satisfied.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-10-assumptions-raven-example","dir":"Articles","previous_headings":"","what":"Exercise 1.10: Assumptions – Raven example","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"evidence violation normality assumption (points well within envelope, particular trend).","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"code-box-1-2-normal-quantile-plot-for-the-raven-data","dir":"Articles","previous_headings":"","what":"Code Box 1.2: Normal quantile plot for the raven data","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"","code":"par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) Before = c(0, 0, 0, 0, 0, 2, 1, 0, 0, 3, 5, 0) After = c(2, 1, 4, 1, 0, 5, 0, 1, 0, 3, 5, 2) qqnorm(After-Before, main=\"\") qqline(After-Before,col=\"red\") library(ecostats) qqenvelope(After-Before)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"code-box-1-3-logy-1-transformation-of-the-raven-data","dir":"Articles","previous_headings":"","what":"Code Box 1.3: log(y + 1)-transformation of the raven data","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"","code":"# Enter the data Before = c(0, 0, 0, 0, 0, 2, 1, 0, 0, 3, 5, 0) After = c(2, 1, 4, 1, 0, 5, 0, 1, 0, 3, 5, 2) # Transform the data using y_new = log(y+1): logBefore = log(Before+1) logAfter = log(After+1) # Construct a normal quantile plot of the transformed data qqenvelope(logAfter-logBefore)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-11-height-and-latitude","dir":"Articles","previous_headings":"","what":"Exercise 1.11: Height and latitude","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"Angela interested (interval) estimation – understand height related latitude. two variables: height quantitative latitude quantitative","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-12-transform-plant-height","dir":"Articles","previous_headings":"","what":"Exercise 1.12: Transform plant height?","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"data bunched zero – plants negative height! log-transformation might worth try  removed boundary seems removed strong right-skew.","code":"data(globalPlants) hist(globalPlants$height) hist(log(globalPlants$height))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-13-snails-on-seaweed","dir":"Articles","previous_headings":"","what":"Exercise 1.13: Snails on seaweed","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"research question invertebrate density change isolation? meaning specific hypothesis interest (change) looking evidence hypothesis. hypothesis test appropriate . two variables: invertebrate density quantitative response variable interest. isolation experimental factor taking three levels (0, 2 10 metres) use comparative boxplots, like :  used boxplot instead using plot Dist currently numerical variable rather factor, default behaviour plot scatterplot :(","code":"data(seaweed) boxplot(Total~Dist,data=seaweed)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter1Solutions.html","id":"exercise-1-14-transform-snails","dir":"Articles","previous_headings":"","what":"Exercise 1.14: Transform snails?","title":"Chapter 1 -- 'STATS 101' Revision -- Exercise solutions and Code Boxes","text":"boundary zero (can’t negative number snails!) data seem bunched , creating right-skew. Log-transformation removes boundary seems remove right-skew.","code":"par(mfrow=c(1,2), mgp=c(1.75,0.75,0), mar=c(3,3,1,1)) hist(seaweed$Total) hist(log(seaweed$Total))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-1-two-sample-t-test-for-guinea-pig-experiment","dir":"Articles","previous_headings":"","what":"Exercise 2.1 Two-sample t-test for guinea pig experiment","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"See Code Box 2.1, \\(P\\)-value 0.008. means test statistic unusually small good evidence effect nicotine. directly, starting stated test statistic \\(-2.67\\), test statistic \\(t_{n_1+n_2-2}\\) distribution hypothesis effect, calculate \\(P\\)-value directly :","code":"pt(-2.67,10+10-2) #> [1] 0.007807045"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"code-box-2-1-a-two-sample-t-test-of-the-data-from-the-guinea-pig-experiment","dir":"Articles","previous_headings":"","what":"Code Box 2.1 A two-sample t-test of the data from the guinea pig experiment","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"","code":"library(ecostats) #> Loading required package: mvabund  data(guineapig)  t.test(errors~treatment, data=guineapig, var.equal=TRUE, alternative=\"less\") #>  #>  Two Sample t-test #>  #> data:  errors by treatment #> t = -2.671, df = 18, p-value = 0.007791 #> alternative hypothesis: true difference in means between group C and group N is less than 0 #> 95 percent confidence interval: #>       -Inf -7.331268 #> sample estimates: #> mean in group C mean in group N  #>            23.4            44.3"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"code-box-2-2-smoking-and-pregnancy-checking-assumptions","dir":"Articles","previous_headings":"","what":"Code Box 2.2: Smoking and pregnancy – checking assumptions","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"normal quantile plots Figure 2.1 generated using code.   points lie simulation envelope, clear curve suggesting right skew. Also, standard deviations quite different, quite factor two, getting close. might worth looking (log-)transformation.","code":"qqenvelope(guineapig$errors[guineapig$treatment==\"N\"]) qqenvelope(guineapig$errors[guineapig$treatment==\"C\"]) by(guineapig$errors,guineapig$treatment,sd) #> guineapig$treatment: C #> [1] 12.30357 #> ------------------------------------------------------------  #> guineapig$treatment: N #> [1] 21.46858"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-2-water-quality","dir":"Articles","previous_headings":"","what":"Exercise 2.2: Water quality","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"research question [IBI] related catchment area estimation question, want estimate relationship IBI catchment area. two variables: catchment area quantitative Water quality (IBI) quantitative use scatterplot:  fit linear regression model, Code Box 2.3.","code":"data(waterQuality)  plot(quality~logCatchment, data=waterQuality)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"code-box-2-3-fitting-a-linear-regression-to-the-water-quality-data","dir":"Articles","previous_headings":"","what":"Code Box 2.3: Fitting a linear regression to the water quality data","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"","code":"data(waterQuality)  fit_qual=lm(quality~logCatchment, data = waterQuality)  summary(fit_qual) #>  #> Call: #> lm(formula = quality ~ logCatchment, data = waterQuality) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.891 -3.354 -1.406  4.102 11.588  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)    74.266      7.071  10.502 1.38e-08 *** #> logCatchment  -11.042      1.780  -6.204 1.26e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 5.397 on 16 degrees of freedom #> Multiple R-squared:  0.7064, Adjusted R-squared:  0.688  #> F-statistic: 38.49 on 1 and 16 DF,  p-value: 1.263e-05"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-3-water-quality-interpreting-r-output","dir":"Articles","previous_headings":"","what":"Exercise 2.3: Water quality – interpreting R output","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"approximate 95% CI use confint: Either way 95% confident logCatchment changes 1 (meaning ten-fold increase catchment area, since log10-transformed catchment area used), IBI decreases 7 15.","code":"-11.042+c(-2,2)*1.780 #> [1] -14.602  -7.482 confint(fit_qual) #>                  2.5 %   97.5 % #> (Intercept)   59.27480 89.25623 #> logCatchment -14.81464 -7.26864"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"code-box-2-4-diagnostic-plots-for-the-water-quality-data","dir":"Articles","previous_headings":"","what":"Code Box 2.4: Diagnostic plots for the water quality data","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"produce residual vs fits plot, normal quantile plot residuals, just take fitted regression object (like fit_qual, produced Code Box 2.3) apply plot function:  argument lets choose plot construct (1=residuals vs fits, 2=normal quantile plot). Alternatively, can use ecostats::plotenvelope add simulation envelopes around points plots, check deviations expected patterns large compared might expect datasets satisfy model assumptions:  Assumptions look reasonable – trend residual vs fits plot, normal quantile plot close straight line. Points well within simulation envelopes, suggesting departures also small compared expected model correct.","code":"plot(fit_qual, which=1:2) library(ecostats)  plotenvelope(fit_qual, which=1:2)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-4-water-quality-assumption-checks","dir":"Articles","previous_headings":"","what":"Exercise 2.4: Water quality{ assumption checks","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"four regression assumptions: (conditional) independence: checked using plots, depends primarily study design Normality can checked using normal quantile plot residuals, looks pretty good . Equal variance can checked looking fan shape residual vs fits plot, trend . Linearity can checked looking U-shape residual vs fits plot, pattern concerns assumption .","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"code-box-2-5-two-sample-t-test-output-for-the-smoking-pregnant-data-again","dir":"Articles","previous_headings":"","what":"Code Box 2.5: Two-sample t-test output for the smoking-pregnant data, again","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"","code":"t.test(errors~treatment, data=guineapig, var.equal=TRUE) #>  #>  Two Sample t-test #>  #> data:  errors by treatment #> t = -2.671, df = 18, p-value = 0.01558 #> alternative hypothesis: true difference in means between group C and group N is not equal to 0 #> 95 percent confidence interval: #>  -37.339333  -4.460667 #> sample estimates: #> mean in group C mean in group N  #>            23.4            44.3"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"code-box-2-6-linear-regression-analysis-of-the-smoking-pregnant-data--compare-to-code-box-2-5","dir":"Articles","previous_headings":"","what":"Code Box 2.6: Linear regression analysis of the smoking-pregnant data. compare to Code Box 2.5","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"","code":"ft_guineapig=lm(errors~treatment,data=guineapig)  summary(ft_guineapig) #>  #> Call: #> lm(formula = errors ~ treatment, data = guineapig) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -21.30 -11.57  -5.35  11.85  44.70  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   23.400      5.533   4.229 0.000504 *** #> treatmentN    20.900      7.825   2.671 0.015581 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 17.5 on 18 degrees of freedom #> Multiple R-squared:  0.2838, Adjusted R-squared:  0.2441  #> F-statistic: 7.134 on 1 and 18 DF,  p-value: 0.01558"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-5-global-plant-height-against-latitude","dir":"Articles","previous_headings":"","what":"Exercise 2.5: Global plant height against latitude","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"Angela two variables interest – height latitude – quantitative. linear regression good starting point.   original scatterplot suggests data “pushed ” boundary height=0, suggesting log-transformation. linear model residual plots substantiate , normal quantile plot clearly strongly right-skewed, residual vs fits plot suggesting fan-shape. let’s log-transform height.   OK suddenly everything looking lot better!","code":"library(ecostats)  data(globalPlants)  plot(height~lat,data=globalPlants) ft_height=lm(height~lat,data=globalPlants)  summary(ft_height) #>  #> Call: #> lm(formula = height ~ lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -15.740  -7.905  -5.289   4.409  68.326  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 17.00815    2.61957   6.493 1.66e-09 *** #> lat         -0.20759    0.06818  -3.045  0.00282 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 13.59 on 129 degrees of freedom #> Multiple R-squared:  0.06705,    Adjusted R-squared:  0.05982  #> F-statistic: 9.271 on 1 and 129 DF,  p-value: 0.002823  plotenvelope(ft_height,which=1:2) plot(height~lat,data=globalPlants,log=\"y\") globalPlants$logHeight=log10(globalPlants$height)   ft_logHeight=lm(logHeight~lat,data=globalPlants)  summary(ft_logHeight) #>  #> Call: #> lm(formula = logHeight ~ lat, data = globalPlants) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.49931 -0.48368 -0.04697  0.41125  1.54347  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  1.152525   0.124193   9.280 5.19e-16 *** #> lat         -0.018501   0.003232  -5.724 6.94e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.6442 on 129 degrees of freedom #> Multiple R-squared:  0.2025, Adjusted R-squared:  0.1963  #> F-statistic: 32.76 on 1 and 129 DF,  p-value: 6.935e-08  plotenvelope(ft_logHeight,which=1:2)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-6-transform-guinea-pigs","dir":"Articles","previous_headings":"","what":"Exercise 2.6: Transform guinea pigs?","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"actually slightly easier check assumptions using linear model, ’ll use lm reanalysis.  much better assumptions: plots look better, standard deviations similar. Results became slightly significant, unexpected, data closer normal (usually means tests based linear models power). Notice noticeable smoother envelope residual vs fits plot – t-test (later , one-way factorial ANOVA designs) mean residuals exactly zero fitted values. Trying assess trend plot non-linearity really useful, thing worry fan shape. also show smoother scale-location plot increasing trend:  increasing trend good :)","code":"data(guineapig)  guineapig$logErrors=log(guineapig$errors)   ft_logGuineapigs = lm(logErrors~treatment, data=guineapig)  summary(ft_logGuineapigs) #>  #> Call: #> lm(formula = logErrors ~ treatment, data = guineapig) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.72780 -0.33292 -0.07262  0.45788  0.81976  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   3.0304     0.1534  19.750  1.2e-13 *** #> treatmentN    0.6665     0.2170   3.071  0.00658 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.4852 on 18 degrees of freedom #> Multiple R-squared:  0.3439, Adjusted R-squared:  0.3074  #> F-statistic: 9.434 on 1 and 18 DF,  p-value: 0.006577  plotenvelope(ft_logGuineapigs) by(guineapig$logErrors,guineapig$treatment,sd) #> guineapig$treatment: C #> [1] 0.521912 #> ------------------------------------------------------------  #> guineapig$treatment: N #> [1] 0.445521 plotenvelope(ft_logGuineapigs,which=3)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter2Solutions.html","id":"exercise-2-7-influential-value-in-the-water-quality-data","dir":"Articles","previous_headings":"","what":"Exercise 2.7: Influential value in the water quality data","title":"Chapter 2 -- An importance equivalence result -- Exercise solutions and Code Boxes","text":"\\(R^2\\) value decreased fair bit, makes bit sense removed dataset point extreme \\(X\\) value. \\(R^2\\) function sampling design sampling broader range catchment areas increase \\(R^2\\), just decreased range catchment areas included analysis. \\(P\\)-value decreased slightly similar reasons.","code":"data(waterQuality)  ft_water = lm(quality~logCatchment,data=waterQuality)  summary(ft_water) #>  #> Call: #> lm(formula = quality ~ logCatchment, data = waterQuality) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.891 -3.354 -1.406  4.102 11.588  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)    74.266      7.071  10.502 1.38e-08 *** #> logCatchment  -11.042      1.780  -6.204 1.26e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 5.397 on 16 degrees of freedom #> Multiple R-squared:  0.7064, Adjusted R-squared:  0.688  #> F-statistic: 38.49 on 1 and 16 DF,  p-value: 1.263e-05  ft_water2 = lm(quality~logCatchment,data=waterQuality, subset=waterQuality$logCatchment>2)  summary(ft_water2) #>  #> Call: #> lm(formula = quality ~ logCatchment, data = waterQuality, subset = waterQuality$logCatchment >  #>     2) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -7.8709 -3.3107 -0.3438  4.5358 11.1955  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)     77.71       9.70   8.011 8.46e-07 *** #> logCatchment   -11.87       2.39  -4.966 0.000169 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 5.522 on 15 degrees of freedom #> Multiple R-squared:  0.6218, Adjusted R-squared:  0.5966  #> F-statistic: 24.66 on 1 and 15 DF,  p-value: 0.0001691"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-1-global-plant-height","dir":"Articles","previous_headings":"","what":"Exercise 3.1: Global plant height","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"Can latitudinal variation plant height explained climate? hypothesis testing question: want know relationship height latitude, controlling climate. research question now involves several variables: height (quantitative), latitude (quantitative) climate. climate measured specified , typically involves quantitative measurements temperature, precipitation often related variables. answer question using multiple regression, type linear model, see Code Box 3.2.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-1-simple-linear-regression-of-global-plant-height-data---predicting","dir":"Articles","previous_headings":"","what":"Code Box 3.1: Simple linear regression of global plant height data - predicting","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"height function latitude .","code":"library(ecostats)  data(globalPlants)  ft_heightLat=lm(height~lat, data=globalPlants)  summary(ft_heightLat) #>  #> Call: #> lm(formula = height ~ lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -15.740  -7.905  -5.289   4.409  68.326  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 17.00815    2.61957   6.493 1.66e-09 *** #> lat         -0.20759    0.06818  -3.045  0.00282 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 13.59 on 129 degrees of freedom #> Multiple R-squared:  0.06705,    Adjusted R-squared:  0.05982  #> F-statistic: 9.271 on 1 and 129 DF,  p-value: 0.002823"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-2-multiple-linear-regression-of-global-plant-height-data-on-r-predicting","dir":"Articles","previous_headings":"","what":"Code Box 3.2: Multiple linear regression of global plant height data on R – predicting","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plant height function annual precipitation latitude. Note code almost simple linear regression – just add extra predictor variable!","code":"ft_heightRainLat=lm(height~rain+lat, data=globalPlants)  summary(ft_heightRainLat) #>  #> Call: #> lm(formula = height ~ rain + lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -16.965  -7.144  -3.529   2.317  65.434  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)    #> (Intercept)  5.223135   4.317148   1.210  0.22856    #> rain         0.005503   0.001637   3.363  0.00102 ** #> lat         -0.052507   0.080197  -0.655  0.51381    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 13.08 on 128 degrees of freedom #> Multiple R-squared:  0.1428, Adjusted R-squared:  0.1294  #> F-statistic: 10.66 on 2 and 128 DF,  p-value: 5.226e-05"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-3-r-code-to-produce-the-plots-of-figure-3-1","dir":"Articles","previous_headings":"","what":"Code Box 3.3: R code to produce the plots of Figure 3.1","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk box3.3avPlots plot chunk box3.3avPlots","code":"library(car) avPlots(ft_heightLat, terms = ~lat, xlab=\"Latitude\", ylab=\"Height\", grid=FALSE) ##left plot avPlots(ft_heightRainLat, terms = ~lat, xlab=\"Latitude|rain\", ylab=\"Height|rain\", grid=FALSE) ## right plot"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-4-tests-of-multiple-parameters-on-r-using-the-anova-function","dir":"Articles","previous_headings":"","what":"Code Box 3.4: Tests of multiple parameters on R using the anova function","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"","code":"ft_Lat=lm(height~lat,data=globalPlants)  ft_LatClim=lm(height~lat+rain+temp,data=globalPlants)  anova(ft_Lat,ft_LatClim) #> Analysis of Variance Table #>  #> Model 1: height ~ lat #> Model 2: height ~ lat + rain + temp #>   Res.Df   RSS Df Sum of Sq     F   Pr(>F)    #> 1    129 23818                                #> 2    127 21794  2    2023.9 5.897 0.003556 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-5-multi-collinearity-example-adding-rainfall-in-the-wettest-month-rain-wetm-to-a-model-that-already-has-annual-precipitation-rain-","dir":"Articles","previous_headings":"","what":"Code Box 3.5: Multi-collinearity example – adding rainfall in the wettest month (rain.wetm) to a model that already has annual precipitation (rain).","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"Note standard errors larger suddenly everything non-significant.","code":"ft_climproblems=lm(height~rain+rain.wetm+lat,data=globalPlants)  summary(ft_climproblems) #>  #> Call: #> lm(formula = height ~ rain + rain.wetm + lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -16.868  -7.286  -3.472   2.345  65.196  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|) #> (Intercept)  4.907914   4.607746   1.065    0.289 #> rain         0.004911   0.003370   1.457    0.148 #> rain.wetm    0.004686   0.023283   0.201    0.841 #> lat         -0.046927   0.085140  -0.551    0.582 #>  #> Residual standard error: 13.12 on 127 degrees of freedom #> Multiple R-squared:  0.143,  Adjusted R-squared:  0.1228  #> F-statistic: 7.066 on 3 and 127 DF,  p-value: 0.0001977"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-2-plant-height-data-transform-response","dir":"Articles","previous_headings":"","what":"Exercise 3.2: Plant height data – transform response?","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk ex3.2heightRainLat diagnostic plots look lot better. now results changed – effect latitude, controlling rainfall, significant! results trustworthy previous ones assumptions looking reasonable now, whereas strong right-skew. Results changing entirely unexpected . Least squares methods low power applied strongly skewed data. happened (fairly strong) pattern data, latitudinal effects explained rainfall, couldn’t see data strongly skewed, makes hard see anything.","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  globalPlants$loght = log(globalPlants$height)  ft_logheightRainLat=lm(loght~rain+lat, data=globalPlants)  plotenvelope(ft_logheightRainLat) #> Registered S3 method overwritten by 'GET': #>   method       from  #>   print.fclust e1071 summary(ft_logheightRainLat) #>  #> Call: #> lm(formula = loght ~ rain + lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.3508 -1.0542 -0.0468  0.9755  3.2702  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)    #> (Intercept)  1.4974481  0.4752634   3.151  0.00203 ** #> rain         0.0005400  0.0001802   2.997  0.00328 ** #> lat         -0.0273834  0.0088286  -3.102  0.00237 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.439 on 128 degrees of freedom #> Multiple R-squared:  0.2548, Adjusted R-squared:  0.2432  #> F-statistic: 21.89 on 2 and 128 DF,  p-value: 6.68e-09"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-3-plant-height-skewed-rainfall-data","dir":"Articles","previous_headings":"","what":"Exercise 3.3: Plant height – skewed rainfall data?","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk ex3.3logRain plot chunk ex3.3logRain histogram rainfall slightly right-skewed, although ’s super-scary. Reanalysing data still get pretty good-loking diagnostic plots results look similar – \\(R^2\\) almost , \\(P\\)-values still significant.","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  globalPlants$logRain = log(globalPlants$rain)  hist(globalPlants$rain)  hist(globalPlants$logRain) ft_logheightlogRainLat=lm(loght~logRain+lat, data=globalPlants)  plotenvelope(ft_logheightlogRainLat) summary(ft_logheightlogRainLat) #>  #> Call: #> lm(formula = loght ~ logRain + lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.3620 -1.0032  0.0473  0.9843  3.1241  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)    #> (Intercept) -1.952796   1.485134  -1.315  0.19090    #> logRain      0.603392   0.191128   3.157  0.00199 ** #> lat         -0.027740   0.008599  -3.226  0.00160 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.434 on 128 degrees of freedom #> Multiple R-squared:  0.2601, Adjusted R-squared:  0.2486  #> F-statistic:  22.5 on 2 and 128 DF,  p-value: 4.224e-09"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-6-computing-variance-inflation-factors-to-check-for-multi-collinearity-","dir":"Articles","previous_headings":"","what":"Code Box 3.6: Computing variance inflation factors to check for multi-collinearity.","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"Clearly adding rain.wetm model done damage (rain , much lat).","code":"require(car)  vif(ft_heightRainLat) #>   rain    lat  #> 1.4942 1.4942  vif(ft_climproblems) #>      rain rain.wetm       lat  #>    6.2878    7.0311    1.6714"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-7-correlations-and-pairwise-scatterplots-to-look-for-multi-collinearity-","dir":"Articles","previous_headings":"","what":"Code Box 3.7: Correlations and pairwise scatterplots to look for multi-collinearity.","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk box3.7heightPairs","code":"X = data.frame(globalPlants$lat,globalPlants$rain,globalPlants$rain.wetm) cor(X) #>                        globalPlants.lat globalPlants.rain globalPlants.rain.wetm #> globalPlants.lat              1.0000000        -0.5750884              -0.633621 #> globalPlants.rain            -0.5750884         1.0000000               0.917008 #> globalPlants.rain.wetm       -0.6336210         0.9170080               1.000000 pairs(X)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-4-snails-on-seaweed","dir":"Articles","previous_headings":"","what":"Exercise 3.4: Snails on seaweed","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"invertebrate density change isolation? research question asks hypothesis test: relationship invertebrate density isolation. two variables – invertebrate density (quantitative) distance isolation, set experimentally 0, 2 10 metres (categorical). ’m thinking ANOVA.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-8-analysis-of-variance-in-r-for-the-seaweed-data-of-exercise-1-13-using","dir":"Articles","previous_headings":"","what":"Code Box 3.8: Analysis of variance in R for the seaweed data of Exercise 1.13 using","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"lm. strong evidence Dist effect.","code":"data(seaweed)  seaweed$Dist = factor(seaweed$Dist)  ft_seaweed=lm(Total~Dist,data=seaweed)  anova(ft_seaweed) #> Analysis of Variance Table #>  #> Response: Total #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> Dist       2 300.25 150.123  8.5596 0.0005902 *** #> Residuals 54 947.08  17.539                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-9-running-confint-on-the-seaweed-data-doesnt-give-us-what-we","dir":"Articles","previous_headings":"","what":"Code Box 3.9: Running confint on the seaweed data doesn’t give us what we","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"want.","code":"confint(ft_seaweed) #>                 2.5 %   97.5 % #> (Intercept) 2.7785049 6.533423 #> Dist2       2.9211057 8.460686 #> Dist10      0.4107071 5.720963"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"code-box-3-10-analysis-of-variance-of-the-seaweed-data-of-exercise-1-13-with-tukeys-multiple-comparisons-via-the-multcomp-package-","dir":"Articles","previous_headings":"","what":"Code Box 3.10: Analysis of variance of the seaweed data of Exercise 1.13 with Tukey’s multiple comparisons via the multcomp package.","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk box3.10seaweedmultcomp","code":"library(multcomp)  contDist = mcp(Dist=\"Tukey\") # telling R to compare on the Dist factor  compDist = glht(ft_seaweed, linfct=contDist) # run multiple comparisions  summary(compDist) #>  #>   Simultaneous Tests for General Linear Hypotheses #>  #> Multiple Comparisons of Means: Tukey Contrasts #>  #>  #> Fit: lm(formula = Total ~ Dist, data = seaweed) #>  #> Linear Hypotheses: #>             Estimate Std. Error t value Pr(>|t|)     #> 2 - 0 == 0     5.691      1.382   4.119   <0.001 *** #> 10 - 0 == 0    3.066      1.324   2.315   0.0622 .   #> 10 - 2 == 0   -2.625      1.382  -1.900   0.1483     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> (Adjusted p values reported -- single-step method)  plot(compDist)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-5-plant-height-climate-explains-patterns","dir":"Articles","previous_headings":"","what":"Exercise 3.5: Plant height – climate explains patterns?","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"take climate mean temperature (temp) rainfall (rain). good plan fit multiple regression model, appropriately transformed data, see latitude explains variation captured climate. plot chunk ex3.5logClimate terms minding P’s Q’s: Q’s research question suggests primarily interested seeing effect latitude controlling climate, hence primary interest bottom row summmary table. P’s (conditional) independence requires randomly sampled sites. wasn’t actually done left waving arms thinking hard possible sources dependence… sites tended relatively far apart geographically unlikely exhibit dependence. check using spatial correlogram (see Chapter 7). normality trend normal quantile plot suggests evidence assumption equal variance fan-shape pattern residual vs fits plot suggests looks OK linearity U-shape residual vs fits plots suggests looks reasonable. adding temp model, longer evidence latitudinal effect. latitudinal variation height can explained climate, sense evidence latitudinal effect controlling climate. main reason temperature latitude highly correlated (), hence can think latitude primarily surrogate temperature. immediately obvious however plants tend grow taller towards equator warmer (hence temp driving relationship) reduced seasonality even day lengths (hence lat driver). plot chunk 3.5Climatepairs","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  globalPlants$logRain = log(globalPlants$rain)  globalPlants$logHt = log(globalPlants$height)  ft_logheightClim=lm(loght~logRain+temp+lat, data=globalPlants)  plotenvelope(ft_logheightClim) summary(ft_logheightClim) #>  #> Call: #> lm(formula = loght ~ logRain + temp + lat, data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.2777 -1.0191 -0.0016  0.9328  3.2730  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)    #> (Intercept) -3.45043    1.96520  -1.756  0.08154 .  #> logRain      0.64012    0.19347   3.309  0.00122 ** #> temp         0.03855    0.03319   1.162  0.24760    #> lat         -0.00753    0.01940  -0.388  0.69859    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.432 on 127 degrees of freedom #> Multiple R-squared:  0.2679, Adjusted R-squared:  0.2506  #> F-statistic: 15.49 on 3 and 127 DF,  p-value: 1.2e-08 X = data.frame(globalPlants$lat,globalPlants$rain,globalPlants$temp) cor(X) #>                   globalPlants.lat globalPlants.rain globalPlants.temp #> globalPlants.lat         1.0000000        -0.5750884        -0.9158796 #> globalPlants.rain       -0.5750884         1.0000000         0.4786965 #> globalPlants.temp       -0.9158796         0.4786965         1.0000000 pairs(X)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-6-habitat-con-guration-study-mind-your-ps-and-qs","dir":"Articles","previous_headings":"","what":"Exercise 3.6: Habitat conguration study { mind your P’s and Q’s","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk ex3.6seaweedbox Small means small variances. boundary zero data “pushed ” , Total tending take small values near zero Dist=0, less half sd Dist=2 Dist=10. also suggestion non-normality checking assumptions fitted ANOVA model: plot chunk ex3.6seaweedlogreplot Notice quantile plot points get close lower bound middle plot get near top large values – mildly suggestive skew. similarly see increasing trend scale-location plot, although stay within simulation bounds. Notice subtle patterns particularly strong. (aside, note envelope visible residual vs fits plot. happens fitting ANOVA model, ends residuals mean exactly equal zero treatments, hence mean trend res vs fits plot fitted values, just flat line zero. Put another way, non-linearity isn’t assumption worry ANOVA models, fitted model goes exactly mean treatment.) can try address suggestion skew using log-transformation: plot chunk ex3.6seaweedtrans looking pretty good now, let’s run . plot chunk ex3.6seaweedlogre plot chunk ex3.6seaweedlogre main change results now evidence mean logTot different Dist==0 Dist==10 now well Dist==0 Dist==2. example able better see patterns assumptions closer satisfied (particular, removing right-skew response fitting linear model).","code":"boxplot(Total~Dist,data=seaweed) by(seaweed$Total,seaweed$Dist,sd) #> seaweed$Dist: 0 #> [1] 2.108063 #> ----------------------------------------------------------------------  #> seaweed$Dist: 2 #> [1] 5.507271 #> ----------------------------------------------------------------------  #> seaweed$Dist: 10 #> [1] 4.456622 par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  plotenvelope(ft_seaweed,which=1:3) seaweed$logTot = log(seaweed$Total)  boxplot(logTot~Dist,data=seaweed) by(seaweed$logTot,seaweed$Dist,sd) #> seaweed$Dist: 0 #> [1] 0.4423775 #> ----------------------------------------------------------------------  #> seaweed$Dist: 2 #> [1] 0.667999 #> ----------------------------------------------------------------------  #> seaweed$Dist: 10 #> [1] 0.5421633 par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  ft_loghabconf=lm(logTot~Dist,data=seaweed)  plotenvelope(ft_loghabconf,which=1:2) anova(ft_loghabconf) #> Analysis of Variance Table #>  #> Response: logTot #>           Df  Sum Sq Mean Sq F value    Pr(>F)     #> Dist       2  4.8786 2.43929   8.011 0.0008981 *** #> Residuals 54 16.4427 0.30449                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  library(multcomp)  contDist = mcp(Dist=\"Tukey\") # telling R to compare on the Dist factor  compDistlog = glht(ft_loghabconf, linfct=contDist) # run multiple comparisions  summary(compDistlog) #>  #>   Simultaneous Tests for General Linear Hypotheses #>  #> Multiple Comparisons of Means: Tukey Contrasts #>  #>  #> Fit: lm(formula = logTot ~ Dist, data = seaweed) #>  #> Linear Hypotheses: #>             Estimate Std. Error t value Pr(>|t|)     #> 2 - 0 == 0    0.7117     0.1820   3.910 0.000796 *** #> 10 - 0 == 0   0.4584     0.1745   2.627 0.029531 *   #> 10 - 2 == 0  -0.2533     0.1820  -1.392 0.352272     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> (Adjusted p values reported -- single-step method)  plot(compDistlog)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter3Solutions.html","id":"exercise-3-7-habitat-con-guration-study-small-plots","dir":"Articles","previous_headings":"","what":"Exercise 3.7: Habitat conguration study { small plots","title":"Chapter 3 -- Regression with multiple predictor variables -- Exercise solutions and Code Boxes","text":"plot chunk ex3.7seaweedSMALL Results now less significant, marginal evidence difference mean logTot Dist==0 Dist==10. expected almost halved sample size: reducing sample size, less able see patterns data (less data look patterns !).","code":"habSmall=seaweed[seaweed$Size==\"SMALL\",]  ft_smhabconf=lm(logTot~Dist,data=habSmall)  plotenvelope(ft_smhabconf,which=1:2) anova(ft_smhabconf) #> Analysis of Variance Table #>  #> Response: logTot #>           Df Sum Sq Mean Sq F value Pr(>F)   #> Dist       2 2.8974 1.44870  4.9358 0.0149 * #> Residuals 27 7.9247 0.29351                  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  library(multcomp)  contDist = mcp(Dist=\"Tukey\") # telling R to compare on the Dist factor  compDistsm = glht(ft_smhabconf, linfct=contDist) # run multiple comparisons  summary(compDistsm) #>  #>   Simultaneous Tests for General Linear Hypotheses #>  #> Multiple Comparisons of Means: Tukey Contrasts #>  #>  #> Fit: lm(formula = logTot ~ Dist, data = habSmall) #>  #> Linear Hypotheses: #>             Estimate Std. Error t value Pr(>|t|)   #> 2 - 0 == 0    0.7165     0.2423   2.957   0.0168 * #> 10 - 0 == 0   0.5808     0.2423   2.397   0.0594 . #> 10 - 2 == 0  -0.1357     0.2423  -0.560   0.8422   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> (Adjusted p values reported -- single-step method)  plot(compDistsm) dim(seaweed) #> [1] 57 23 dim(habSmall) #> [1] 30 23"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-1-ravens-and-gunshots","dir":"Articles","previous_headings":"","what":"Exercise 4.1: Ravens and gunshots","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"assume: random sample paired differences (importantly, paired differences independent ) paired differences approixmately normal. plot chunk ex4.1ravenscheck looks OK, evidence normality ","code":"library(ecostats)  data(ravens)  qqenvelope(ravens$delta[ravens$treatment==1])"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-1-paired-t-test-for-the-ravens-data","dir":"Articles","previous_headings":"","what":"Code Box 4.1: Paired t-test for the ravens data","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"evidence ravens fly towards sound gunshots.","code":"data(ravens)  crowGun = ravens[ravens$treatment == 1,]  t.test(crowGun$Before, crowGun$After, paired=TRUE, alternative=\"less\") #>  #>  Paired t-test #>  #> data:  crowGun$Before and crowGun$After #> t = -2.6, df = 11, p-value = 0.01235 #> alternative hypothesis: true mean difference is less than 0 #> 95 percent confidence interval: #>       -Inf -0.335048 #> sample estimates: #> mean difference  #>       -1.083333"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-2-ravens-guns-and-air-horns","dir":"Articles","previous_headings":"","what":"Exercise 4.2: Ravens, guns and air horns","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"evidence response gunshot different response treatments? use linear model, location included blocking factor control differences raven abundance one place another, see Code Box 4.3.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-2-paired-t-test-for-the-ravens-data-via-a-linear-model","dir":"Articles","previous_headings":"","what":"Code Box 4.2: Paired t-test for the ravens data via a linear model","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"library(reshape2)  crowLong = melt(crowGun,measure.vars = c(\"Before\",\"After\"),                  variable.name=\"time\",value.name=\"ravens\")  head(crowLong) #>   delta    site treatment trees   time ravens #> 1     2 pilgrim         1     1 Before      0 #> 2     1 pacific         1     1 Before      0 #> 3     4 uhl hil         1     1 Before      0 #> 4     1 wolff r         1     1 Before      0 #> 5     0 teton p         1     1 Before      0 #> 6     3 glacier         1     1 Before      2  ravenlm = lm(ravens~site+time,data=crowLong)  anova(ravenlm) #> Analysis of Variance Table #>  #> Response: ravens #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> site      11 55.458  5.0417    4.84 0.007294 ** #> time       1  7.042  7.0417    6.76 0.024694 *  #> Residuals 11 11.458  1.0417                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-3-a-linear-model-for-the-blocked-design-given-by-the-raven-counts-in-exercise-4-2","dir":"Articles","previous_headings":"","what":"Code Box 4.3: A linear model for the blocked design given by the raven counts in Exercise 4.2","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"analyse, first subset three treatments interest (1=gunshot, 2=airhorn, 3=whistle): check assumptions look diagnostic plots: plot chunk box4.3ravensblockassumptions residual vs fits plot fan-shaped pattern, suggesting transformation might good idea !","code":"crowAfter = ravens[ravens$treatment <=3,] ft_crowAfter = lm(After~site+treatment,data=crowAfter) anova(ft_crowAfter) #> Analysis of Variance Table #>  #> Response: After #>           Df Sum Sq Mean Sq F value Pr(>F) #> site      11 28.667  2.6061  0.9269 0.5327 #> treatment  1  2.667  2.6667  0.9485 0.3402 #> Residuals 23 64.667  2.8116 par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  plotenvelope(ft_crowAfter)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-3-seaweed-snails-and-seaweed-mass","dir":"Articles","previous_headings":"","what":"Exercise 4.3: Seaweed, snails and seaweed mass","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"effect distance isolation controlling wet mass? Q’s – hypothesis test, effect Total Dist controlling Wmass. P’s three variables interest: Total quantitative response Dist factor (0, 2 10) Wmass quantitative variable, use covariate can get three variables onto graph using scatterplot, different colours different treatment levels, Code Box 4.4.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-4-scatterplot-of-data-from-exercise-4-3-","dir":"Articles","previous_headings":"","what":"Code Box 4.4: Scatterplot of data from Exercise 4.3.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"plot chunk box4.4seaweedplot","code":"data(seaweed)  seaweed$Dist = factor(seaweed$Dist)  plot(Total~Wmass, data=seaweed, col=Dist,        xlab=\"Wet Mass [log scale]\",ylab=\"Density (per gram) [log scale]\")  legend(\"topright\",levels(seaweed$Dist),col=1:3,pch=1)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-5-analysis-of-covariance-for-the-seaweed-data-of-exercise-4-3-","dir":"Articles","previous_headings":"","what":"Code Box 4.5: Analysis of covariance for the seaweed data of Exercise 4.3.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"seaweed$logTot = log(seaweed$Total)  seaweed$logWmass = log(seaweed$Wmass)  lmMassDist=lm(logTot~logWmass+Dist,data=seaweed)   anova(lmMassDist) #> Analysis of Variance Table #>  #> Response: logTot #>           Df  Sum Sq Mean Sq F value    Pr(>F)     #> logWmass   1  7.7216  7.7216 35.7165 1.975e-07 *** #> Dist       2  2.1415  1.0708  4.9528   0.01067 *   #> Residuals 53 11.4582  0.2162                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-4-checking-ancova-assumptions","dir":"Articles","previous_headings":"","what":"Exercise 4.4: Checking ANCOVA assumptions","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"Independence can guaranteed randomly allocating Dist treatments plots. Remaining assumptions can checked using diagnostic plots. plot chunk ex4.4seaweedplt (Note plotenvelope run just 99 iterations, speed computation time.) normality - normal quantile plot close straight line OK equal variance - fan shape residual vs fits plot seems OK linearity – U-shape residual vs fits plot seems OK","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plotenvelope(lmMassDist, n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-6-ancova-with-the-order-of-terms-switched-","dir":"Articles","previous_headings":"","what":"Code Box 4.6: ANCOVA with the order of terms switched.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"Notice switching order changes results ANOVA table, interpretation.","code":"lmDistMass=lm(logTot~Dist+logWmass,data=seaweed)  anova(lmDistMass) #> Analysis of Variance Table #>  #> Response: logTot #>           Df  Sum Sq Mean Sq F value    Pr(>F)     #> Dist       2  4.8786  2.4393  11.283 8.273e-05 *** #> logWmass   1  4.9845  4.9845  23.056 1.329e-05 *** #> Residuals 53 11.4582  0.2162                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-5-order-of-terms-in-writing-out-a-model-for-snails-and-seaweed-","dir":"Articles","previous_headings":"","what":"Exercise 4.5: Order of terms in writing out a model for snails and seaweed.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"correct model ...logWmass+Dist can look effect Dist controlling logWmass.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-7-type-ii-sums-of-squares-for-the-ancova-of-snails-and-seaweed-","dir":"Articles","previous_headings":"","what":"Code Box 4.7: “Type II sums of squares” for the ANCOVA of snails and seaweed.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"drop1(lmMassDist,test=\"F\") #> Single term deletions #>  #> Model: #> logTot ~ logWmass + Dist #>          Df Sum of Sq    RSS     AIC F value    Pr(>F)     #> <none>                11.458 -83.448                       #> logWmass  1    4.9845 16.443 -64.861 23.0561 1.329e-05 *** #> Dist      2    2.1415 13.600 -77.681  4.9528   0.01067 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-6-snails-isolation-and-time","dir":"Articles","previous_headings":"","what":"Exercise 4.6: Snails, isolation and time","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"Q’s – research question: invertebrate density change isolation? isolation effect vary time period? want test specific hypothesis (effect Dist, interaction Dist Time). P’s three variables involved research question: Total invertebrate density (quantitative) Dist factor (0, 2 10) Time also factor (5 10 weeks) Given previous information also add logWmass another covariate… Comparative boxplots good way start, Code Box 4.8.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-8-a-comparative-boxplot-of-snail-density-at-each-of-the-six-possible-combinations-of-sampling-time-and-distance-of-isolation-","dir":"Articles","previous_headings":"","what":"Code Box 4.8: A comparative boxplot of snail density at each of the six possible combinations of sampling time and distance of isolation.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"plot chunk box4.8seaweedcompBox","code":"plot(Total ~ interaction(Dist,Time), data=seaweed, log=\"y\") ## and as usual use xlabel, ylabel to name axes"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-7-factorial-anova-assumptions","dir":"Articles","previous_headings":"","what":"Exercise 4.7: Factorial ANOVA assumptions","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"plot chunk ex4.7seaweedfact (Note plotenvelope run just 99 iterations, speed computation time.) independence: plots randomly allocated treatments satisfied normality: normal quantile plot close straight line looks OK equal variance: fan-shape residual vs fits plot looks OK linearity/additivity assumption factorial ANOVA","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0))  ft_seaweedFact=lm(logTot~Time*Dist, data=seaweed)  plotenvelope(ft_seaweedFact, n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-9-factorial-anova-of-snails-isolation-and-time","dir":"Articles","previous_headings":"","what":"Code Box 4.9: Factorial ANOVA of Snails, Isolation, and Time","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"marginal evidence interaction strong evidence Dist main effect. effect Dist potentially vary Time. Note used Time*Dist Time variable primary interest, Dist, include Time control sampling time effects","code":"ft_seaweedFact = lm(logTot~Time*Dist,data=seaweed) anova(ft_seaweedFact) #> Analysis of Variance Table #>  #> Response: logTot #>           Df  Sum Sq Mean Sq F value    Pr(>F)     #> Time       1  0.2433 0.24333  0.8512 0.3605470     #> Dist       2  5.0323 2.51613  8.8023 0.0005201 *** #> Time:Dist  2  1.4673 0.73367  2.5666 0.0866804 .   #> Residuals 51 14.5784 0.28585                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-10-r-code-for-the-interaction-plot-in-figure-4-1-","dir":"Articles","previous_headings":"","what":"Code Box 4.10: R code for the interaction plot in Figure 4.1.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"plot chunk box4.10seaweedinterplot Alternatively, simpler plot without data points , try: plot chunk box4.10seaweedinterplot2","code":"library(dplyr)  seaweed$Time = as.factor(seaweed$Time)   by_DistTime = group_by(seaweed,Dist,Time)  distTimeMeans = summarise(by_DistTime, logTotal=mean(log(Total))) #> `summarise()` has grouped output by 'Dist'. You can override using the `.groups` argument.  distTimeMeans #> # A tibble: 6 × 3 #> # Groups:   Dist [3] #>   Dist  Time  logTotal #>   <fct> <fct>    <dbl> #> 1 0     5         1.58 #> 2 0     10        1.31 #> 3 2     5         2.01 #> 4 2     10        2.36 #> 5 10    5         1.68 #> 6 10    10        2.13  library(ggplot2)  library(ggthemes) #loads special themes  ggplot(seaweed, aes(x = factor(Dist), y = Total, colour = Time)) +    geom_point() + geom_line(data = distTimeMeans, aes(y = exp(logTotal),    group = Time)) + theme_few() + xlab(\"Distance of Isolation\") +    ylab(\"Total abundance [log scale]\") + scale_y_log10(breaks=c(2,5,10,20)) interaction.plot(seaweed$Dist, seaweed$Time, ft_seaweedFact$fitted,       xlab=\"Isolation of patch\", ylab=\"Total density [log]\", trace.label=\"Time\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-11-uh-oh-anova-gone-wrong","dir":"Articles","previous_headings":"","what":"Code Box 4.11: Uh oh… anova gone wrong","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"data(seaweed) ft_nofactor=lm(log(Total)~Time*Dist,data=seaweed) anova(ft_nofactor) #> Analysis of Variance Table #>  #> Response: log(Total) #>           Df  Sum Sq Mean Sq F value  Pr(>F)   #> Time       1  0.2433 0.24333  0.6671 0.41771   #> Dist       1  0.7164 0.71635  1.9640 0.16691   #> Time:Dist  1  1.0303 1.03031  2.8248 0.09871 . #> Residuals 53 19.3313 0.36474                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-12-tukeys-comparisons-dont-work-for-main-e-ects-in-an-orthogonal-design-as-seen-for-exercise-4-9","dir":"Articles","previous_headings":"","what":"Code Box 4.12: Tukey’s comparisons don’t work for main eects in an orthogonal design, as seen for Exercise 4.9:","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"seaweed$Dist = factor(seaweed$Dist)  seaweed$Time = factor(seaweed$Time)  seaweed$logTot = log(seaweed$Total)  ft_seaweedFact = lm(logTot~Time*Dist, data=seaweed)  library(multcomp)  contFact = mcp(Dist=\"Tukey\") # telling R to compare on the Dist factor  compFact = glht(ft_seaweedFact, linfct=contFact) # run multiple comparisions #> Warning in mcp2matrix(model, linfct = linfct): covariate interactions found -- default #> contrast might be inappropriate"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-13-tukeys-comparisons-for-a-main-e-ect-of-dist-for-exercise-4-6-assuming-no-interaction-","dir":"Articles","previous_headings":"","what":"Code Box 4.13: Tukey’s comparisons for a main eect of Dist for Exercise 4.6, assuming no interaction.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"ft_seaweedMain=lm(logTot~Time+Dist,data=seaweed) # note it is + not *  contrast = mcp(Dist=\"Tukey\") # telling R to compare on the Dist factor  compDistMain = glht(ft_seaweedMain, linfct=contrast)  confint(compDistMain) #>  #>   Simultaneous Confidence Intervals #>  #> Multiple Comparisons of Means: Tukey Contrasts #>  #>  #> Fit: lm(formula = logTot ~ Time + Dist, data = seaweed) #>  #> Quantile = 2.4107 #> 95% family-wise confidence level #>   #>  #> Linear Hypotheses: #>             Estimate lwr      upr      #> 2 - 0 == 0   0.72650  0.28783  1.16516 #> 10 - 0 == 0  0.45838  0.03893  0.87783 #> 10 - 2 == 0 -0.26812 -0.70678  0.17055"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-14-tukeys-comparisons-for-all-possible-treatment-combinations-for-exercise-4-6-","dir":"Articles","previous_headings":"","what":"Code Box 4.14: Tukey’s comparisons for all possible treatment combinations for Exercise 4.6.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"approach wasteful compares pairs interested (e.g. 2.10 vs 0.5).","code":"td = interaction(seaweed$Dist,seaweed$Time)  ft_seaweedInt=lm(logTot~td,data=seaweed) # Time*Dist as a single term  contInt = mcp(td=\"Tukey\") # telling R to compare on all Time*Dist levels  compDistInt = glht(ft_seaweedInt, linfct=contInt)  summary(compDistInt) #>  #>   Simultaneous Tests for General Linear Hypotheses #>  #> Multiple Comparisons of Means: Tukey Contrasts #>  #>  #> Fit: lm(formula = logTot ~ td, data = seaweed) #>  #> Linear Hypotheses: #>                   Estimate Std. Error t value Pr(>|t|)    #> 2.5 - 0.5 == 0      0.4356     0.2391   1.822  0.46054    #> 10.5 - 0.5 == 0     0.1013     0.2391   0.424  0.99815    #> 0.10 - 0.5 == 0    -0.2643     0.2391  -1.105  0.87656    #> 2.10 - 0.5 == 0     0.7852     0.2635   2.980  0.04749 *  #> 10.10 - 0.5 == 0    0.5512     0.2391   2.305  0.21028    #> 10.5 - 2.5 == 0    -0.3343     0.2391  -1.398  0.72723    #> 0.10 - 2.5 == 0    -0.6999     0.2391  -2.927  0.05396 .  #> 2.10 - 2.5 == 0     0.3496     0.2635   1.327  0.76838    #> 10.10 - 2.5 == 0    0.1156     0.2391   0.483  0.99654    #> 0.10 - 10.5 == 0   -0.3656     0.2391  -1.529  0.64681    #> 2.10 - 10.5 == 0    0.6839     0.2635   2.596  0.11661    #> 10.10 - 10.5 == 0   0.4499     0.2391   1.882  0.42417    #> 2.10 - 0.10 == 0    1.0495     0.2635   3.983  0.00279 ** #> 10.10 - 0.10 == 0   0.8155     0.2391   3.411  0.01532 *  #> 10.10 - 2.10 == 0  -0.2340     0.2635  -0.888  0.94749    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> (Adjusted p values reported -- single-step method)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-15-tukeys-comparisons-for-dist-within-each-sampling-time-for-exercise-4-6-","dir":"Articles","previous_headings":"","what":"Code Box 4.15: Tukey’s comparisons for Dist within each sampling time, for Exercise 4.6.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"best approach use think interaction primarily interested Dist.","code":"levels(seaweed$Time) = c(\"five\",\"ten\") #need non-numbers for mcp to work  levels(seaweed$Dist) = c(\"Zero\",\"Two\",\"Ten\")  td = interaction(seaweed$Dist,seaweed$Time)  ft_seaweedInt=lm(log(Total)~td,data=seaweed) # Time*Dist as a single term  contDistinTime = mcp(td = c(\"Two.five - Zero.five = 0\",                              \"Ten.five - Zero.five = 0\",                              \"Ten.five - Two.five = 0\",                              \"Two.ten - Zero.ten = 0\",                              \"Ten.ten - Zero.ten = 0\",                              \"Ten.ten - Two.ten = 0\"))  compDistinTime = glht(ft_seaweedInt, linfct=contDistinTime)  summary(compDistinTime) #>  #>   Simultaneous Tests for General Linear Hypotheses #>  #> Multiple Comparisons of Means: User-defined Contrasts #>  #>  #> Fit: lm(formula = log(Total) ~ td, data = seaweed) #>  #> Linear Hypotheses: #>                           Estimate Std. Error t value Pr(>|t|)    #> Two.five - Zero.five == 0   0.4356     0.2391   1.822  0.31175    #> Ten.five - Zero.five == 0   0.1013     0.2391   0.424  0.99083    #> Ten.five - Two.five == 0   -0.3343     0.2391  -1.398  0.57118    #> Two.ten - Zero.ten == 0     1.0495     0.2635   3.983  0.00125 ** #> Ten.ten - Zero.ten == 0     0.8155     0.2391   3.411  0.00710 ** #> Ten.ten - Two.ten == 0     -0.2340     0.2635  -0.888  0.87446    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> (Adjusted p values reported -- single-step method)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-16-testing-for-an-interaction-in-an-ancova-for-density-of-epifauna-as-a-function-of-dist-and-algal-wet-mass-","dir":"Articles","previous_headings":"","what":"Code Box 4.16: Testing for an interaction in an ANCOVA for density of epifauna as a function of Dist and algal wet mass.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"lmMassDistInter=lm(logTot~log(Wmass)*Dist,data=seaweed)  anova(lmMassDistInter) #> Analysis of Variance Table #>  #> Response: logTot #>                 Df  Sum Sq Mean Sq F value    Pr(>F)     #> log(Wmass)       1  7.7216  7.7216 35.3587 2.489e-07 *** #> Dist             2  2.1415  1.0708  4.9032   0.01128 *   #> log(Wmass):Dist  2  0.3208  0.1604  0.7345   0.48475     #> Residuals       51 11.1374  0.2184                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-8-global-plant-height","dir":"Articles","previous_headings":"","what":"Exercise 4.8: Global plant height","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"effects plant height latitude rainfall interact? need interaction term model, lat rain quantitative, quadratic term quadratic terms enter model , Code Box 4.17.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"code-box-4-17-using-r-to-fit-a-quadratic-model-to-the-plant-height-data-of-exercise-3-1-","dir":"Articles","previous_headings":"","what":"Code Box 4.17: Using R to fit a quadratic model to the plant height data of Exercise 3.1.","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"","code":"ft_latRain2 = lm(log(height)~poly(rain,lat,degree=2),data=globalPlants)  summary(ft_latRain2) #>  #> Call: #> lm(formula = log(height) ~ poly(rain, lat, degree = 2), data = globalPlants) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.3656 -0.9546 -0.0749  0.9775  3.1311  #>  #> Coefficients: #>                                Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                      1.1675     0.2094   5.577 1.44e-07 *** #> poly(rain, lat, degree = 2)1.0   5.7178     2.3419   2.441  0.01603 *   #> poly(rain, lat, degree = 2)2.0  -1.1417     2.0304  -0.562  0.57493     #> poly(rain, lat, degree = 2)0.1  -5.0623     1.8212  -2.780  0.00628 **  #> poly(rain, lat, degree = 2)1.1  -6.1984    38.1037  -0.163  0.87104     #> poly(rain, lat, degree = 2)0.2  -2.3615     2.5031  -0.943  0.34729     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.441 on 125 degrees of freedom #> Multiple R-squared:  0.2706, Adjusted R-squared:  0.2415  #> F-statistic: 9.277 on 5 and 125 DF,  p-value: 1.558e-07"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-9-snowmelt-and-time-to-flowering","dir":"Articles","previous_headings":"","what":"Exercise 4.9: Snowmelt and time to flowering","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"time snowmelt flowering vary snowmelt date, beyond explained elevation? , vary? data available snowmelt ecostats package, averaged measurements taken three sampling times. Answer research questions using appropriate linear model, sure check assumptions. plot chunk ex4.9snowmelt  (Note plotenvelope run just 99 iterations, speed computation time.) doesn’t look great, occasional large value flowering time, suggestion non-linearity (note scatterplot early snowmelt dates strong decreasing relationship, can’t continue increase rate flowering time become negative). Try log-transforming flowering time… plot chunk ex4.9snowmeltlog  (Note plotenvelope run just 99 iterations, speed computation time.) snowmelt date increases 10 days, log(flowering time) decreases 0.12 0.09 (meaning 9-12% decrease). (Aside: Strictly speaking, snow treated linear variable time--year variable, cyclical variable period 365. case values focussed months towards middle year linear approximation OK.)","code":"data(snowmelt)  plot(flow~snow,data=snowmelt) snowReduced = na.omit(snowmelt[,c(\"flow\",\"snow\",\"elev\")]) #this line not normally needed, lm can handle NA's, but seems needed because of a weird conflict with MCMCglmm  ft_snow = lm(flow~elev+snow, data=snowReduced)  plotenvelope(ft_snow, n.sim=99) plot(flow~snow,data=snowmelt,log=\"y\") #> Warning in xy.coords(x, y, xlabel, ylabel, log): 1 y value <= 0 omitted from logarithmic plot snowReduced$logFlow = log(snowReduced$flow)  snowReduced2 = snowReduced[snowReduced$logFlow>-Inf,] # look it's a bit naughty, removing the infinite value, but no biggie as only one value  ft_logsnow = lm(logFlow~elev+snow, data=snowReduced2)  plotenvelope(ft_logsnow, n.sim=99) summary(ft_logsnow) #>  #> Call: #> lm(formula = logFlow ~ elev + snow, data = snowReduced2) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.90161 -0.15794  0.02338  0.15834  1.08662  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  3.8805208  0.3193019  12.153  < 2e-16 *** #> elev         0.0003357  0.0001226   2.739  0.00651 **  #> snow        -0.0103172  0.0007551 -13.663  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.2909 on 316 degrees of freedom #> Multiple R-squared:  0.3774, Adjusted R-squared:  0.3735  #> F-statistic: 95.78 on 2 and 316 DF,  p-value: < 2.2e-16  confint(ft_logsnow) #>                     2.5 %        97.5 % #> (Intercept)  3.252294e+00  4.5087472418 #> elev         9.457986e-05  0.0005768232 #> snow        -1.180299e-02 -0.0088315037"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-10-bird-exclusion-and-biological-control","dir":"Articles","previous_headings":"","what":"Exercise 4.10: Bird exclusion and biological control","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"effect netting treatment changes aphid numbers across sampling times? plot chunk ex4.10aphidnetting OK log(count) looks fine, different treatments similar variation. Eyeballing data looks like treatment effect, many less aphids excluded group control… building model, need take account pairing data – Ingo friends took repeated measures plot, include Plot blocking variable account . turn means need Treatment main effect, different plots received different treatments. plot chunk ex4.10aphidlm (Note plotenvelope run just 99 iterations, speed computation time.) looks fine . term interest Treatment:Time, tells us changes aphids time varied due bird exclusion treatment: evidence interaction, meaning evidence effect bird exclusion aphid numbers. Oh :( guess reason levels replication low – eight plots, four treatment, effect strong statistically significant.","code":"data(aphidsBACI) str(aphidsBACI) #> 'data.frame':    16 obs. of  5 variables: #>  $ Plot     : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 1 2 ... #>  $ Treatment: Factor w/ 2 levels \"excluded\",\"present\": 2 2 2 2 1 1 1 1 2 2 ... #>  $ Time     : Factor w/ 2 levels \"X18.06.\",\"X15.07.\": 1 1 1 1 1 1 1 1 2 2 ... #>  $ counts   : int  78 71 122 271 119 152 120 202 60 48 ... #>  $ logcount : num  4.37 4.28 4.81 5.61 4.79 ... plot(logcount~interaction(Time,Treatment),data=aphidsBACI) par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) lm_aphids = lm(logcount~Plot+Time+Treatment:Time,data=aphidsBACI) plotenvelope(lm_aphids,which=1:3, n.sim=99) anova(lm_aphids) #> Analysis of Variance Table #>  #> Response: logcount #>                Df Sum Sq Mean Sq F value   Pr(>F)    #> Plot            7 0.8986  0.1284  0.4603 0.833357    #> Time            1 5.4675  5.4675 19.6038 0.004434 ** #> Time:Treatment  1 0.7397  0.7397  2.6522 0.154527    #> Residuals       6 1.6734  0.2789                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter4Solutions.html","id":"exercise-4-11-seaweed-snails-and-three-factors","dir":"Articles","previous_headings":"","what":"Exercise 4.11: Seaweed, snails and three factors","title":"Chapter 4 -- Linear models -- anything goes -- Exercise solutions and Code Boxes","text":"plot chunk ex4.11seaweed3 good far, obvious trend, except Dist=0 seems lower total abundance times/sizes. analyse three-way ANOVA plot chunk ex4.11seaweedanova3 (Note plotenvelope run just 99 iterations, speed computation time.) plots, can’t see problems assumptions. ANOVA suggests main effect Dist, marginal evidence interaction Time (judging boxplots, probably larger values logTot Time=5 large plots). reanalyse data including Wmass covariate, three-factor ANCOVA: get pretty much results. Wmass seems important covariate, controlling , still strong Dist main effect much else happening.","code":"data(seaweed) str(seaweed) #> 'data.frame':    57 obs. of  22 variables: #>  $ Size  : chr  \"SMALL\" \"SMALL\" \"SMALL\" \"SMALL\" ... #>  $ Dist  : int  0 0 0 0 0 2 2 2 2 2 ... #>  $ Time  : int  5 5 5 5 5 5 5 5 5 5 ... #>  $ Rep   : int  1 2 3 4 5 1 2 3 4 5 ... #>  $ Wmass : num  15.8 13.1 25.1 29.7 17.4 13.3 4.7 6.8 7.7 14.3 ... #>  $ Amph  : num  75 16 14 21 55 17 9 11 28 37 ... #>  $ Cope  : num  0 7 37 37 0 14 6 29 21 83 ... #>  $ Poly  : num  17 8 2 5 1 2 1 3 6 10 ... #>  $ Anem  : num  2 0 0 0 0 0 0 1 0 0 ... #>  $ Iso   : num  0 2 1 1 15 0 12 51 19 56 ... #>  $ Bival : num  3 2 1 0 0 2 0 4 3 0 ... #>  $ Gast  : num  6 18 33 9 9 1 10 7 4 15 ... #>  $ Turb  : num  1 0 0 0 0 0 0 0 0 0 ... #>  $ Prawn : num  0 0 0 0 5 1 0 0 0 1 ... #>  $ Urchin: num  0 0 0 0 0 0 0 0 0 0 ... #>  $ Fish  : num  0 0 0 0 1 0 0 0 0 0 ... #>  $ Crab  : num  0 1 1 0 0 0 0 1 0 0 ... #>  $ Caddis: num  0 0 0 0 1 0 0 0 0 0 ... #>  $ Opi   : num  0 1 0 1 0 0 0 0 0 0 ... #>  $ Ost   : num  0 0 6 3 0 0 1 1 0 11 ... #>  $ Bstar : num  0 0 0 0 0 0 0 0 0 1 ... #>  $ Total : num  6.58 4.2 3.78 2.59 5 ... seaweed$logTot = log(seaweed$Total) seaweed$Dist = factor(seaweed$Dist) par(mar=c(4,7,1,1)) plot(logTot~interaction(Dist,Size,Time),data=seaweed,xlab=\"\",ylab=\"Total abundance [log scale]\",horizontal=TRUE,col=2:4,las=1) legend(\"topleft\",legend=paste0(\"Dist=\",levels(seaweed$Dist)),pch=15,col=2:4,pt.cex=2) par(mfrow=c(1,3),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) ft_seaweed3 = lm(log(Total)~Size*Time*Dist,data=seaweed) plotenvelope(ft_seaweed3,which=1:3, n.sim=99) anova(ft_seaweed3) #> Analysis of Variance Table #>  #> Response: log(Total) #>                Df  Sum Sq Mean Sq F value    Pr(>F)     #> Size            1  0.9940 0.99399  3.5849 0.0647472 .   #> Time            1  0.1923 0.19234  0.6937 0.4093064     #> Dist            2  4.7737 2.38686  8.6084 0.0006829 *** #> Size:Time       1  0.0605 0.06055  0.2184 0.6425429     #> Size:Dist       2  0.1800 0.09000  0.3246 0.7244968     #> Time:Dist       2  1.4117 0.70583  2.5456 0.0896686 .   #> Size:Time:Dist  2  1.2318 0.61592  2.2214 0.1202189     #> Residuals      45 12.4772 0.27727                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ft_seaweedW3 = lm(logTot~Wmass*Size*Time*Dist,data=seaweed) anova(ft_seaweedW3) #> Analysis of Variance Table #>  #> Response: logTot #>                      Df Sum Sq Mean Sq F value    Pr(>F)     #> Wmass                 1 6.7793  6.7793 28.2266 7.328e-06 *** #> Size                  1 0.7106  0.7106  2.9585  0.094792 .   #> Time                  1 0.0747  0.0747  0.3109  0.580899     #> Dist                  2 2.8114  1.4057  5.8529  0.006675 **  #> Wmass:Size            1 0.0941  0.0941  0.3917  0.535700     #> Wmass:Time            1 0.0233  0.0233  0.0970  0.757459     #> Size:Time             1 0.3501  0.3501  1.4579  0.235849     #> Wmass:Dist            2 0.1979  0.0990  0.4121  0.665636     #> Size:Dist             2 0.0886  0.0443  0.1844  0.832475     #> Time:Dist             2 1.3263  0.6631  2.7611  0.077848 .   #> Wmass:Size:Time       1 0.0081  0.0081  0.0337  0.855482     #> Wmass:Size:Dist       2 0.1404  0.0702  0.2924  0.748389     #> Wmass:Time:Dist       2 0.2767  0.1384  0.5761  0.567645     #> Size:Time:Dist        2 0.3440  0.1720  0.7162  0.496020     #> Wmass:Size:Time:Dist  2 0.1701  0.0850  0.3540  0.704475     #> Residuals            33 7.9257  0.2402                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"exercise-5-1-plant-height-and-climate","dir":"Articles","previous_headings":"","what":"Exercise 5.1: Plant height and climate","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"climate variables best explain plant height? question variables best explain patterns height – hypothesis testing interval estimation, instead want compare different possible models plant height, can think model selection question. , research question involves several variables: height (quantitative) climate. climate measured specified , typically involves quantitative measurements temperature, precipitation often related variables. answer question using multiple regression, type linear model, main question predictors add linear model.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"figures-5-1-5-2-bias-variance-trade-off-for-polynomial-models","dir":"Articles","previous_headings":"","what":"Figures 5.1-5.2: bias-variance trade-off for polynomial models","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"code behind Figures 5.1-5.2. small sample size, can get quite different answers different runs! Hence seed fixed values used generate results text. plot chunk fig5.1-2 plot chunk fig5.1-2","code":"sigma=1.2 n=20 nDegree=8  seed=61 set.seed(seed)  x = sort( rnorm(2*n) ) y = 3*x-3*x^2 + rnorm(2*n)*sigma idTrain = sample(1:(2*n),n) xTest = x[-idTrain] yTest = y[-idTrain] x = x[idTrain] y = y[idTrain] X = data.frame(x)  err=rep(NA,nDegree) errTrain = err whichPlot=c(1,2,4,8) cols = colorRampPalette(c(\"red\", \"blue\"))( length(whichPlot) )  par(mar = c(2,1.5,1,1),mgp=c(1.75,0.75,0),mfrow=c(1,length(whichPlot)),las=1,oma=c(1,1,1,1)) dgreen=rgb(0,0.75,0,names=\"dgreen\") xpred = seq(min(x),max(x),length=500) for(iDegree in 1:nDegree) {   fti=lm(y~poly(x,degree=iDegree,raw=TRUE),data=X)   err[iDegree] = mean( (yTest - predict(fti,newdata=data.frame(x=xTest)))^2 )    errTrain[iDegree] = mean(fti$residuals^2)   if(iDegree %in% whichPlot)   {     plot(y~x,xaxt=\"n\",yaxt=\"n\",ylab=\"\",xlab=\"\")     if(iDegree==1)       mtext(\"y\",2,line=1.5)     mtext(\"x\",1,line=1.5)     axis(1,at=-2:1,labels=1:4,cex.axis=0.75)     axis(2,at=5*(-3:0),labels=1:4,cex.axis=0.75)     points(yTest~xTest,col=dgreen,pch=\"*\")     lines(xpred,predict(fti,newdata=data.frame(x=xpred)),col=cols[which(whichPlot==iDegree)])     mtext(paste(\"Degree =\",iDegree),3,line=0.5)   } } legend(\"bottomright\",c(\"Training data\",\"Test data\"),pch=c(\"o\",\"*\"),col=c(\"black\",dgreen)) print(err) #> [1] 10.566356  1.729799  1.742761  1.945641  5.632565  5.681434  7.815761 10.459043   par(mar = c(2.75,2.75,1,1),mgp=c(1.75,0.75,0),mfrow=c(1,1),las=1) plot(1:nDegree,errTrain,type=\"l\",ylim=c(0,max(c(err,errTrain))),ylab=\"Mean squared error\",xlab=\"Degree of polynomial [log scale]\",xaxt=\"n\",log=\"x\",yaxt=\"n\") lines(1:nDegree,err,col=dgreen) for(iDegree in whichPlot)   axis(1,iDegree,col.ticks=cols[which(whichPlot==iDegree)],col.axis=cols[which(whichPlot==iDegree)]) axis(2,c(0,2,4,6)) legend(\"topright\",c(\"Training data\",\"Test data\"),lty=1,col=c(\"black\",dgreen))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-1-using-validation-for-model-selection-using-angelas-plant-height-data","dir":"Articles","previous_headings":"","what":"Code Box 5.1: Using validation for model selection using Angela’s plant height data","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"library(ecostats) data(globalPlants) n = dim(globalPlants)[1] indTrain = sample(n,n^0.75) #select a training sample of size n^0.75: datTrain = globalPlants[indTrain,] datTest = globalPlants[-indTrain,] ft_r = lm(log(height)~rain,dat=datTrain) ft_rs = lm(log(height)~rain+rain.seas,dat=datTrain) pr_r = predict(ft_r,newdata=datTest) pr_rs = predict(ft_rs,newdata=datTest) rss_r = mean( (log(datTest$height)-pr_r)^2 ) rss_rs = mean( (log(datTest$height)-pr_rs)^2 ) print( c(rss_r,rss_rs) ) #> [1] 2.668369 2.467766"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-2-5-fold-cross-validation-for-the-data-of-exercise-5-1","dir":"Articles","previous_headings":"","what":"Code Box 5.2: 5-fold cross-validation for the data of Exercise 5.1","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"plot chunk box52 plot chunk box52 plot chunk box52 plot chunk box52 plot chunk box52 plot chunk box52 plot chunk box52 plot chunk box52","code":"library(DAAG) ft_r = lm(log(height)~rain,dat=globalPlants) ft_rs = lm(log(height)~rain+rain.seas,dat=globalPlants) cv_r = cv.lm(data=globalPlants, ft_r, m=5, printit=FALSE) # 5 fold CV cv_rs = cv.lm(data=globalPlants, ft_rs, m=5, printit=FALSE) # 5 fold CV #> Warning in cv.lm(data = globalPlants, ft_rs, m = 5, printit = FALSE):  #>  #>  As there is >1 explanatory variable, cross-validation #>  predicted values for a fold are not a linear function #>  of corresponding overall predicted values.  Lines that #>  are shown for the different folds are approximate print( c( attr(cv_r,\"ms\"),attr(cv_rs,\"ms\") ), digits=6 ) #> [1] 2.22541 2.15883  cv_r = cv.lm(data=globalPlants, ft_r, m=5, printit=FALSE,seed=1) # 5 fold CV cv_rs = cv.lm(data=globalPlants, ft_rs, m=5, printit=FALSE,seed=1) # 5 fold CV #> Warning in cv.lm(data = globalPlants, ft_rs, m = 5, printit = FALSE, seed = 1):  #>  #>  As there is >1 explanatory variable, cross-validation #>  predicted values for a fold are not a linear function #>  of corresponding overall predicted values.  Lines that #>  are shown for the different folds are approximate print( c( attr(cv_r,\"ms\"),attr(cv_rs,\"ms\") ), digits=6 ) #> [1] 2.21103 2.16553  cv_r = cv.lm(data=globalPlants, ft_r, m=5, printit=FALSE,seed=2) # 5 fold CV cv_rs = cv.lm(data=globalPlants, ft_rs, m=5, printit=FALSE,seed=2) # 5 fold CV #> Warning in cv.lm(data = globalPlants, ft_rs, m = 5, printit = FALSE, seed = 2):  #>  #>  As there is >1 explanatory variable, cross-validation #>  predicted values for a fold are not a linear function #>  of corresponding overall predicted values.  Lines that #>  are shown for the different folds are approximate print( c( attr(cv_r,\"ms\"),attr(cv_rs,\"ms\") ), digits=6 ) #> [1] 2.22425 2.14762  cv_r = cv.lm(data=globalPlants, ft_r, m=5, printit=FALSE,seed=3) # 5 fold CV cv_rs = cv.lm(data=globalPlants, ft_rs, m=5, printit=FALSE,seed=3) # 5 fold CV #> Warning in cv.lm(data = globalPlants, ft_rs, m = 5, printit = FALSE, seed = 3):  #>  #>  As there is >1 explanatory variable, cross-validation #>  predicted values for a fold are not a linear function #>  of corresponding overall predicted values.  Lines that #>  are shown for the different folds are approximate print( c( attr(cv_r,\"ms\"),attr(cv_rs,\"ms\") ), digits=6 ) #> [1] 2.2783 2.2373"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-3-computing-information-criteria-on-r-for-exercise-5-1","dir":"Articles","previous_headings":"","what":"Code Box 5.3: Computing Information Criteria on R for Exercise 5.1","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"ft_r = lm(log(height)~rain,dat=globalPlants) ft_rs = lm(log(height)~rain+rain.seas,dat=globalPlants) c( AIC(ft_r), AIC(ft_rs) ) #> [1] 479.6605 475.4343 c( BIC(ft_r), BIC(ft_rs) ) #> [1] 488.2861 486.9351"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-4-all-subsets-selection-for-the-plant-height-data-of-5-1","dir":"Articles","previous_headings":"","what":"Code Box 5.4: All subsets selection for the plant height data of 5.1","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"library(leaps) fit_heightallsub<-regsubsets(log(height)~temp+rain+rain.wetm+temp.seas,   data=globalPlants,nbest=2) cbind(summary(fit_heightallsub)$outmat,summary(fit_heightallsub)$bic) #>          temp rain rain.wetm temp.seas                     #> 1  ( 1 ) \" \"  \" \"  \"*\"       \" \"       \"-21.06175277099\"   #> 1  ( 2 ) \" \"  \"*\"  \" \"       \" \"       \"-19.2868231448677\" #> 2  ( 1 ) \"*\"  \"*\"  \" \"       \" \"       \"-24.8920679441895\" #> 2  ( 2 ) \"*\"  \" \"  \"*\"       \" \"       \"-23.9315826810965\" #> 3  ( 1 ) \"*\"  \"*\"  \" \"       \"*\"       \"-20.9786934545272\" #> 3  ( 2 ) \"*\"  \"*\"  \"*\"       \" \"       \"-20.3405400349995\" #> 4  ( 1 ) \"*\"  \"*\"  \"*\"       \"*\"       \"-16.4229239023018\""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-5-stepwise-subset-selection-for-the-plant-height-data-of-5-1","dir":"Articles","previous_headings":"","what":"Code Box 5.5: Stepwise subset selection for the plant height data of 5.1","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"ft_clim = lm(log(height)~temp+rain+rain.wetm+temp.seas,    data=globalPlants) stepClim=step(ft_clim,trace=0) stepClim$anova #>          Step Df  Deviance Resid. Df Resid. Dev       AIC #> 1             NA        NA       126   260.6727 100.13694 #> 2 - rain.wetm  1 0.6363946       127   261.3091  98.45637 #> 3 - temp.seas  1 1.9256333       128   263.2347  97.41819  ft_int = lm(log(height)~1,data=globalPlants) stepForward <- step(ft_int,scope=formula(ft_clim),direction=\"forward\",     trace=0) stepForward$anova #>          Step Df Deviance Resid. Df Resid. Dev       AIC #> 1             NA       NA       130   355.9206 132.93585 #> 2 + rain.wetm -1 74.59845       129   281.3221 104.12370 #> 3      + temp -1 16.15030       128   265.1718  98.37867"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"simulation-code-for-figure-5-4","dir":"Articles","previous_headings":"","what":"Simulation code for Figure 5.4","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"used nSim=1000 book, set 50 code doesn’t take ages run… plot chunk subsetsim","code":"library(mvtnorm) nSim = 50 # increase this for a more precise answer  p=8 n=32  beta = c(1,1,rep(0,p-2)) pTrue=2  rho=0.5 Sigma = diag(rep(1-rho,p))+rho X=rmvnorm(n,sigma=Sigma) eta = X %*% beta   resArray = array(0,c(3,3,nSim)) dimnames(resArray)[[1]]=c(\"AIC\",\"MStrue\",\"propTrue\") dimnames(resArray)[[2]]=c(\"all\",\"for\",\"back\") counter  = matrix(0,3,3)  for(iSim in 1:nSim) {   y = eta + rnorm(n)*2    # construct matrix of all possible subsets   allSubs = matrix(NA,2^p,p)   for(iVar in 1:p)     allSubs[,iVar] = rep(c(0,1),each=2^(p-iVar),times=2^(iVar-1))    # define vectors to stor AIC and MS   aics = rep(NA,2^p)   ms   = aics   isTrue=aics    # intercept first as it will give error   ft0 = lm(y~1)   aics[1] = AIC(ft0)   ms[1] = mean((predict(ft0)-eta)^2)   isTrue[1] = FALSE    # now get all subset results   for(iModel in 2:2^p)   {     ft = lm(y~X[,allSubs[iModel,]==1])     aics[iModel] = AIC(ft)     ms[iModel] = mean((predict(ft)-eta)^2)     isTrue[iModel] = allSubs[iModel,1]==1 & allSubs[iModel,2]==1 & sum(allSubs[iModel,])==2   }    whichBest = which(aics==min(aics))[1] #if tie take the first one, probably smaller, but whatever this won't happen    # now backward stepwise   ftBack = step(lm(y~.,data=data.frame(X)),trace=0,direction=\"backward\")   aicBack = AIC(ftBack)   msBack = mean((predict(ftBack)-eta)^2)   trueBack = length(coef(ftBack))==3 & \"X1\" %in% names(coef(ftBack)) & \"X2\" %in% names(coef(ftBack))    # now forward stepwise   scopeForm=paste0(\"X\",1:p,collapse=\"+\")   ftFor = step(lm(y~1,data=data.frame(X)),scope=paste(\"~\",scopeForm),trace=0,direction=\"forward\")   aicFor = AIC(ftFor)   msFor = mean((predict(ftFor)-eta)^2)   trueFor = length(coef(ftFor))==3 & \"X1\" %in% names(coef(ftFor)) & \"X2\" %in% names(coef(ftFor))    counterAdd = matrix(0,3,3)   resArray[1,,iSim] = c(aics[whichBest],aicFor,aicBack)   resArray[2,,iSim] = c(ms[whichBest],msFor,msBack)   resArray[3,,iSim] = c(isTrue[whichBest],trueFor,trueBack)    eps=1.e-8   whichAIC = which(resArray[1,,iSim]<min(resArray[1,,iSim])+eps)   counterAdd[1,whichAIC] = 1   whichMS = which(resArray[2,,iSim]<min(resArray[2,,iSim])+eps)   counterAdd[2,whichMS] = 1   counterAdd[3,] = resArray[3,,iSim]    counter = counter + counterAdd } #end sim  resMean = apply(resArray,c(1,2),mean) resSD = apply(resArray,c(1,2),sd)/sqrt(nSim) counter = counter/nSim  print(resMean) #>                  all         for       back #> AIC      135.6532644 135.9232694 135.750229 #> MStrue     0.9629137   0.9017192   1.001753 #> propTrue   0.1400000   0.1600000   0.120000  par(mar=c(3,1,1,1),mgp=c(2,0.75,0),mfrow=c(1,2),oma=c(0,4,0,0)) plot(resMean[1,],1:3,ylim=c(0.5,3.5),col=\"blue\",yaxt=\"n\",pch=19,xlab=\"AIC\",ylab=\"\",xlim=range(resMean[1,]-2*resSD[1,],resMean[1,]+2*resSD[1,])) for(iMethod in 1:3)   lines(c(resMean[1,iMethod]-resSD[1,iMethod]*2,resMean[1,iMethod]+resSD[1,iMethod]*2),c(iMethod,iMethod),col=\"blue\") axis(2,at=1:3,labels=c(\"All subsets\",\"Forward\",\"Backward\"),las=1)  plot(resMean[2,],1:3,ylim=c(0.5,3.5),col=\"blue\",yaxt=\"n\",pch=19,xlab=expression(paste(\"Mean squared error of \",hat(mu))),ylab=\"\",xlim=range(resMean[2,]-2*resSD[2,],resMean[2,]+2*resSD[2,])) for(iMethod in 1:3)   lines(c(resMean[2,iMethod]-resSD[2,iMethod]*2,resMean[2,iMethod]+resSD[2,iMethod]*2),c(iMethod,iMethod),col=\"blue\") axis(2,at=1:3,labels=c(\" \",\" \",\" \"),las=1)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-6-lasso-for-plant-height-data-of-5-1","dir":"Articles","previous_headings":"","what":"Code Box 5.6: LASSO for plant height data of 5.1","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"plot chunk box5.6","code":"data(globalPlants) library(glmnet) X = cbind(globalPlants$temp, globalPlants$rain, globalPlants$rain.wetm,    globalPlants$temp.seas) ft_heightcv=cv.glmnet(X,log(globalPlants$height)) plot(ft_heightcv) ft_lasso=glmnet(X,log(globalPlants$height),lambda=ft_heightcv$lambda.min) ft_lasso$beta #> 4 x 1 sparse Matrix of class \"dgCMatrix\" #>              s0 #> V1 0.0424080540 #> V2 0.0003785307 #> V3 0.0014047575 #> V4 ."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"exercise-5-2-relative-importance-of-climate-variables","dir":"Articles","previous_headings":"","what":"Exercise 5.2: Relative importance of climate variables","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"important different climate variables explaining plant height? asked quantify variable importance. couple techniques suggested Code Boxes 5.8-5.9.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-7-sequential-r2-for-variable-importance","dir":"Articles","previous_headings":"","what":"Code Box 5.7: Sequential \\(R^2\\) for variable importance","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"ft_clim = lm(log(height)~temp+rain+rain.wetm+temp.seas,data=globalPlants) ft_int = lm(log(height)~1,data=globalPlants) stepAnova = step(ft_int, scope=formula(ft_clim), direction=\"forward\",                      trace=0, k=0)$anova stepAnova$R2 = stepAnova$Deviance/deviance(ft_int) stepAnova #>          Step Df  Deviance Resid. Df Resid. Dev       AIC          R2 #> 1             NA        NA       130   355.9206 130.93585          NA #> 2 + rain.wetm -1 74.598450       129   281.3221 100.12370 0.209592965 #> 3      + temp -1 16.150298       128   265.1718  92.37867 0.045376129 #> 4      + rain -1  2.586703       127   262.5851  91.09452 0.007267641 #> 5 + temp.seas -1  1.912441       126   260.6727  90.13694 0.005373225"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-8-marginal-and-conditional-r2-for-variable-importance","dir":"Articles","previous_headings":"","what":"Code Box 5.8: Marginal and conditional \\(R^2\\) for variable importance","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"stepMargin=add1(ft_int,scope=formula(ft_clim)) stepMargin$R2=stepMargin$`Sum of Sq`/deviance(ft_int) stepMargin #> Single term additions #>  #> Model: #> log(height) ~ 1 #>           Df Sum of Sq    RSS    AIC      R2 #> <none>                 355.92 132.94         #> temp       1    66.224 289.70 107.97 0.18607 #> rain       1    70.761 285.16 105.90 0.19881 #> rain.wetm  1    74.598 281.32 104.12 0.20959 #> temp.seas  1    46.401 309.52 116.64 0.13037  leave1out=drop1(ft_clim) leave1out$R2=leave1out$`Sum of Sq`/deviance(ft_int) leave1out #> Single term deletions #>  #> Model: #> log(height) ~ temp + rain + rain.wetm + temp.seas #>           Df Sum of Sq    RSS     AIC       R2 #> <none>                 260.67 100.137          #> temp       1   16.0581 276.73 105.968 0.045117 #> rain       1    3.4438 264.12  99.856 0.009676 #> rain.wetm  1    0.6364 261.31  98.456 0.001788 #> temp.seas  1    1.9124 262.58  99.095 0.005373"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-9-standardised-coefficients-for-angelas-height-data","dir":"Articles","previous_headings":"","what":"Code Box 5.9: Standardised coefficients for Angela’s height data","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"# first create a dataset with standardised predictors: globalPlantStand=globalPlants whichVars=c(\"temp\",\"rain\",\"rain.wetm\",\"temp.seas\") globalPlantStand[,whichVars]=scale(globalPlantStand[,whichVars]) # then fit the model: ft_climStand = lm(log(height)~temp+rain+rain.wetm+temp.seas,                data=globalPlantStand) summary(ft_climStand) #>  #> Call: #> lm(formula = log(height) ~ temp + rain + rain.wetm + temp.seas,  #>     data = globalPlantStand) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -2.9649 -1.0454 -0.0122  0.9801  3.4005  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   1.1947     0.1257   9.507  < 2e-16 *** #> temp          0.5715     0.2051   2.786  0.00616 **  #> rain          0.4185     0.3244   1.290  0.19934     #> rain.wetm     0.1860     0.3353   0.555  0.58013     #> temp.seas     0.2090     0.2174   0.961  0.33816     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.438 on 126 degrees of freedom #> Multiple R-squared:  0.2676, Adjusted R-squared:  0.2444  #> F-statistic: 11.51 on 4 and 126 DF,  p-value: 5.378e-08"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"exercise-5-3-variable-importance-output","dir":"Articles","previous_headings":"","what":"Exercise 5.3: Variable importance output","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"Compare \\(R^2\\) results Code Boxes 5.7-5.8. table(s) think Angela report describing variable importance? tough one – guess main story : rain variable (whether rain rain.wetm) explains big hcunk variation temp explains fair bit variation even rain variables model concise way make points show marginal \\(R^2\\) table make point 1, conditional \\(R^2\\) table make point 2. Now look standardised coefficients Code Box 5.9. coefficients measure marginal conditional effects? \\(R^2\\) tables Code Box 5.8 similar relative size (e.g. ranking largest smallest)? expected? summary function tells us coefficients model, always measure conditional effects terms added model. conditional \\(R^2\\) table gives similar answers, ranking predictors (largest smallest). standardised coefficient forrain.wetm larger expected, temp smaller expected, looking conditional \\(R^2\\) values. guess differences extent collinearity across predictors.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-box-5-10-importance-of-temperature-vs-rainfall","dir":"Articles","previous_headings":"","what":"Code Box 5.10: Importance of temperature vs rainfall","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"","code":"ft_onlyTemp = lm(log(height)~temp+temp.seas,data=globalPlants) tempAn=anova(ft_int,ft_onlyTemp,ft_clim) tempAn$R2=tempAn$`Sum of Sq`/deviance(ft_int) tempAn #> Analysis of Variance Table #>  #> Model 1: log(height) ~ 1 #> Model 2: log(height) ~ temp + temp.seas #> Model 3: log(height) ~ temp + rain + rain.wetm + temp.seas #>   Res.Df    RSS Df Sum of Sq      F     Pr(>F)       R2 #> 1    130 355.92                                         #> 2    128 289.00  2    66.917 16.173 0.00000056 0.188011 #> 3    126 260.67  2    28.331  6.847 0.00150359 0.079599  ft_onlyRain = lm(log(height)~rain+rain.wetm,data=globalPlants) rainAn=anova(ft_int,ft_onlyRain,ft_clim) rainAn$R2=rainAn$`Sum of Sq`/deviance(ft_int) rainAn #> Analysis of Variance Table #>  #> Model 1: log(height) ~ 1 #> Model 2: log(height) ~ rain + rain.wetm #> Model 3: log(height) ~ temp + rain + rain.wetm + temp.seas #>   Res.Df    RSS Df Sum of Sq       F    Pr(>F)       R2 #> 1    130 355.92                                         #> 2    128 279.80  2    76.118 18.3964 0.0000001 0.213863 #> 3    126 260.67  2    19.130  4.6233 0.0115445 0.053747"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"code-for-figure-5-5","dir":"Articles","previous_headings":"","what":"Code for Figure 5.5","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"plot chunk fig5.5","code":"par(mgp=c(1.75,0.75,0),mar=c(2.75,0.5,0.5,0))      R2sTemp = c(0,tempAn$R2[2])   R2sRain = c(rainAn$R2[3],sum(rainAn$R2[2:3]))   R2error=c(sum(rainAn$R2[2:3]),1)   darkBlue=rgb(0,0,0.5,alpha=0.9)   darkRed=rgb(0.5,0,0,alpha=0.9)   darkYellow=rgb(0.5,0.5,0,alpha=0.9)   plot(c(0,1),c(0,1),type=\"n\",yaxt=\"n\",xlab=expression(R^2),ylab=\"\",bty=\"n\")   polygon(c(R2error,R2error[2:1]),c(0,0,1,1),col=rgb(1,1,0,alpha=0.25),lwd=0.25,border=darkYellow)   polygon(c(R2sTemp,R2sTemp[2:1]),c(0,0,1,1),col=rgb(1,0,0,alpha=0.25),border=darkRed,lwd=1.5)   polygon(c(R2sRain,R2sRain[2:1]),c(0,0,1,1),col=rgb(0,0,1,alpha=0.25),border=darkBlue,lwd=1.5)   yText=0.15   eps=0.008   text(mean(R2error),0.5,'Unexplained',adj=0.5,col=darkYellow)   text(eps,yText,'Temperature',adj=0,col=darkRed)   text(R2sRain[2]-eps,1-yText,'Rainfall',adj=1,col=darkBlue)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"exercise-5-4-head-bobs-in-lizards-do-their-displays-change-with-the-environment","dir":"Articles","previous_headings":"Code for Figure 5.5","what":"Exercise 5.4: Head bobs in lizards – do their displays change with the environment?","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"Terry… wanted know environmental features (temperature, light noisiness) related head bobbing speed model selection question, want see environmental variables associated head-bobbing, try bunch different models different predictors see one(s) fits best. plot chunk headbobs plot chunk headbobs plot chunk headbobs ’s actually suggestion non-linearity , points making pattern though ’m sure. Also sure makes sense, lizards get active intermediate temperature, need check Terry one… case, main story seems noisiness doesn’t seem important, temperature light. \\(R^2\\) values might help understand variable relative importance: Well glad looked well… temperature noisiness seem associated headbobs, adding temp model, noisiness doesn’t really add anything, whereas reverse true. seems fairly strong association temp (marginally 32%, conditionally still 17%) effect ambient light (marginally 4%, controlling temp 10%). large marginal effect noisiness probably due correlation temp.","code":"data(headbobLizards) str(headbobLizards) #> 'data.frame':    14 obs. of  10 variables: #>  $ LizardID           : Factor w/ 14 levels \"6\",\"7\",\"8\",\"9\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ Observation        : num  1 1 1 1 1 3.1 1 5 2 1 ... #>  $ Display            : int  3 1 1 1 1 1 1 2 1 2 ... #>  $ ObservationDate    : Factor w/ 19 levels \"03-07-05\",\"04-07-05\",..: 1 2 1 1 1 3 1 2 3 1 ... #>  $ ObservationTime24hr: Factor w/ 342 levels \"10:00\",\"10:03\",..: 186 325 205 243 232 173 300 191 305 165 ... #>  $ TemperatureC       : num  25.7 27.2 26.2 26.2 26 27.6 26.2 27.1 27 28.1 ... #>  $ AmbientLight       : num  0.47 4.13 2.46 0.31 2.36 ... #>  $ Bg_noise_max       : num  11.1 16.47 9.32 2.29 7.37 ... #>  $ Hbspd_max          : num  29.7 54.4 34.6 26.7 28.7 ... #>  $ time               : POSIXct, format: \"2005-07-03 15:44:00\" \"2005-07-04 09:33:00\" \"2005-07-03 16:18:00\" ...  # try some AIC funny-business library(MASS) par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plot(Hbspd_max~TemperatureC,data=headbobLizards) plot(Hbspd_max~Bg_noise_max,data=headbobLizards) # my vote is log-transformation, covers almost a factor of 3 and a bit of right-skew: plot(Hbspd_max~TemperatureC,data=headbobLizards,log=\"y\") plot(Hbspd_max~Bg_noise_max,data=headbobLizards,log=\"y\") headbobLizards$bobspeed=log(headbobLizards$Hbspd_max) ft_headbob=lm(bobspeed~TemperatureC+AmbientLight+Bg_noise_max,data=headbobLizards) plotenvelope(ft_headbob) stepAIC(ft_headbob) #> Start:  AIC=-35.58 #> bobspeed ~ TemperatureC + AmbientLight + Bg_noise_max #>  #>                Df Sum of Sq     RSS     AIC #> - Bg_noise_max  1  0.018757 0.64139 -37.164 #> <none>                      0.62264 -35.580 #> - AmbientLight  1  0.113540 0.73618 -35.235 #> - TemperatureC  1  0.193576 0.81621 -33.790 #>  #> Step:  AIC=-37.16 #> bobspeed ~ TemperatureC + AmbientLight #>  #>                Df Sum of Sq     RSS     AIC #> <none>                      0.64139 -37.164 #> - AmbientLight  1   0.14217 0.78356 -36.361 #> - TemperatureC  1   0.46327 1.10466 -31.553 #>  #> Call: #> lm(formula = bobspeed ~ TemperatureC + AmbientLight, data = headbobLizards) #>  #> Coefficients: #>  (Intercept)  TemperatureC  AmbientLight   #>    -1.930275      0.210716     -0.009144 summary(ft_headbob) #>  #> Call: #> lm(formula = bobspeed ~ TemperatureC + AmbientLight + Bg_noise_max,  #>     data = headbobLizards) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.29881 -0.15097 -0.02893  0.07918  0.43165  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -1.085254   2.581853  -0.420    0.683 #> TemperatureC  0.176014   0.099825   1.763    0.108 #> AmbientLight -0.008383   0.006208  -1.350    0.207 #> Bg_noise_max  0.006418   0.011693   0.549    0.595 #>  #> Residual standard error: 0.2495 on 10 degrees of freedom #> Multiple R-squared:  0.4611, Adjusted R-squared:  0.2994  #> F-statistic: 2.852 on 3 and 10 DF,  p-value: 0.09115  ft_2=lm(bobspeed~TemperatureC+AmbientLight,data=headbobLizards) summary(ft_2) #>  #> Call: #> lm(formula = bobspeed ~ TemperatureC + AmbientLight, data = headbobLizards) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.30317 -0.15088 -0.03001  0.07111  0.45789  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)   #> (Intercept)  -1.930275   2.005678  -0.962   0.3565   #> TemperatureC  0.210716   0.074756   2.819   0.0167 * #> AmbientLight -0.009144   0.005856  -1.561   0.1467   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.2415 on 11 degrees of freedom #> Multiple R-squared:  0.4448, Adjusted R-squared:  0.3439  #> F-statistic: 4.407 on 2 and 11 DF,  p-value: 0.0393  ft_int=lm(bobspeed~1,data=headbobLizards) BIC(ft_int,ft_2,ft_headbob) #>            df       BIC #> ft_int      2 10.082646 #> ft_2        4  7.122104 #> ft_headbob  5  9.345644 stepMargin=add1(ft_int,scope=formula(ft_headbob)) stepMargin$R2=stepMargin$`Sum of Sq`/deviance(ft_int) stepMargin #> Single term additions #>  #> Model: #> bobspeed ~ 1 #>              Df Sum of Sq     RSS     AIC      R2 #> <none>                    1.15530 -32.926         #> TemperatureC  1   0.37174 0.78356 -36.361 0.32177 #> AmbientLight  1   0.05064 1.10466 -31.553 0.04384 #> Bg_noise_max  1   0.29569 0.85962 -35.065 0.25594  leave1out=drop1(ft_headbob) leave1out$R2=leave1out$`Sum of Sq`/deviance(ft_int) leave1out #> Single term deletions #>  #> Model: #> bobspeed ~ TemperatureC + AmbientLight + Bg_noise_max #>              Df Sum of Sq     RSS     AIC       R2 #> <none>                    0.62264 -35.580          #> TemperatureC  1  0.193576 0.81621 -33.790 0.167555 #> AmbientLight  1  0.113540 0.73618 -35.235 0.098278 #> Bg_noise_max  1  0.018757 0.64139 -37.164 0.016235"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter5Solutions.html","id":"exercise-5-5-plant-height-data-and-precipitation","dir":"Articles","previous_headings":"Code for Figure 5.5","what":"Exercise 5.5 Plant height data and precipitation","title":"Chapter 5 -- Model selection -- Exercise solutions and Code Boxes","text":"Find subset precipitation variables optimally predicts plant height ’ll start forward selection. know temp important include models plot chunk ex5.5plantprecip forward selection suggests adding rainfall wettest coldest quarters model. LASSO… plot chunk ex5.5lassorain time going two rainfall variables , different ones – total precipitation seasonality. (actually provides similar information get rain.wetqr rain.dryqr, jointly tell total rainfall variability/seasonality.) issues multi-collinearity amongst precipitation variables? Try address multi-collinearity culling one two main culprits. affect previous model selection results? bunch high VIF’s, looking correlations, rain.wetm looks like one main culprits, quite understandable rainfall wettest month highly correlated total rainfall, rainfall wettest quarter! also remove rain.drym high redundancy variable rain.dryqr. plot chunk ex5.5lessrain Forward selection unchanged, big surprise forward path stopped deleted variables considered. time LASSO gave similar model, also picking rain.wetqr rain.coldqr, also added small term rain . Note precise solution get depends randomness assignment observations validation groups, run may come little differently .","code":"data(globalPlants) str(globalPlants) #> 'data.frame':    131 obs. of  33 variables: #>  $ sort_number     : int  1402 25246 11648 8168 22422 25151 26007 6597 16908 4610 ... #>  $ site            : int  193 103 54 144 178 27 118 154 106 201 ... #>  $ Genus_species   : Factor w/ 175 levels \"_8324\",\"Abies_veitchii\",..: 5 143 67 45 127 142 147 37 96 28 ... #>  $ Family          : Factor w/ 68 levels \"Annonaceae\",\"Asteraceae\",..: 60 37 49 12 50 27 55 31 49 5 ... #>  $ growthform      : Factor w/ 6 levels \"Fern\",\"Herb\",..: 6 6 2 4 2 4 6 6 2 4 ... #>  $ height          : num  22.86 45 0.55 0.6 0.152 ... #>  $ Country         : Factor w/ 37 levels \"Argentina\",\"Australia\",..: 35 26 2 14 35 2 NA 35 2 8 ... #>  $ Site            : Factor w/ 127 levels \"a-ngau\",\"ab\",..: 84 74 41 52 55 66 75 45 44 NA ... #>  $ lat             : num  44.6 12.2 23.8 32.6 41.6 ... #>  $ long            : num  -123.3 -70.5 133.8 34.9 -87 ... #>  $ alt             : int  179 386 553 115 200 157 2 71 2 28 ... #>  $ temp            : num  10.8 24.5 20.9 19.9 9.7 16.8 27.7 15.5 26.4 5.4 ... #>  $ diurn.temp      : num  11.8 10.8 16.3 9.7 10.7 10 4.8 11.4 5 6.6 ... #>  $ isotherm        : num  4.4 7.4 4.8 4.4 2.8 4.8 8.8 3.2 7.4 2.1 ... #>  $ temp.seas       : num  5.2 0.9 6 4.9 9.7 3.9 0.2 8.6 0.6 8.3 ... #>  $ temp.max.warm   : num  27 31.2 37 30.7 28.6 26.1 30.6 32.9 29.9 21.2 ... #>  $ temp.min.cold   : num  0.3 16.7 3.6 8.7 -9.5 5.5 25.2 -2.6 23.2 -9 ... #>  $ temp.ann.range  : num  26.7 14.5 33.4 22 38.1 20.6 5.4 35.5 6.7 30.2 ... #>  $ temp.mean.wetqr : num  4.9 25.1 28.1 13.6 21.6 21.2 27.9 15.6 26.8 6.5 ... #>  $ temp.mean.dryqr : num  17.4 23.2 14.8 25.3 -3.3 12.3 27.5 21.5 25.7 -1.6 ... #>  $ temp.mean.warmqr: num  17.6 25.3 28.1 25.7 21.6 21.4 27.9 26.1 27.1 16.1 ... #>  $ temp.mean.coldqr: num  4.5 23.1 12.8 13.6 -3.3 11.5 27.5 3.8 25.5 -5 ... #>  $ rain            : int  1208 3015 278 598 976 1283 2585 1262 1704 664 ... #>  $ rain.wetm       : int  217 416 37 159 104 157 300 129 309 77 ... #>  $ rain.drym       : int  13 99 9 0 44 63 82 66 16 31 ... #>  $ rain.seas       : int  69 45 42 115 23 29 34 18 66 28 ... #>  $ rain.wetqr      : int  601 1177 109 408 299 450 870 382 806 220 ... #>  $ rain.dryqr      : int  68 340 35 0 165 208 305 249 92 106 ... #>  $ rain.warmqr     : int  75 928 109 2 299 385 855 268 659 191 ... #>  $ rain.coldqr     : int  560 359 42 408 165 279 405 325 135 137 ... #>  $ LAI             : num  2.51 4.26 1.32 1.01 3.26 4.14 NA 3.14 4.51 3.07 ... #>  $ NPP             : int  572 1405 756 359 1131 1563 NA 1266 2296 536 ... #>  $ hemisphere      : int  1 -1 -1 1 1 -1 1 1 -1 1 ... globalPlants$logHt = log(globalPlants$height) ft_temp = lm(logHt~temp, data=globalPlants) ft_tempRain = lm(logHt~temp+rain+rain.wetm+rain.drym+rain.seas+rain.wetqr+rain.dryqr+rain.warmqr+rain.coldqr, data=globalPlants) par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plotenvelope(ft_tempRain) ft_step = step(ft_temp, scope=formula(ft_tempRain), direction=\"forward\") #> Start:  AIC=107.97 #> logHt ~ temp #>  #>               Df Sum of Sq    RSS     AIC #> + rain.wetqr   1   26.7393 262.96  97.280 #> + rain         1   26.4615 263.24  97.418 #> + rain.wetm    1   24.5243 265.17  98.379 #> + rain.coldqr  1   20.3413 269.36 100.429 #> + rain.dryqr   1   11.2099 278.49 104.796 #> + rain.warmqr  1    9.4721 280.22 105.611 #> + rain.drym    1    9.2552 280.44 105.713 #> <none>                     289.70 107.966 #> + rain.seas    1    0.0632 289.63 109.938 #>  #> Step:  AIC=97.28 #> logHt ~ temp + rain.wetqr #>  #>               Df Sum of Sq    RSS    AIC #> + rain.coldqr  1    4.0676 258.89 97.238 #> <none>                     262.96 97.280 #> + rain.wetm    1    1.5701 261.39 98.495 #> + rain         1    1.1733 261.78 98.694 #> + rain.dryqr   1    0.7535 262.20 98.904 #> + rain.warmqr  1    0.5071 262.45 99.027 #> + rain.drym    1    0.4799 262.48 99.041 #> + rain.seas    1    0.0841 262.87 99.238 #>  #> Step:  AIC=97.24 #> logHt ~ temp + rain.wetqr + rain.coldqr #>  #>               Df Sum of Sq    RSS    AIC #> <none>                     258.89 97.238 #> + rain.wetm    1   1.33741 257.55 98.559 #> + rain.seas    1   0.12668 258.76 99.174 #> + rain.warmqr  1   0.01663 258.87 99.229 #> + rain         1   0.01150 258.88 99.232 #> + rain.dryqr   1   0.00406 258.88 99.236 #> + rain.drym    1   0.00005 258.89 99.238 XtempRain=with(globalPlants,cbind(temp,rain,rain.wetm,rain.drym,rain.seas,rain.wetqr,rain.dryqr,rain.wetqr,rain.dryqr)) library(glmnet) lasso_rain=cv.glmnet(XtempRain,globalPlants$logHt,penalty.factor=c(0,rep(1,8))) plot(lasso_rain) ft_lasso=glmnet(XtempRain,globalPlants$logHt,lambda=lasso_rain$lambda.min) ft_lasso$beta #> 9 x 1 sparse Matrix of class \"dgCMatrix\" #>                      s0 #> temp       0.0396005806 #> rain       0.0006377051 #> rain.wetm  .            #> rain.drym  .            #> rain.seas  0.0055999469 #> rain.wetqr .            #> rain.dryqr .            #> rain.wetqr .            #> rain.dryqr . library(car) vif(ft_tempRain) #>        temp        rain   rain.wetm   rain.drym   rain.seas  rain.wetqr  rain.dryqr  #>      1.7730    111.0600     85.4340    110.1600      5.5247    130.5800    144.5700  #> rain.warmqr rain.coldqr  #>      9.5778      6.4369 cor(XtempRain) #>                 temp        rain rain.wetm  rain.drym   rain.seas rain.wetqr rain.dryqr #> temp       1.0000000  0.47869648 0.5552163  0.1923458  0.37764956  0.5530709  0.1959310 #> rain       0.4786965  1.00000000 0.9170080  0.7540378 -0.03914991  0.9276384  0.7811679 #> rain.wetm  0.5552163  0.91700800 1.0000000  0.4730420  0.30626819  0.9935421  0.5030374 #> rain.drym  0.1923458  0.75403779 0.4730420  1.0000000 -0.53128346  0.4907095  0.9933645 #> rain.seas  0.3776496 -0.03914991 0.3062682 -0.5312835  1.00000000  0.2893864 -0.5243323 #> rain.wetqr 0.5530709  0.92763843 0.9935421  0.4907095  0.28938641  1.0000000  0.5187558 #> rain.dryqr 0.1959310  0.78116788 0.5030374  0.9933645 -0.52433232  0.5187558  1.0000000 #> rain.wetqr 0.5530709  0.92763843 0.9935421  0.4907095  0.28938641  1.0000000  0.5187558 #> rain.dryqr 0.1959310  0.78116788 0.5030374  0.9933645 -0.52433232  0.5187558  1.0000000 #>            rain.wetqr rain.dryqr #> temp        0.5530709  0.1959310 #> rain        0.9276384  0.7811679 #> rain.wetm   0.9935421  0.5030374 #> rain.drym   0.4907095  0.9933645 #> rain.seas   0.2893864 -0.5243323 #> rain.wetqr  1.0000000  0.5187558 #> rain.dryqr  0.5187558  1.0000000 #> rain.wetqr  1.0000000  0.5187558 #> rain.dryqr  0.5187558  1.0000000 ft_tempLessRain = lm(logHt~temp+rain+rain.seas+rain.wetqr+rain.dryqr+rain.warmqr+rain.coldqr, data=globalPlants) ft_Lstep = step(ft_temp, scope=formula(ft_tempLessRain), direction=\"forward\") #> Start:  AIC=107.97 #> logHt ~ temp #>  #>               Df Sum of Sq    RSS     AIC #> + rain.wetqr   1   26.7393 262.96  97.280 #> + rain         1   26.4615 263.24  97.418 #> + rain.coldqr  1   20.3413 269.36 100.429 #> + rain.dryqr   1   11.2099 278.49 104.796 #> + rain.warmqr  1    9.4721 280.22 105.611 #> <none>                     289.70 107.966 #> + rain.seas    1    0.0632 289.63 109.938 #>  #> Step:  AIC=97.28 #> logHt ~ temp + rain.wetqr #>  #>               Df Sum of Sq    RSS    AIC #> + rain.coldqr  1    4.0676 258.89 97.238 #> <none>                     262.96 97.280 #> + rain         1    1.1733 261.78 98.694 #> + rain.dryqr   1    0.7535 262.20 98.904 #> + rain.warmqr  1    0.5071 262.45 99.027 #> + rain.seas    1    0.0841 262.87 99.238 #>  #> Step:  AIC=97.24 #> logHt ~ temp + rain.wetqr + rain.coldqr #>  #>               Df Sum of Sq    RSS    AIC #> <none>                     258.89 97.238 #> + rain.seas    1  0.126684 258.76 99.174 #> + rain.warmqr  1  0.016626 258.87 99.229 #> + rain         1  0.011498 258.88 99.232 #> + rain.dryqr   1  0.004059 258.88 99.236  XlessRain=model.matrix(ft_tempLessRain)[,-1] lasso_Lrain=cv.glmnet(XlessRain,globalPlants$logHt,penalty.factor=c(0,rep(1,6))) plot(lasso_Lrain) ft_Llasso=glmnet(XlessRain,globalPlants$logHt,lambda=lasso_Lrain$lambda.min) ft_Llasso$beta #> 7 x 1 sparse Matrix of class \"dgCMatrix\" #>                       s0 #> temp        4.188268e-02 #> rain        5.333291e-05 #> rain.seas   .            #> rain.wetqr  1.030699e-03 #> rain.dryqr  .            #> rain.warmqr .            #> rain.coldqr 6.719062e-04"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"exercise-6-1-effects-of-water-pollution-on-subtidal-marine-micro-invertebrates","dir":"Articles","previous_headings":"","what":"Exercise 6.1: Effects of water pollution on subtidal marine micro-invertebrates","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"factors ? Fixed random? samples seven estuaries along New South Wales coast (three “Pristine”, four “Modified”), estuary, takes 4-7 samples counts creepy crawlies therein. Modification factor, taking levels “Pristine” “Modified” Estuary factor, taking seven levels. sampled randomly, want make inferences across estuaries New South Wales coast, oculd treated random factor. 4-7 samples estuary replicates, shouldn’t added model, variation replicates enter error term.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-for-fig-6-1","dir":"Articles","previous_headings":"","what":"code for Fig 6.1","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"","code":"library(ecostats) #> Loading required package: mvabund data(estuaries) plot(Total~Estuary,data=estuaries,col=c(4,2,2,4,2,4,2)) legend(\"bottomleft\",legend=c(\"Modified\",\"Pristine\"),col=c(4,2),pch=15,pt.cex=2)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-1-fitting-a-linear-mixed-model-to-the-estuary-data-of-exercise-6-1","dir":"Articles","previous_headings":"","what":"Code Box 6.1: Fitting a linear mixed model to the estuary data of Exercise 6.1","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"evidence effect Mod, since estimated coefficient double standard error (95% confidence interval cover zero). effect appears decrease total abundance pristine estuaries.","code":"library(ecostats) data(estuaries) library(lme4) #> Loading required package: Matrix ft_estu = lmer(Total~Mod+(1|Estuary),data=estuaries) summary(ft_estu) #> Linear mixed model fit by REML ['lmerMod'] #> Formula: Total ~ Mod + (1 | Estuary) #>    Data: estuaries #>  #> REML criterion at convergence: 314.4 #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -2.2393 -0.7569  0.1553  0.7372  1.8962  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  Estuary  (Intercept)  10.68    3.268   #>  Residual             123.72   11.123   #> Number of obs: 42, groups:  Estuary, 7 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   39.053      3.237  12.065 #> ModPristine  -11.243      4.287  -2.622 #>  #> Correlation of Fixed Effects: #>             (Intr) #> ModPristine -0.755"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-2-residual-plots-from-a-mixed-model-for-exercise-6-1","dir":"Articles","previous_headings":"","what":"Code Box 6.2: Residual plots from a mixed model for Exercise 6.1","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"","code":"par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) ft_estu = lmer(Total~Mod+(1|Estuary),data=estuaries) scatter.smooth(residuals(ft_estu)~fitted(ft_estu),     xlab=\"Fitted values\",ylab=\"Residuals\") abline(h=0,col=\"red\") scatter.smooth(residuals(ft_estu)~predict(ft_estu,re.form=NA),     xlab=\"Fitted values (no random effects)\",ylab=\"Residuals\") abline(h=0,col=\"red\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-3-using-anova-to-compare-mixed-effects-models-for-the-estuary-data","dir":"Articles","previous_headings":"","what":"Code Box 6.3: Using anova to compare mixed effects models for the estuary data","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"evidence effect modification.","code":"ft_estu = lmer(Total~Mod+(1|Estuary),data=estuaries,REML=F) ft_estuInt = lmer(Total~(1|Estuary),data=estuaries,REML=F) anova(ft_estuInt,ft_estu) #> Data: estuaries #> Models: #> ft_estuInt: Total ~ (1 | Estuary) #> ft_estu: Total ~ Mod + (1 | Estuary) #>            npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)   #> ft_estuInt    3 334.18 339.39 -164.09   328.18                        #> ft_estu       4 330.14 337.09 -161.07   322.14 6.0396  1    0.01399 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-4-confidence-intervals-for-parameters-from-a-mixed-effects-model-for-the-estuary-data","dir":"Articles","previous_headings":"","what":"Code Box 6.4: Confidence intervals for parameters from a mixed effects model for the estuary data","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"","code":"confint(ft_estu) #> Computing profile confidence intervals ... #>                  2.5 %    97.5 % #> .sig01        0.000000  7.613337 #> .sigma        8.944066 14.084450 #> (Intercept)  32.815440 45.246159 #> ModPristine -19.461059 -2.994392"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-5-prediction-intervals-for-random-effects-terms-in-a-mixed-effects-model","dir":"Articles","previous_headings":"","what":"Code Box 6.5: Prediction intervals for random effects terms in a mixed effects model","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"","code":"rft=ranef(ft_estu,condVar=T) library(lattice) dotplot(rft) #> $Estuary"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"exercise-6-2-fitting-random-effects-with-different-variances","dir":"Articles","previous_headings":"","what":"Exercise 6.2: Fitting random effects with different variances","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"BIC suggests didn’t need different variance term level Mod. (also estimated cross-estuary variance zero modified estuaries, leading warning output.)","code":"estuaries$isMod = as.numeric(estuaries$Mod==\"Modified\") estuaries$isPri = as.numeric(estuaries$Mod!=\"Modified\") ft_estuDiff = lmer(Total~Mod+(0+isMod|Estuary)+(0+isPri|Estuary),data=estuaries,REML=F) #> boundary (singular) fit: see help('isSingular') summary(ft_estuDiff) #> Linear mixed model fit by maximum likelihood  ['lmerMod'] #> Formula: Total ~ Mod + (0 + isMod | Estuary) + (0 + isPri | Estuary) #>    Data: estuaries #>  #>      AIC      BIC   logLik deviance df.resid  #>    331.7    340.4   -160.8    321.7       37  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -2.2790 -0.7211  0.2024  0.6807  1.9407  #>  #> Random effects: #>  Groups    Name  Variance Std.Dev. #>  Estuary   isMod   0.00    0.000   #>  Estuary.1 isPri  11.39    3.375   #>  Residual        118.84   10.901   #> Number of obs: 42, groups:  Estuary, 7 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   39.111      2.569   15.22 #> ModPristine  -11.303      3.806   -2.97 #>  #> Correlation of Fixed Effects: #>             (Intr) #> ModPristine -0.675 #> optimizer (nloptwrap) convergence code: 0 (OK) #> boundary (singular) fit: see help('isSingular') BIC(ft_estu,ft_estuDiff) #>             df      BIC #> ft_estu      4 337.0880 #> ft_estuDiff  5 340.3501"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"exercise-6-3-bird-exclusion-and-biological-control","dir":"Articles","previous_headings":"","what":"Exercise 6.3: Bird exclusion and biological control","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"OK looking Treatment:Time interaction, account repeated measures plot, want random effect Plot model. gives us marginal evidence effect bird exclusion aphid counts. Compare got adding Plot fixed effect: Interestingly, \\(P\\)-value lot smaller. get point estimate Treatment:Time effect, standard error slightly smaller random effects model.","code":"data(aphidsBACI) str(aphidsBACI) #> 'data.frame':    16 obs. of  5 variables: #>  $ Plot     : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 1 2 ... #>  $ Treatment: Factor w/ 2 levels \"excluded\",\"present\": 2 2 2 2 1 1 1 1 2 2 ... #>  $ Time     : Factor w/ 2 levels \"X18.06.\",\"X15.07.\": 1 1 1 1 1 1 1 1 2 2 ... #>  $ counts   : int  78 71 122 271 119 152 120 202 60 48 ... #>  $ logcount : num  4.37 4.28 4.81 5.61 4.79 ... ft_aphids=lmer(logcount~Treatment*Time+(1|Plot),data=aphidsBACI) #> boundary (singular) fit: see help('isSingular') ft_aphidNull=lmer(logcount~Time+(1|Plot),data=aphidsBACI) #> boundary (singular) fit: see help('isSingular') anova(ft_aphidNull,ft_aphids) #> refitting model(s) with ML (instead of REML) #> Data: aphidsBACI #> Models: #> ft_aphidNull: logcount ~ Time + (1 | Plot) #> ft_aphids: logcount ~ Treatment * Time + (1 | Plot) #>              npar    AIC    BIC   logLik deviance  Chisq Df Pr(>Chisq)   #> ft_aphidNull    4 28.204 31.294 -10.1020   20.204                        #> ft_aphids       6 26.974 31.609  -7.4868   14.973 5.2304  2    0.07315 . #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 lm_aphids=lm(logcount~Plot+Treatment*Time,data=aphidsBACI) anova(lm_aphids) #> Analysis of Variance Table #>  #> Response: logcount #>                Df Sum Sq Mean Sq F value   Pr(>F)    #> Plot            7 0.8986  0.1284  0.4603 0.833357    #> Time            1 5.4675  5.4675 19.6038 0.004434 ** #> Treatment:Time  1 0.7397  0.7397  2.6522 0.154527    #> Residuals       6 1.6734  0.2789                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 summary(lm_aphids) #>  #> Call: #> lm(formula = logcount ~ Plot + Treatment * Time, data = aphidsBACI) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.5527 -0.1929  0.0000  0.1929  0.5527  #>  #> Coefficients: (1 not defined because of singularities) #>                              Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                    4.6097     0.4175  11.041 3.28e-05 *** #> Plot2                         -0.1559     0.5281  -0.295  0.77776     #> Plot3                          0.3378     0.5281   0.640  0.54600     #> Plot4                          0.4433     0.5281   0.839  0.43336     #> Plot5                          0.2127     0.5904   0.360  0.73105     #> Plot6                          0.3530     0.5904   0.598  0.57179     #> Plot7                          0.6593     0.5904   1.117  0.30685     #> Plot8                          0.2631     0.5904   0.446  0.67154     #> Treatmentpresent                   NA         NA      NA       NA     #> TimeX15.07.                   -1.5992     0.3734  -4.282  0.00519 **  #> Treatmentpresent:TimeX15.07.   0.8601     0.5281   1.629  0.15453     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.5281 on 6 degrees of freedom #> Multiple R-squared:  0.8094, Adjusted R-squared:  0.5235  #> F-statistic: 2.831 on 9 and 6 DF,  p-value: 0.1091 summary(ft_aphids) #> Linear mixed model fit by REML ['lmerMod'] #> Formula: logcount ~ Treatment * Time + (1 | Plot) #>    Data: aphidsBACI #>  #> REML criterion at convergence: 20.2 #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -1.2314 -0.4755 -0.2367  0.3187  1.8824  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  Plot     (Intercept) 0.000    0.0000   #>  Residual             0.199    0.4461   #> Number of obs: 16, groups:  Plot, 8 #>  #> Fixed effects: #>                              Estimate Std. Error t value #> (Intercept)                    4.9817     0.2231  22.334 #> Treatmentpresent              -0.2157     0.3155  -0.684 #> TimeX15.07.                   -1.5992     0.3155  -5.069 #> Treatmentpresent:TimeX15.07.   0.8601     0.4461   1.928 #>  #> Correlation of Fixed Effects: #>             (Intr) Trtmnt TX15.0 #> Trtmntprsnt -0.707               #> TimeX15.07. -0.707  0.500        #> Tr:TX15.07.  0.500 -0.707 -0.707 #> optimizer (nloptwrap) convergence code: 0 (OK) #> boundary (singular) fit: see help('isSingular')"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"exercise-6-4-estuary-data-in-different-zones","dir":"Articles","previous_headings":"","what":"Exercise 6.4: Estuary data in different zones","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"looks like effect Modification, sure interaction (effect seems striking Outer Inner zones)  suggestion less total abundance fitted values increase, super-weird. ’s alarming… evidence interaction Zone Modification. Testing Mod main effect: strong evidence total abundance different Modified Pristine estuaries. boxplot suggests abundance higher Modified estuaries, looking data, appears mostly due high counts Balanus.variegatus, especially outer modified zones.","code":"data(estuaryZone) cols=c(\"blue\",\"red\",\"lightblue\",\"pink\") plot(Total~interaction(Estuary,Zone),data=estuaryZone,col=cols[c(1,2,2,1,2,1,2,3,4,4,3,4,3,4)]) legend(\"bottomright\",legend=c(\"Mod-Inner\",\"Prist-Inner\",\"Mod-Outer\",\"Pris-Outer\"),col=cols,pch=15,pt.cex=2) par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) library(lme4) lme_MZ = lmer(Total~Zone*Mod + (Zone|Estuary), data=estuaryZone ) #> boundary (singular) fit: see help('isSingular')  scatter.smooth(residuals(lme_MZ)~fitted(lme_MZ),     xlab=\"Fitted values\",ylab=\"Residuals\") abline(h=0,col=\"red\") scatter.smooth(residuals(lme_MZ)~predict(lme_MZ,re.form=NA),     xlab=\"Fitted values (no random effects)\",ylab=\"Residuals\") abline(h=0,col=\"red\") lme_MplusZ = lmer(Total~Zone+Mod + (Zone|Estuary), data=estuaryZone ) #> boundary (singular) fit: see help('isSingular') anova(lme_MplusZ,lme_MZ) #> refitting model(s) with ML (instead of REML) #> Data: estuaryZone #> Models: #> lme_MplusZ: Total ~ Zone + Mod + (Zone | Estuary) #> lme_MZ: Total ~ Zone * Mod + (Zone | Estuary) #>            npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq) #> lme_MplusZ    7 595.91 612.31 -290.95   581.91                      #> lme_MZ        8 597.14 615.89 -290.57   581.14 0.7618  1     0.3828 lme_Z = lmer(Total~Zone + (Zone|Estuary), data=estuaryZone ) anova(lme_Z,lme_MplusZ) #> refitting model(s) with ML (instead of REML) #> Data: estuaryZone #> Models: #> lme_Z: Total ~ Zone + (Zone | Estuary) #> lme_MplusZ: Total ~ Zone + Mod + (Zone | Estuary) #>            npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)     #> lme_Z         6 608.43 622.50 -298.22   596.43                          #> lme_MplusZ    7 595.91 612.31 -290.95   581.91 14.529  1   0.000138 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-6-using-the-parametric-bootstrap-to-compute-the-standard-error-of-the-mod-fixed-effect-in-exercise-6-1-","dir":"Articles","previous_headings":"","what":"Code Box 6.6: Using the parametric bootstrap to compute the standard error of the Mod fixed effect in Exercise 6.1.","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"compare standard error summary: see estimated standard error 4.287348, pretty close value got simulation.","code":"nBoot=500 bStat=rep(NA,nBoot) ft_estu = lmer(Total~Mod+(1|Estuary),data=estuaries) for(iBoot in 1:nBoot) {    estuaries$TotalSim=unlist(simulate(ft_estu))    ft_i = lmer(TotalSim~Mod+(1|Estuary),data=estuaries)    bStat[iBoot] = fixef(ft_i)[2] } sd(bStat) #standard error of Mod effect #> [1] 4.158506 summary(ft_estu) #> Linear mixed model fit by REML ['lmerMod'] #> Formula: Total ~ Mod + (1 | Estuary) #>    Data: estuaries #>  #> REML criterion at convergence: 314.4 #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -2.2393 -0.7569  0.1553  0.7372  1.8962  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  Estuary  (Intercept)  10.68    3.268   #>  Residual             123.72   11.123   #> Number of obs: 42, groups:  Estuary, 7 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   39.053      3.237  12.065 #> ModPristine  -11.243      4.287  -2.622 #>  #> Correlation of Fixed Effects: #>             (Intr) #> ModPristine -0.755"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"code-box-6-7-a-parametric-bootstrap-to-test-for-an-effect-of-estuary-in-exercise-6-1-","dir":"Articles","previous_headings":"","what":"Code Box 6.7: A parametric bootstrap to test for an effect of Estuary in Exercise 6.1.","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"evidence Estuary effect.","code":"ft_noestu = lm(Total~Mod,data=estuaries) library(ecostats) anovaPB(ft_noestu,ft_estu,n.sim=99) #> Error in x$terms : $ operator not defined for this S4 class #> Warning in Ops.factor(1, Estuary): '|' not meaningful for factors #>           df deviance      LRT Pr(>LRT) #> ft_noestu  3 322.1963       NA       NA #> ft_estu    4 314.3646 7.831769     0.29"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter6Solutions.html","id":"exercise-6-6-accurate-inferences-about-the-estuary-data","dir":"Articles","previous_headings":"","what":"Exercise 6.6: Accurate inferences about the estuary data","title":"Chapter 6 -- Mixed effect models -- Exercise solutions and Code Boxes","text":"Use parametric bootstrap get formal test zone:mod interaction. can just run old analysis change anova anovaPB: evidence interaction. (Ignore warnings output – random stuff thrown bootstrap resamples didn’t get good fit.) results compare using anova function? Results similar saw . thing different \\(P\\)-value, similar (suggesting need parametric bootstrap !). much easier wasn’t random effect model… really need Estuary ? evidence Estuary effect either!","code":"lme_MZ = lmer(Total~Zone*Mod + (Zone|Estuary), data=estuaryZone, REML=FALSE ) lme_MplusZ = lmer(Total~Zone+Mod + (Zone|Estuary), data=estuaryZone, REML=FALSE ) anovaPB(lme_MplusZ,lme_MZ,n.sim=99) #> Warning in Ops.factor(Zone, Estuary): '|' not meaningful for factors #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 0.00990213 (tol = 0.002, component 1) #> Data: estuaryZone #> Models: #> objectNull: Total ~ Zone + Mod + (Zone | Estuary) #> object: Total ~ Zone * Mod + (Zone | Estuary) #>            npar    AIC    BIC  logLik deviance  Chisq Pr(>Chisq) #> objectNull    7 595.91 612.31 -290.95   581.91                   #> object        8 597.14 615.89 -290.57   581.14 0.7618       0.46 lme_MZ = lmer(Total~Zone*Mod + (Zone|Estuary), data=estuaryZone, REML=FALSE ) lme_MZnoest = lm(Total~Zone+Mod, data=estuaryZone) anovaPB(lme_MZnoest,lme_MZ,n.sim=99) #> Error in x$terms : $ operator not defined for this S4 class #> Warning in Ops.factor(Zone, Estuary): '|' not meaningful for factors #>             df deviance      LRT Pr(>LRT) #> lme_MZnoest  4 582.8273       NA       NA #> lme_MZ       8 581.1436 1.683641     0.35"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"exercise-7-1-biological-control-of-aphids-over-time","dir":"Articles","previous_headings":"","what":"Exercise 7.1: Biological control of aphids over time","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"effect netting treatment changes aphid numbers across sampling times? sort model appropriate ? now repeated measures time, longitudinal data consider methods Section 7.1.1.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-1-r-code-to-produce-figure-7-2-","dir":"Articles","previous_headings":"","what":"Code Box 7.1: R code to produce Figure 7.2.","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"plot chunk box71","code":"library(ecostats) data(aphids) cols=c(rgb(1,0,0,alpha=0.5),rgb(0,0,1,alpha=0.5)) #transparent colours par(mfrow=c(2,1),mar=c(3,3,1.5,1),mgp=c(2,0.5,0),oma=c(0,0,0.5,0)) with(aphids$oat, interaction.plot(Time,Plot,logcount,legend=FALSE,   col=cols[Treatment], lty=1, ylab=\"Counts [log(y+1) scale]\",   xlab=\"Time (days since treatment)\") ) legend(\"bottomleft\",c(\"Excluded\",\"Present\"),col=cols,lty=1) mtext(\"(a)\",3,adj=0,line=0.5,cex=1.4) with(aphids$oat, interaction.plot(Time,Treatment,logcount, col=cols,   lty=1, legend=FALSE, ylab=\"Counts [log(y+1) scale]\",   xlab=\"Time (days since treatment)\")) legend(\"topright\",c(\"Excluded\",\"Present\"),col=cols,lty=1) mtext(\"(b)\",3,adj=0,line=0.5,cex=1.4)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-2-choosing-a-longitudinal-model-for-the-aphid-data","dir":"Articles","previous_headings":"","what":"Code Box 7.2: Choosing a longitudinal model for the aphid data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"plot chunk box72","code":"library(lme4) aphid_int = lmer(logcount~Treatment*Time+Treatment*I(Time^2)+(1|Plot),     data=aphids$oat,REML=FALSE) # random intercepts model aphid_slope = lmer(logcount~Treatment*Time+Treatment*I(Time^2)+(Time|Plot),     data=aphids$oat, REML=FALSE) # random slopes model #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model failed to #> converge with max|grad| = 0.00715391 (tol = 0.002, component 1) library(nlme) # refit random intercepts model in nlme to get a ACF: aphid_int2 = lme(logcount~Treatment*Time+Treatment*I(Time^2),     random=~1|Plot, data=aphids$oat, method=\"ML\") plot(ACF(aphid_int2),alpha=0.05) # only works for nlme-fitted mixed models # now try a model with a temporally structured random effect: aphid_CAR1 = update(aphid_int2,correlation=corCAR1(,form=~Time|Plot)) BIC(aphid_int,aphid_int2,aphid_slope,aphid_CAR1) #>             df      BIC #> aphid_int    8 144.5429 #> aphid_int2   8 144.5429 #> aphid_slope 10 147.4244 #> aphid_CAR1   9 148.1673"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-3-exploring-the-random-intercept-fit-to-the-aphids-data","dir":"Articles","previous_headings":"","what":"Code Box 7.3: Exploring the random intercept fit to the aphids data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"","code":"print(aphid_int) #> Linear mixed model fit by maximum likelihood  ['lmerMod'] #> Formula: logcount ~ Treatment * Time + Treatment * I(Time^2) + (1 | Plot) #>    Data: aphids$oat #>      AIC      BIC   logLik deviance df.resid  #> 128.3401 144.5429 -56.1701 112.3401       48  #> Random effects: #>  Groups   Name        Std.Dev. #>  Plot     (Intercept) 0.202    #>  Residual             0.635    #> Number of obs: 56, groups:  Plot, 8 #> Fixed Effects: #>                (Intercept)            Treatmentpresent                        Time   #>                  6.5703718                  -0.2379806                  -0.1943256   #>                  I(Time^2)       Treatmentpresent:Time  Treatmentpresent:I(Time^2)   #>                  0.0028708                   0.0495183                  -0.0004498 anova(aphid_int) #> Analysis of Variance Table #>                     npar  Sum Sq Mean Sq F value #> Treatment              1  2.0410  2.0410  5.0619 #> Time                   1 24.7533 24.7533 61.3917 #> I(Time^2)              1  5.7141  5.7141 14.1717 #> Treatment:Time         1  1.6408  1.6408  4.0693 #> Treatment:I(Time^2)    1  0.0413  0.0413  0.1024 aphid_noTreat = lmer(logcount~Time+I(Time^2)+(1|Plot),    data=aphids$oat, REML=FALSE) anova(aphid_noTreat,aphid_int) #> Data: aphids$oat #> Models: #> aphid_noTreat: logcount ~ Time + I(Time^2) + (1 | Plot) #> aphid_int: logcount ~ Treatment * Time + Treatment * I(Time^2) + (1 | Plot) #>               npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)   #> aphid_noTreat    5 130.26 140.39 -60.131   120.26                        #> aphid_int        8 128.34 144.54 -56.170   112.34 7.9224  3    0.04764 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-4-exploring-the-random-slopes-fit-to-the-aphids-data","dir":"Articles","previous_headings":"","what":"Code Box 7.4: Exploring the random slopes fit to the aphids data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"","code":"print(aphid_slope) #> Linear mixed model fit by maximum likelihood  ['lmerMod'] #> Formula: logcount ~ Treatment * Time + Treatment * I(Time^2) + (Time |      Plot) #>    Data: aphids$oat #>      AIC      BIC   logLik deviance df.resid  #> 127.1708 147.4244 -53.5854 107.1708       46  #> Random effects: #>  Groups   Name        Std.Dev. Corr  #>  Plot     (Intercept) 0.11684        #>           Time        0.01907  -1.00 #>  Residual             0.57877        #> Number of obs: 56, groups:  Plot, 8 #> Fixed Effects: #>                (Intercept)            Treatmentpresent                        Time   #>                  6.5703718                  -0.2379806                  -0.1943256   #>                  I(Time^2)       Treatmentpresent:Time  Treatmentpresent:I(Time^2)   #>                  0.0028708                   0.0495183                  -0.0004498   #> optimizer (nloptwrap) convergence code: 0 (OK) ; 0 optimizer warnings; 1 lme4 warnings anova(aphid_slope) #> Analysis of Variance Table #>                     npar  Sum Sq Mean Sq F value #> Treatment              1  0.7467  0.7467  2.2291 #> Time                   1 12.8040 12.8040 38.2239 #> I(Time^2)              1  5.7141  5.7141 17.0582 #> Treatment:Time         1  0.8487  0.8487  2.5337 #> Treatment:I(Time^2)    1  0.0413  0.0413  0.1232 aphid_noTreatS = lmer(logcount~Time+I(Time^2)+(Time|Plot),     data=aphids$oat, REML=FALSE) #> boundary (singular) fit: see help('isSingular') anova(aphid_noTreatS,aphid_slope) #> Data: aphids$oat #> Models: #> aphid_noTreatS: logcount ~ Time + I(Time^2) + (Time | Plot) #> aphid_slope: logcount ~ Treatment * Time + Treatment * I(Time^2) + (Time | Plot) #>                npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq) #> aphid_noTreatS    7 125.04 139.22 -55.519   111.04                      #> aphid_slope      10 127.17 147.42 -53.585   107.17 3.8666  3     0.2762"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"exercise-7-2-biological-control-of-aphids-in-a-wheat-field","dir":"Articles","previous_headings":"","what":"Exercise 7.2: Biological control of aphids in a wheat field","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"Repeat longitudinal analyses data wheat field. longitudinal model better handles repeated measures case? plot chunk ex72plot don’t see lot lines crossing expect correlation. also see similar pattern aphid counts reducing time, possibly higher without bird exclusion 2-5 weeks trial. plot chunk ex72long random intercept model seems favoured. evidence bird exclusion improves biological control aphids? marginal evidence treatment effect.","code":"data(aphids) cols=c(rgb(1,0,0,alpha=0.5),rgb(0,0,1,alpha=0.5)) #transparent colours par(mar=c(3,3,1.5,1),mgp=c(2,0.5,0),oma=c(0,0,0.5,0)) with(aphids$wheat, interaction.plot(Time,Plot,logcount,legend=FALSE,   col=cols[Treatment], lty=1, ylab=\"Counts [log(y+1) scale]\",   xlab=\"Time (days since treatment)\") ) legend(\"bottomleft\",c(\"Excluded\",\"Present\"),col=cols,lty=1) library(lme4) aphidw_int = lmer(logcount~Treatment*Time+Treatment*I(Time^2)+(1|Plot),     data=aphids$wheat,REML=FALSE) # random intercepts model #> Warning: Some predictor variables are on very different scales: consider rescaling #> boundary (singular) fit: see help('isSingular') aphidw_slope = lmer(logcount~Treatment*Time+Treatment*I(Time^2)+(Time|Plot),     data=aphids$wheat, REML=FALSE) # random slopes model #> Warning: Some predictor variables are on very different scales: consider rescaling #> boundary (singular) fit: see help('isSingular') library(nlme) # refit random intercepts model in nlme to get a ACF: aphidw_int2 = lme(logcount~Treatment*Time+Treatment*I(Time^2),     random=~1|Plot, data=aphids$wheat, method=\"ML\") plot(ACF(aphidw_int2),alpha=0.05) # only works for nlme-fitted mixed models # now try a model with a temporally structured random effect: # for some reason this one returns non-convergence unless I make Tiem a (numerical) factor: aphidsTimenFac=glmmTMB::numFactor(aphids$wheat$Time)  aphidw_CAR1 = update(aphidw_int2,correlation=corCAR1(,form=~aphidsTimenFac|Plot))  BIC(aphidw_int,aphidw_int2,aphidw_slope,aphidw_CAR1) #>              df      BIC #> aphidw_int    8 165.5916 #> aphidw_int2   8 165.5916 #> aphidw_slope 10 170.1048 #> aphidw_CAR1   9 169.6170 aphidw_noTr = lmer(logcount~Time+I(Time^2)+(1|Plot),     data=aphids$wheat,REML=FALSE) # random intercepts model #> Warning: Some predictor variables are on very different scales: consider rescaling #> boundary (singular) fit: see help('isSingular') anova(aphidw_noTr,aphidw_int) #> Data: aphids$wheat #> Models: #> aphidw_noTr: logcount ~ Time + I(Time^2) + (1 | Plot) #> aphidw_int: logcount ~ Treatment * Time + Treatment * I(Time^2) + (1 | Plot) #>             npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)   #> aphidw_noTr    5 151.02 161.15 -70.511   141.02                        #> aphidw_int     8 149.39 165.59 -66.694   133.39 7.6327  3    0.05424 . #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"exercise-7-3-biological-control-of-aphids-across-both-fields","dir":"Articles","previous_headings":"","what":"Exercise 7.3: Biological control of aphids across both fields!","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"Construct single, larger model test effect biological exclusion, check effect differs across fields. need mixed model allows effects different across fields (times) combined model evidence treatment effect.","code":"aphids$oat$field   = \"oat\" aphids$wheat$field = \"wheat\" aphids$wheat$Plot=paste0(\"W\",aphids$wheat$Plot) #making sure we have different names for different Plots across fields aphids$all         = rbind(aphids$oat,aphids$wheat) aphids$all$field   = factor(aphids$all$field) str(aphids$all) #> 'data.frame':    112 obs. of  6 variables: #>  $ Plot     : Factor w/ 16 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 1 2 ... #>  $ Treatment: Factor w/ 2 levels \"excluded\",\"present\": 2 2 2 2 1 1 1 1 2 2 ... #>  $ Time     : num  3 3 3 3 3 3 3 3 10 10 ... #>  $ counts   : int  449 547 597 304 520 587 545 192 185 93 ... #>  $ logcount : num  6.11 6.31 6.39 5.72 6.26 ... #>  $ field    : Factor w/ 2 levels \"oat\",\"wheat\": 1 1 1 1 1 1 1 1 1 1 ... aphida_int = lmer(logcount~field*Time*Treatment+field*I(Time^2)*Treatment+(1|Plot),     data=aphids$all,REML=FALSE) # random intercepts model #> Warning: Some predictor variables are on very different scales: consider rescaling #> boundary (singular) fit: see help('isSingular') aphida_noTr = lmer(logcount~field*Time+field*I(Time^2)+(1|Plot),     data=aphids$all,REML=FALSE) # random intercepts model #> Warning: Some predictor variables are on very different scales: consider rescaling anova(aphida_noTr,aphida_int) #> Data: aphids$all #> Models: #> aphida_noTr: logcount ~ field * Time + field * I(Time^2) + (1 | Plot) #> aphida_int: logcount ~ field * Time * Treatment + field * I(Time^2) * Treatment + (1 | Plot) #>             npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)   #> aphida_noTr    8 280.88 302.63 -132.44   264.88                        #> aphida_int    14 276.61 314.67 -124.30   248.61 16.273  6    0.01236 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"exercise-7-4-eucalypt-richness-as-a-function-of-the-environment","dir":"Articles","previous_headings":"","what":"Exercise 7.4: Eucalypt richness as a function of the environment","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"Ian wanted know:  species richness vary one area next, main environmental correlates richness?… Plotting richness spatial location, found spatial clusters high low species richness (Fig. 7.3)… sort analysis method Ian consider using? looking fitting spatial model, along lines Code Box 7.5.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-5-model-selection-to-choose-predictors-and-a-spatial-model-for-ians-richness-data","dir":"Articles","previous_headings":"","what":"Code Box 7.5: Model selection to choose predictors, and a spatial model, for Ian’s richness data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"(code chunk takes several minutes evaluate.)","code":"data(Myrtaceae) Myrtaceae$logrich=log(Myrtaceae$richness+1) ft_rich = lm(logrich~soil+poly(TMP_MAX,TMP_MIN,RAIN_ANN,degree=2),      data=Myrtaceae) ft_richAdd = lm(logrich~soil+poly(TMP_MAX,degree=2)+      poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2), data=Myrtaceae) BIC(ft_rich,ft_richAdd) #>            df      BIC #> ft_rich    19 1014.686 #> ft_richAdd 16 1002.806 library(nlme) richForm = logrich~soil+poly(TMP_MAX,degree=2)+poly(TMP_MIN,degree=2)+        poly(RAIN_ANN,degree=2) ft_richExp = gls(richForm,data=Myrtaceae,correlation=corExp(form=~X+Y)) ft_richNugg = gls(richForm,data=Myrtaceae,          correlation=corExp(form=~X+Y,nugget=TRUE)) BIC(ft_richExp,ft_richNugg) #>             df       BIC #> ft_richExp  17 1036.2154 #> ft_richNugg 18  979.5212"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-6-inferences-from-spatial-and-non-spatial-models-for-ians-richness-data","dir":"Articles","previous_headings":"","what":"Code Box 7.6: Inferences from spatial and non-spatial models for Ian’s richness data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"","code":"ft_richNugg anova(ft_richAdd) anova(ft_richNugg)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-7-spatial-correlogram-for-ians-species-richness-data","dir":"Articles","previous_headings":"","what":"Code Box 7.7: Spatial correlogram for Ian’s species richness data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"plot chunk box77 plot chunk box77","code":"library(pgirmess) corRich = with(Myrtaceae,correlog(cbind(X,Y),logrich)) plot(corRich,xlim=c(0,150),ylim=c(-0.05,0.2)) abline(h=0,col=\"grey90\") Myrtaceae$resid = residuals(ft_richAdd) corRichResid = with(Myrtaceae,correlog(cbind(X,Y),resid)) plot(corRichResid,xlim=c(0,150),ylim=c(-0.05,0.2)) abline(h=0,col=\"grey90\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"exercise-7-5-egg-size-when-dads-incubate","dir":"Articles","previous_headings":"","what":"Exercise 7.5: Egg size when Dads incubate","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"Terje wondered whether egg size specifically limited male body size. collected data 71 species shorebird male incubates egg, measuring egg size, size adult males females… sort model might appropriate ? try linear model egg size function female male bird size. Can see see potential problems satisfying independence assumptions? potential issue phylogenetic signal many traits: shorebird species closely related, can expect egg sizes similar.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-8-phylogenetic-tree-of-71-shorebird-species","dir":"Articles","previous_headings":"","what":"Code Box 7.8: Phylogenetic tree of 71 shorebird species","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"plot chunk box7.8","code":"library(caper) data(shorebird) shore4d=phylobase::phylo4d(shorebird.tree,shorebird.data) library(phylosignal) barplot.phylo4d(shore4d,c(\"Egg.Mass\",\"F.Mass\",\"M.Mass\")) #> Warning in asMethod(object): trees with unknown order may be unsafe in ape"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-9-exploratory-analysis-of-egg-size-data","dir":"Articles","previous_headings":"","what":"Code Box 7.9: Exploratory analysis of egg size data}","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"plot chunk box7.9","code":"library(GGally) ggpairs(log(shorebird.data[,2:4]))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-10-comparative-analysis-of-egg-size-data","dir":"Articles","previous_headings":"","what":"Code Box 7.10: Comparative analysis of egg size data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"","code":"library(caper) shorebird = comparative.data(shorebird.tree, shorebird.data,                    Species, vcv=TRUE) pgls_egg = pgls(log(Egg.Mass) ~ log(F.Mass)+log(M.Mass),                 data=shorebird) summary(pgls_egg) #>  #> Call: #> pgls(formula = log(Egg.Mass) ~ log(F.Mass) + log(M.Mass), data = shorebird) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -0.097840 -0.027594  0.000748  0.018561  0.063632  #>  #> Branch length transformations: #>  #> kappa  [Fix]  : 1.000 #> lambda [Fix]  : 1.000 #> delta  [Fix]  : 1.000 #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.37902    0.23172 -1.6357 0.106520     #> log(F.Mass) -0.22255    0.22081 -1.0079 0.317077     #> log(M.Mass)  0.89708    0.22246  4.0325 0.000142 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.03343 on 68 degrees of freedom #> Multiple R-squared: 0.8476,  Adjusted R-squared: 0.8431  #> F-statistic: 189.1 on 2 and 68 DF,  p-value: < 2.2e-16"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"code-box-7-11-residual-diagnostics-for-egg-size-data","dir":"Articles","previous_headings":"","what":"Code Box 7.11: Residual diagnostics for egg size data","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"code chunk takes several minutes evaluate run","code":"par(mfrow=c(2,2)) plot(pgls_egg) res.df = data.frame(Species = shorebird.data$Species,                 res = residuals(pgls_egg)) res4d = phylobase::phylo4d(shorebird.tree,res.df) res.pg = phyloCorrelogram(res4d,trait=\"res\") plot(res.pg)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter7Solutions.html","id":"exercise-7-6-comparative-analysis-of-egg-size-data-revisited","dir":"Articles","previous_headings":"","what":"Exercise 7.6: Comparative analysis of egg size data revisited","title":"Chapter 7 -- Correlated samples in times, space, phylogeny... -- Exercise solutions and Code Boxes","text":"Refit model allowing \\(\\lambda\\) estimated data (using lambda=\"ML\"), allowing \\(\\delta\\) estimated data. change results interpretation? Nope – results pretty much previously. Now fit linear model ignoring phylogeny, via lm. happens ? slopes move zero everything becomes significant. particular, effect female mass previously, now strongly significant. expect? Yes expected phylogenetic relatedness introduces positive dependence, leading -estimation uncertainty higher chance false positives. Look log-likelihood (using logLik function) help decide models better fit data. Something seems wrong df calculation pgls model, main thing see log-likelihood substantially higher pgls model, suggesting much better fit data.","code":"pgls_eggL = pgls(log(Egg.Mass) ~ log(F.Mass)+log(M.Mass), lambda=\"ML\",                 data=shorebird) summary(pgls_eggL) #>  #> Call: #> pgls(formula = log(Egg.Mass) ~ log(F.Mass) + log(M.Mass), data = shorebird,  #>     lambda = \"ML\") #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -0.072175 -0.015738  0.001073  0.017126  0.057342  #>  #> Branch length transformations: #>  #> kappa  [Fix]  : 1.000 #> lambda [ ML]  : 0.947 #>    lower bound : 0.000, p = 1.1224e-13 #>    upper bound : 1.000, p = 0.033109 #>    95.0% CI   : (0.839, 0.997) #> delta  [Fix]  : 1.000 #>  #> Coefficients: #>             Estimate Std. Error t value  Pr(>|t|)     #> (Intercept) -0.43469    0.20689 -2.1011   0.03934 *   #> log(F.Mass) -0.28756    0.22202 -1.2952   0.19963     #> log(M.Mass)  0.97556    0.22304  4.3740 4.293e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.02841 on 68 degrees of freedom #> Multiple R-squared: 0.8709,  Adjusted R-squared: 0.8671  #> F-statistic: 229.3 on 2 and 68 DF,  p-value: < 2.2e-16 lm_egg = lm(log(Egg.Mass) ~ log(F.Mass)+log(M.Mass), data=shorebird.data) summary(lm_egg) #>  #> Call: #> lm(formula = log(Egg.Mass) ~ log(F.Mass) + log(M.Mass), data = shorebird.data) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -0.5843 -0.1104  0.0257  0.1338  0.4347  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  -0.2105     0.1296  -1.624    0.109     #> log(F.Mass)  -1.0605     0.2261  -4.691 1.36e-05 *** #> log(M.Mass)   1.7433     0.2283   7.635 1.01e-10 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.2113 on 68 degrees of freedom #> Multiple R-squared:  0.9089, Adjusted R-squared:  0.9063  #> F-statistic: 339.3 on 2 and 68 DF,  p-value: < 2.2e-16 logLik(lm_egg) #> 'log Lik.' 11.1658 (df=4) logLik(pgls_eggL) #> 'log Lik.' 38.73639 (df=3)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-1-fitting-a-spline-smoother-to-the-mauna-loa-annual-data-of-exercise-8-1-on-r-","dir":"Articles","previous_headings":"","what":"Code Box 8.1: Fitting a spline smoother to the Mauna Loa annual data of Exercise 8.1 on R.","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"library(mgcv) #> Loading required package: nlme #> This is mgcv 1.8-40. For overview type 'help(\"mgcv-package\")'. library(ecostats) #> Loading required package: mvabund data(maunaloa) maunaJan = maunaloa[maunaloa$month==1,] ft_maunagam=gam(co2~s(year), data=maunaJan) summary(ft_maunagam) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> co2 ~ s(year) #>  #> Parametric coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 356.68048    0.05378    6632   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>           edf Ref.df     F p-value     #> s(year) 8.427  8.908 33847  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =      1   Deviance explained =  100% #> GCV = 0.2143  Scale est. = 0.18223   n = 63"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-2-residual-plot-from-a-gam-of-the-annual-mauna-loa-data-of-exercise-8-1","dir":"Articles","previous_headings":"","what":"Code Box 8.2: Residual plot from a GAM of the annual Mauna Loa data of Exercise 8.1","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"think assumptions satisfied? generally looks good, although couple lines points fanning residuals vs fits plot co2<320. (method taking measurements actually changed 1974, co2=330, possible artefacts due changes measurement recording process data 1950’s 1960’s.) Note simulation envelope around trend line residual vs fits plot hard see – falls close horizontal line zero. happens way smoother year fitted – done way residual trend (nearly) completely removed.","code":"plotenvelope(ft_maunagam)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-3-comparing-curves-for-the-mauna-loa-data-","dir":"Articles","previous_headings":"","what":"Code Box 8.3: Comparing curves for the Mauna Loa data.","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"maunaJan$year00 = pmax(2000,maunaJan$year) ft_maunaPiece = lm(co2~year+year00,data=maunaJan) ft_maunagam20 = gam(co2~s(year,k=20), data=maunaJan) summary(ft_maunagam20)$edf # this gam added about 6 extra knots: #> [1] 15.01983 BIC(ft_maunaPiece,ft_maunagam,ft_maunagam20) #>                     df      BIC #> ft_maunaPiece  4.00000 252.2672 #> ft_maunagam   10.42712 104.5190 #> ft_maunagam20 17.01983 104.7728 isTrain = which(maunaJan$year<=2006) datTrain = maunaJan[isTrain,] datTest = maunaJan[-isTrain,] ft_piece = lm(co2~year+year00,dat=datTrain) ft_gam = gam(co2~s(year),dat=datTrain) ft_gam20 = gam(co2~s(year,k=20),dat=datTrain) pr_piece = predict(ft_piece,newdata=datTest) pr_gam = predict(ft_gam,newdata=datTest) pr_gam20 = predict(ft_gam20,newdata=datTest) preds = cbind( predict(ft_piece,newdata=datTest),     predict(ft_gam,newdata=datTest), predict(ft_gam20,newdata=datTest) ) print( apply((datTest$co2-preds)^2,2,sum)) # getting SS by column #> [1] 233.36905  99.43189  15.72148"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-2-eucalypt-richness-as-a-function-of-the-environment","dir":"Articles","previous_headings":"","what":"Exercise 8.2: Eucalypt richness as a function of the environment","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":" species richness vary one area next, main environmental correlates richness? [Ian] thinks species richness respond temperature rainfall non-linear fashion, may interact. sort model Ian consider using? try GAM, Code Box 8.4. Note doesn’t allow account spatial autocorrelation time, maybe try gamm way forward.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-4-handling-interactions-in-a-gam-when-modelling-ians-richness-data-as-a-function-of-minimum-temperature-and-rainfall-for-exercise-8-2","dir":"Articles","previous_headings":"","what":"Code Box 8.4: Handling interactions in a GAM, when modelling Ian’s richness data as a function of minimum temperature and rainfall, for Exercise 8.2","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"data(Myrtaceae) ft_tmprain=gam(log(richness+1)~te(TMP_MIN,RAIN_ANN),data=Myrtaceae) vis.gam(ft_tmprain,theta=-135) #rotating the plot to find a nice view summary(ft_tmprain)$edf #> [1] 14.89171 ft_tmprain2=gam(log(richness+1)~s(TMP_MIN)+s(RAIN_ANN)+TMP_MIN*RAIN_ANN,       data=Myrtaceae) summary(ft_tmprain2) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> log(richness + 1) ~ s(TMP_MIN) + s(RAIN_ANN) + TMP_MIN * RAIN_ANN #>  #> Parametric coefficients: #>                   Estimate Std. Error t value Pr(>|t|)     #> (Intercept)      6.970e-02  3.268e-02   2.133   0.0332 *   #> TMP_MIN          2.045e-02  7.029e-02   0.291   0.7712     #> RAIN_ANN         1.333e-03  1.501e-04   8.883   <2e-16 *** #> TMP_MIN:RAIN_ANN 1.415e-05  4.060e-05   0.348   0.7276     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>               edf Ref.df     F p-value     #> s(TMP_MIN)  3.945  5.054 2.838  0.0145 *   #> s(RAIN_ANN) 5.295  6.459 9.695  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Rank: 20/22 #> R-sq.(adj) =   0.12   Deviance explained = 12.9% #> GCV = 0.15261  Scale est. = 0.15076   n = 1000"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-3-smoothers-for-climate-effects-on-plant-height","dir":"Articles","previous_headings":"","what":"Exercise 8.3: Smoothers for climate effects on plant height","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"[Angela] like know plant height relates climate – particular, interactions predictors, relationship non-linear? winner linear model.","code":"data(globalPlants)  ft_1temprain = gam(log(height)~temp+rain, dat=globalPlants) #linear model ft_2tempPlusrain = gam(log(height)~poly(temp,2)+poly(rain,2), dat=globalPlants) #quadratic, no interaction ft_2temprain = gam(log(height)~poly(temp,2)+poly(rain,2)+rain:temp, dat=globalPlants) #quadratic, interactions ft_stempPlusrain = gam(log(height)~s(temp)+s(rain), dat=globalPlants) #smoother+no interaction ft_stemprain = gam(log(height)~s(temp)+s(rain)+rain:temp, dat=globalPlants) #smoother+interaction BIC(ft_1temprain,ft_2tempPlusrain,ft_2temprain,ft_stempPlusrain,ft_stemprain) #>                        df      BIC #> ft_1temprain     4.000000 482.6809 #> ft_2tempPlusrain 6.000000 489.5603 #> ft_2temprain     7.000000 494.0549 #> ft_stempPlusrain 4.495239 483.6918 #> ft_stemprain     5.000000 484.6240"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-5-residual-plot-with-a-smoother-to-diagnose-a-model-","dir":"Articles","previous_headings":"","what":"Code Box 8.5: Residual plot with a smoother to diagnose a model.","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"data(globalPlants) globalPlants$logHt = log(globalPlants$height) ft_heightlm = lm(logHt~lat,dat=globalPlants) plot(ft_heightlm,which=1) ft_temp = gam(logHt~s(temp), dat=globalPlants) ecostats::plotenvelope(ft_temp, which=1, main=\"\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-4-nonlinear-predictors-of-species-richness","dir":"Articles","previous_headings":"","what":"Exercise 8.4: Nonlinear predictors of species richness?","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"Refit model using smoothers environmental variable compare model additive quadratic terms (assume conditional independence moment). looks like model additive terms better fit. try refitting model account , using gamm function mgcv package. think make difference conclusion? Justify argument. ’m going try refitting, don’t think make difference. main thing happens spatial structure data haven’t accounted get false confidence: standard errors P-values small. model selection context, means can end saying terms model don’t actually need , end overly complicated model. case, already concluded don’t need complicated model, extra smoother terms .","code":"data(Myrtaceae) Myrtaceae$logrich=log(Myrtaceae$richness+1) ft_richAdd = lm(logrich~soil+poly(TMP_MAX,degree=2)+      poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2), data=Myrtaceae) ft_richSmooth = gam(logrich~soil+s(TMP_MAX)+s(TMP_MIN)+s(RAIN_ANN),                     data=Myrtaceae) BIC(ft_richAdd,ft_richSmooth) #>                     df      BIC #> ft_richAdd    16.00000 1002.806 #> ft_richSmooth 21.89962 1013.921"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-5-carbon-dioxide-measurements-at-mauna-loa-observatory","dir":"Articles","previous_headings":"","what":"Exercise 8.5: Carbon dioxide measurements at Mauna Loa observatory","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"like model dataset characterise key trends within well across years, taking account carbon dioxide follow linear trend time, periodic seasonal oscillation… sort model use? can fit additive model smoother long-term trend, harmonics (sin/cos terms) seasonal trend.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-6-a-simple-model-for-the-mauna-loa-monthly-data-with-a-cyclical-predictor","dir":"Articles","previous_headings":"","what":"Code Box 8.6: A simple model for the Mauna Loa monthly data with a cyclical predictor","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"data(maunaloa) library(mgcv) ft_cyclic=gam(co2~s(DateNum)+sin(month/12*2*pi)+cos(month/12*2*pi),   data=maunaloa) plot(maunaloa$co2~maunaloa$Date,type=\"l\",   ylab=expression(CO[2]),xlab=\"Time\") points(predict(ft_cyclic)~maunaloa$Date,type=\"l\",col=\"red\",lwd=0.5)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-7-residual-plots-across-time-and-season-for-the-mauna-loa-monthly-data","dir":"Articles","previous_headings":"","what":"Code Box 8.7: Residual plots across time and season for the Mauna Loa monthly data","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"code produce simulated dataset model, comparison:","code":"par(mfrow=c(1,2)) plot(residuals(ft_cyclic)~maunaloa$Date,type=\"l\", xlab=\"Time\") plot(residuals(ft_cyclic)~sin(maunaloa$month/12*2*pi),        type=\"l\",xlab=\"Season\") maunaloa$simCO2 = unlist(simulate(ft_cyclic)) ft_simCyclic=gam(simCO2~s(DateNum)+sin(month/12*2*pi)+cos(month/12*2*pi),   data=maunaloa) par(mfrow=c(1,2)) plot(residuals(ft_simCyclic)~maunaloa$Date,type=\"l\", xlab=\"Time\") plot(residuals(ft_simCyclic)~sin(maunaloa$month/12*2*pi),        type=\"l\",xlab=\"Season\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-8-another-model-for-the-mauna-loa-monthly-data-with-an-extra-sine-curve-in-there-to-better-handle-irregularities-in-the-seasonal-effect","dir":"Articles","previous_headings":"","what":"Code Box 8.8: Another model for the Mauna Loa monthly data, with an extra sine curve in there to better handle irregularities in the seasonal effect}","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"ft_cyclic2=gam(co2~s(DateNum)+sin(month/12*2*pi)+cos(month/12*2*pi)+        sin(month/12*4*pi)+cos(month/12*4*pi),data=maunaloa) par(mfrow=c(1,2)) plot(residuals(ft_cyclic2)~maunaloa$Date,type=\"l\", xlab=\"Time\") plot(residuals(ft_cyclic2)~sin(maunaloa$month/12*2*pi),        type=\"l\",xlab=\"Season\")"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"code-box-8-9-mauna-loa-model-with-autocorrelation","dir":"Articles","previous_headings":"","what":"Code Box 8.9: Mauna Loa model with autocorrelation}","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"","code":"ft_gamm = gamm(co2~s(DateNum)+sin(month/12*2*pi)+cos(month/12*2*pi)+                 sin(month/12*4*pi)+cos(month/12*4*pi),correlation=corAR1(),                 data=maunaloa) acf(residuals(ft_gamm$gam)) acf(residuals(ft_gamm$lme,type=\"normalized\"))"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-6-mauna-loa-monthly-data-an-extra-term-in-seasonal-trend","dir":"Articles","previous_headings":"","what":"Exercise 8.6: Mauna Loa monthly data – an extra term in seasonal trend?","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"tried modelling trend fitting sine curves two frequencies… sufficient, add another frequency , like month/12*6*pi (curves three cycles year)?  According BIC, 2 harmonics winner, isn’t much gain adding third fourth.","code":"ft_cyclic3=gam(co2~s(DateNum)+sin(month/12*2*pi)+cos(month/12*2*pi)+        sin(month/12*4*pi)+cos(month/12*4*pi) +        + sin(month/12*6*pi)+cos(month/12*6*pi), data=maunaloa) ft_cyclic4=gam(co2~s(DateNum)+sin(month/12*2*pi)+cos(month/12*2*pi)+        sin(month/12*4*pi)+cos(month/12*4*pi) +        + sin(month/12*6*pi)+cos(month/12*6*pi)+          sin(month/12*8*pi)+cos(month/12*8*pi), data=maunaloa) par(mfrow=c(1,2)) plot(residuals(ft_cyclic4)~maunaloa$Date,type=\"l\", xlab=\"Time\") plot(residuals(ft_cyclic4)~sin(maunaloa$month/12*2*pi),        type=\"l\",xlab=\"Season\") BIC(ft_cyclic,ft_cyclic2,ft_cyclic3,ft_cyclic4) #>                  df      BIC #> ft_cyclic  12.85033 1773.254 #> ft_cyclic2 14.93624 1135.151 #> ft_cyclic3 16.93686 1138.438 #> ft_cyclic4 18.93753 1141.922"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-7-mauna-loa-annual-data-temporal-autocorrelation","dir":"Articles","previous_headings":"","what":"Exercise 8.7: Mauna Loa annual data – temporal autocorrelation?}","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"Consider annual Mauna Loa monthly data Code Box 8.1, uses measurements January … evidence temporal autocorrelation dataset?   isn’t really autocorrelation signal – lags represent years now rather months, consecutive years (lag 1) correlation less 0.1 looks like much happening. mixed effects model doesn’t really much . estimated autocorrelation surprisingly large given (0.26) much smaller monthly analysis (0.76) decays negligible levels quickly (correlation two years 0.26^2=0.07).","code":"maunaJan = maunaloa[maunaloa$month==1,] ft_gammJan = gamm(co2~s(year),correlation=corAR1(), data=maunaJan) acf(residuals(ft_gammJan$gam)) acf(residuals(ft_gammJan$lme,type=\"normalized\")) ft_gammJan$lme #> Linear mixed-effects model fit by maximum likelihood #>   Data: strip.offset(mf)  #>   Log-likelihood: -51.70909 #>   Fixed: y ~ X - 1  #> X(Intercept)  Xs(year)Fx1  #>     356.6783      29.9981  #>  #> Random effects: #>  Formula: ~Xr - 1 | g #>  Structure: pdIdnot #>              Xr1      Xr2      Xr3      Xr4      Xr5      Xr6      Xr7      Xr8 #> StdDev: 14.15851 14.15851 14.15851 14.15851 14.15851 14.15851 14.15851 14.15851 #>          Residual #> StdDev: 0.4428823 #>  #> Correlation Structure: AR(1) #>  Formula: ~1 | g  #>  Parameter estimate(s): #>       Phi  #> 0.2638297  #> Number of Observations: 63 #> Number of Groups: 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter8Solutions.html","id":"exercise-8-8-aspect-as-a-predictor-of-species-richness","dir":"Articles","previous_headings":"","what":"Exercise 8.8: Aspect as a predictor of species richness","title":"Chapter 8 -- Wiggly Models -- Exercise solutions and Code Boxes","text":"Consider Ian’s species richness data… enter aspect model? cyclical variable add cos sin terms model. seems entered degrees period 360. Maybe can consider two harmonics try account non-sinusoidal response. keep soil, temperature rainfall variables previously: looks like isn’t really aspect signal data, BIC much smaller without aspect terms model. Recall species richness spatial structure . Refit model using gls function nlme package account spatially structured correlation. change inferences aspect appreciable way? Well won’t change inferences ignoring spatial correlation risks giving false confidence importance terms, already decided aspect important. anyway. decided last time around exponential model nugget effect OK: code chunk run, take several minutes: expected, change inference appreciable way!","code":"data(Myrtaceae) summary(Myrtaceae$aspect) #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>   0.0652  91.0725 176.0736 181.5191 271.8024 359.8948 data(Myrtaceae) Myrtaceae$logrich=log(Myrtaceae$richness+1) ft_richAsp = lm(logrich~soil+poly(TMP_MAX,degree=2)+      poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2)+                cos(aspect*2*pi/360)+sin(aspect*2*pi/360)+cos(aspect*4*pi/360)+sin(aspect*4*pi/360),      data=Myrtaceae) ft_richAdd = lm(logrich~soil+poly(TMP_MAX,degree=2)+      poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2), data=Myrtaceae) BIC(ft_richAsp,ft_richAdd) #>            df      BIC #> ft_richAsp 20 1026.860 #> ft_richAdd 16 1002.806 library(nlme) ft_richNugg = gls(logrich~soil+poly(TMP_MAX,degree=2)+poly(TMP_MIN,degree=2)+        poly(RAIN_ANN,degree=2),data=Myrtaceae,          correlation=corExp(form=~X+Y,nugget=TRUE)) ft_richAspNugg = gls(logrich~soil+poly(TMP_MAX,degree=2)+poly(TMP_MIN,degree=2)+        poly(RAIN_ANN,degree=2)+ cos(aspect*2*pi/360)+sin(aspect*2*pi/360)+cos(aspect*4*pi/360)+sin(aspect*4*pi/360),data=Myrtaceae,          correlation=corExp(form=~X+Y,nugget=TRUE)) BIC(ft_richNugg) BIC(ft_richAspNugg)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-1-smoking-in-pregnancy","dir":"Articles","previous_headings":"","what":"Exercise 9.1: Smoking in pregnancy","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"Consider guinea pig experiment… can make inferences treatment effect, without assuming normality? Design-based inference allows us relax distributional assumptions. Specifically, use permutation test Code Box 9.1, bootstrap test Code Box 9.3, assume normality.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-2-three-example-permutations-of-treatment-labels-in-the-guinea-pig-data","dir":"Articles","previous_headings":"","what":"Exercise 9.2: Three example permutations of treatment labels in the guinea pig data","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"observed statistic 2.67 seem large compared values? tell ? three statistics obtained permuting data 0.76, -2.09 -1.08. smaller 2.67, suggesting 2.67 unusually large compared expect treatment effect. However, say something precise unusual many permutations…","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-behind-figure-9-1","dir":"Articles","previous_headings":"","what":"Code behind Figure 9.1","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"plot chunk fig91","code":"library(ecostats) data(guineapig) ft_guinea = lm(errors~treatment,data=guineapig) tObs = summary(ft_guinea)$coef[2,3] #store observed t-statistic  nPerm = 1000 tStats = rep(NA,nPerm) tStats[1] = tObs for(iPerm in 2:nPerm) {   guineapig$treatPerm = sample(guineapig$treatment) #permute treatment labels   ft_guineaPerm = lm(errors~treatPerm,data=guineapig) #re-fit model   tStats[iPerm] = summary(ft_guineaPerm)$coef[2,3] #store t-stat } par(cex=1.2,lwd=1.5) hist(tStats,main=\"Null distribution of t under permutation\",xlab=\"t\") abline(v=tObs,col=\"red\") #put a red line on plot for observed t-stat p = mean( tStats >= tObs ) #compute P-value print(p) #> [1] 0.01"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-1-a-permutation-test-for-the-guinea-pig-data-using-mvabund","dir":"Articles","previous_headings":"","what":"Code Box 9.1: A permutation test for the guinea pig data using mvabund","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"","code":"library(mvabund) data(guineapig) ft_guinea = manylm(errors~treatment,data=guineapig) anova(ft_guinea) #> Analysis of Variance Table #>  #> Model: manylm(formula = errors ~ treatment, data = guineapig) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)   #> (Intercept)     19                         #> treatment       18       1  7.134  0.016 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-2-permutation-test-for-a-relationship-between-latitude-and-plant-height","dir":"Articles","previous_headings":"","what":"Code Box 9.2: Permutation test for a relationship between latitude and plant height","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"","code":"data(globalPlants) ft_height = manylm(height~lat, data=globalPlants) anova(ft_height) #> Analysis of Variance Table #>  #> Model: manylm(formula = height ~ lat, data = globalPlants) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)    130                          #> lat            129       1  9.271  0.007 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-3-using-the-mvabund-package-for-a-bootstrap-test-of-guinea-pig-data","dir":"Articles","previous_headings":"","what":"Code Box 9.3: Using the mvabund package for a bootstrap test of guinea pig data","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"","code":"library(mvabund) ft_guinea = manylm(errors~treatment, data=guineapig) anova(ft_guinea, resamp=\"residual\") #> Analysis of Variance Table #>  #> Model: manylm(formula = errors ~ treatment, data = guineapig) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)   #> (Intercept)     19                         #> treatment       18       1  7.134  0.013 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-3-case-resampling-in-the-guinea-pig-data","dir":"Articles","previous_headings":"","what":"Exercise 9.3: Case resampling in the guinea pig data","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"can… resample cases… three examples. C N N N C N N C N N C C N N C C N N N N 10 33 28 33 47 66 33 26 63 66 36 20 38 28 35 15 66 33 43 26 N N N N C N N N N N C C C C N C C C N C 33 89 34 89 35 43 38 33 23 63 10 26 11 10 43 47 10 19 66 35 N N C C N N N C N C N C N N N C C C C C 66 66 19 47 63 43 43 20 33 15 28 26 89 38 43 47 20 20 11 20 Count number Controls case resampled dataset. get number expected ? OK first one 8 Control sites, second one 9 Control sites, third 10 Control sites. expected sense original study planned 10 Control 10 Treatment guinea pigs, messed design case resampling :(","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-4-global-plant-height-does-rainfall-explain-latitude-effect","dir":"Articles","previous_headings":"","what":"Exercise 9.4: Global plant height – does rainfall explain latitude effect?","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"wants know: latitude explain variation plant height beyond due rainfall? model fitted null hypothesis? include predictor variables? model null hypothesis, Code Box, includes rainfall: want see significant additional variation plant height explained latitude, beyond explained rainfall.","code":"ft_heightR=lm(height~rain, data=globalPlants)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-4-residual-resampling-using-mvabund-for-exercise-9-4-","dir":"Articles","previous_headings":"","what":"Code Box 9.4: Residual resampling using mvabund for Exercise 9.4.","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"","code":"ft_heightRL=manylm(height~rain+lat, data=globalPlants) anova(ft_heightRL, resamp=\"perm.resid\") #> Analysis of Variance Table #>  #> Model: manylm(formula = height ~ rain + lat, data = globalPlants) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)    130                          #> rain           129       1 20.983  0.002 ** #> lat            128       1  0.429  0.515    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-5-plant-height-data-checking-assumptions","dir":"Articles","previous_headings":"","what":"Code Box 9.5: Plant height data – checking assumptions","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"(Note plotenvelope run just 99 iterations save compilation time)","code":"ft_heightRLlm = lm(height~lat, data=globalPlants) plotenvelope(ft_heightRLlm, n.sim=99)"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-5-plant-height-data-log-transformation","dir":"Articles","previous_headings":"","what":"Exercise 9.5: Plant height data – log transformation","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"Refit linear model plant height data, available globalPlants dataset ecostats package, using log-transformation response. Use residual resampling test effect latitude controlling effect rainfall.  results compare analysis without log-transformation? Now test statistics larger significant (guess can better see signal data closer satisfying assumptions). results compare got used model-based inference, applying anova lm function? expected? Results nearly identical, expected, weren’t violations distributional assumptions might warranted resampling.","code":"globalPlants$loght = log(globalPlants$height) ft_loghtRL=manylm(loght~rain+lat, data=globalPlants) anova(ft_loghtRL, resamp=\"perm.resid\") #> Analysis of Variance Table #>  #> Model: manylm(formula = loght ~ rain + lat, data = globalPlants) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)    130                          #> rain           129       1  32.01  0.002 ** #> lat            128       1   9.62  0.002 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling. ft_loghtRLlm = lm(loght~rain+lat, data=globalPlants) plotenvelope(ft_loghtRLlm, n.sim=99) anova(ft_loghtRLlm) #> Analysis of Variance Table #>  #> Response: loght #>            Df  Sum Sq Mean Sq F value    Pr(>F)     #> rain        1  70.761  70.761 34.1497 3.989e-08 *** #> lat         1  19.934  19.934  9.6203  0.002368 **  #> Residuals 128 265.226   2.072                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-6-guinea-pig-data-log-transformation","dir":"Articles","previous_headings":"","what":"Exercise 9.6: Guinea pig data – log transformation","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"Log-transform number errors check assumptions. better satisfy assumptions model untransformed data?  looks lot better. Standard deviations similar now, obvious non-normal trend quantile plot. Repeat permutation test Code Box 9.2 log-transformed data. results compare analysis without log-transformation? expected happen? Results similar, test statistic slightly larger slightly significant. expected fitting model data closer satisfying assumptions, work better clearly see signal data.","code":"data(guineapig) guineapig$logErrors = log(guineapig$errors) ft_guineaLog = lm(logErrors~treatment,data=guineapig) plotenvelope(ft_guineaLog, n.sim=99) by(guineapig$logErrors,guineapig$treatment,sd) #> guineapig$treatment: C #> [1] 0.521912 #> ----------------------------------------------------------------------  #> guineapig$treatment: N #> [1] 0.445521 library(mvabund) ftMany_guineaLog = manylm(logErrors~treatment,data=guineapig) anova(ftMany_guineaLog) #> Analysis of Variance Table #>  #> Model: manylm(formula = logErrors ~ treatment, data = guineapig) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)     19                          #> treatment       18       1  9.434  0.006 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-7-revisiting-linear-models-past","dir":"Articles","previous_headings":"","what":"Exercise 9.7: Revisiting linear models past","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"Go back couple linear models (fixed effects terms ) previously fitted, e.g. exercises Chapter 4, reanalyse using (residual) resampling inference.","code":""},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"repeating-exercise-4-9","dir":"Articles","previous_headings":"Exercise 9.7: Revisiting linear models past","what":"Repeating Exercise 4.9:","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"Repeating using resampling: results work differently? expected? (Think sample size normality assumption.) P-values pretty much , expected, didn’t concerns normality sample size big enough CLT deal concerns anyway. confidence intervals identical, computed way irrespective resampling.","code":"data(snowmelt)  snowmelt$logFlow = log(snowmelt$flow)  snowmelt$logFlow[snowmelt$logFlow==-Inf]=NA  snowReduced = na.omit(snowmelt[,c(\"logFlow\",\"snow\",\"elev\")]) #this line not normally needed, lm can handle NA's, but seems needed because of a weird conflict with MCMCglmm code in Chapter 11 solutions  ft_logsnow = lm(logFlow~elev+snow, data=snowReduced)  plotenvelope(ft_logsnow, n.sim=99) summary(ft_logsnow) #>  #> Call: #> lm(formula = logFlow ~ elev + snow, data = snowReduced) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.90161 -0.15794  0.02338  0.15834  1.08662  #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  3.8805208  0.3193019  12.153  < 2e-16 *** #> elev         0.0003357  0.0001226   2.739  0.00651 **  #> snow        -0.0103172  0.0007551 -13.663  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.2909 on 316 degrees of freedom #> Multiple R-squared:  0.3774, Adjusted R-squared:  0.3735  #> F-statistic: 95.78 on 2 and 316 DF,  p-value: < 2.2e-16  confint(ft_logsnow) #>                     2.5 %        97.5 % #> (Intercept)  3.252294e+00  4.5087472418 #> elev         9.457986e-05  0.0005768232 #> snow        -1.180299e-02 -0.0088315037 library(mvabund) mft_logsnow = manylm(logFlow~elev+snow, data=snowReduced) summary(mft_logsnow) #>  #> Test statistics: #>             F value Pr(>F)     #> (Intercept) 147.699  0.001 *** #> elev          7.503  0.007 **  #> snow        186.668  0.001 *** #> ---  #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #> Arguments: with 999 resampling iterations using residual resampling and response assumed to be uncorrelated  #>  #> Hooper's R-squared: 0.3774  #>  #> Lawley-Hotelling trace statistic:  95.78, p-value: 0.001  #> Arguments: with 999 resampling iterations using residual resampling and response assumed to be uncorrelated confint(mft_logsnow) #>                             2.5 %        97.5 % #> logFlow:(Intercept)  3.252294e+00  4.5087472418 #> logFlow:elev         9.457986e-05  0.0005768232 #> logFlow:snow        -1.180299e-02 -0.0088315037"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"now-repeating-exercise-4-10","dir":"Articles","previous_headings":"Exercise 9.7: Revisiting linear models past","what":"Now repeating Exercise 4.10:","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"looks fairly similar, test statistic bit different (equivalent) significance levels generally similar. slightly movement P-values last time, may related sample size smaller (fact residual degrees freedom 6.)","code":"data(aphidsBACI) lm_aphids = lm(logcount~Plot+Time+Treatment:Time,data=aphidsBACI) anova(lm_aphids) #> Analysis of Variance Table #>  #> Response: logcount #>                Df Sum Sq Mean Sq F value   Pr(>F)    #> Plot            7 0.8986  0.1284  0.4603 0.833357    #> Time            1 5.4675  5.4675 19.6038 0.004434 ** #> Time:Treatment  1 0.7397  0.7397  2.6522 0.154527    #> Residuals       6 1.6734  0.2789                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 mlm_aphids = manylm(logcount~Plot+Time+Treatment:Time,data=aphidsBACI) anova(mlm_aphids) #> Analysis of Variance Table #>  #> Model: manylm(formula = logcount ~ Plot + Time + Treatment:Time, data = aphidsBACI) #>  #> Overall test for all response variables #> Test statistics: #>                Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)        15                          #> Plot                8       7  0.130  0.989    #> Time                7       1 15.860  0.010 ** #> Time:Treatment      6       2  1.105  0.166    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-6-block-resampling-using-mvabund-for-estuary-data","dir":"Articles","previous_headings":"","what":"Code Box 9.6: Block resampling using mvabund for estuary data","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"","code":"data(estuaries)   ft_estLM = manylm(Total~Mod,data=estuaries)   anova(ft_estLM,resamp=\"case\",block=estuaries$Estuary) #> Using block resampling... #> Analysis of Variance Table #>  #> Model: manylm(formula = Total ~ Mod, data = estuaries) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F) #> (Intercept)     41                       #> Mod             40       1  9.916  0.454 #> Arguments: P-value calculated using 999 iterations via case block resampling."},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-7-block-resampling-using-permute-for-raven-data","dir":"Articles","previous_headings":"","what":"Code Box 9.7: Block resampling using permute for raven data","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"results compare got previously (Code Box 4.2), using model-based inference? getting almost P-value time effect. Interestingly, get different P-value site effect. resampling strategy used permuted data within sites permute data across sites – give valid test site effect, hence site P-value permutation test valid.","code":"data(ravens) crowGun = ravens[ravens$treatment == 1,] library(reshape2) crowLong = melt(crowGun,measure.vars = c(\"Before\",\"After\"),     variable.name=\"time\",value.name=\"ravens\")  library(permute) CTRL = how(blocks=crowLong$site) permIDs = shuffleSet(24,nset=999,control=CTRL) #> Set of permutations < 'minperm'. Generating entire set. ravenlm = manylm(ravens~site+time,data=crowLong) anova(ravenlm,bootID=permIDs) #> Using <int> bootID matrix from input. #> Analysis of Variance Table #>  #> Model: manylm(formula = ravens ~ site + time, data = crowLong) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)   #> (Intercept)     23                         #> site            12      11   3.27  0.991   #> time            11       1   6.76  0.021 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 999 iterations via residual (without replacement) resampling. ravenlm = lm(ravens~site+time,data=crowLong) anova(ravenlm) #> Analysis of Variance Table #>  #> Response: ravens #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> site      11 55.458  5.0417    4.84 0.007294 ** #> time       1  7.042  7.0417    6.76 0.024694 *  #> Residuals 11 11.458  1.0417                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-8-moving-block-bootstrap-test-for-species-richness-modelling","dir":"Articles","previous_headings":"","what":"Code Box 9.8: Moving block bootstrap test for species richness modelling","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"(Note BlockBootID set generate 99 bootstrap samples save compilation time, use practice.) compare get just used model-based inference, using lm function? Everything highly significant , much less using moving block bootstrap. probably partly data spatially autocorrelated, seeing false significance lm results dependence observations hasn’t accounted . difference results quite extreme (considering spatial signal wasn’t super-strong) moving block bootstrap maybe overly conservative .","code":"data(Myrtaceae) # fit a lm: Myrtaceae$logrich=log(Myrtaceae$richness+1) mft_richAdd = manylm(logrich~soil+poly(TMP_MAX,degree=2)+                       poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2),                                          data=Myrtaceae)                                           # construct a boot ID matrix:  BootID = BlockBootID(x = Myrtaceae$X, y = Myrtaceae$Y, block_L = 20,              nBoot = 99, Grid_space = 5) anova(mft_richAdd,resamp=\"case\",bootID=BootID) #> Using <int> bootID matrix from input. #> Analysis of Variance Table #>  #> Model: manylm(formula = logrich ~ soil + poly(TMP_MAX, degree = 2) +  #> Model:     poly(TMP_MIN, degree = 2) + poly(RAIN_ANN, degree = 2), data = Myrtaceae) #>  #> Overall test for all response variables #> Test statistics: #>                            Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)                   999                          #> soil                          991       8 11.971   0.63    #> poly(TMP_MAX, degree = 2)     989       2 18.244   0.01 ** #> poly(TMP_MIN, degree = 2)     987       2 17.533   0.46    #> poly(RAIN_ANN, degree = 2)    985       2  8.208   0.99    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Arguments: P-value calculated using 99 iterations via case resampling. ft_richAdd = lm(logrich~soil+poly(TMP_MAX,degree=2)+                       poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2),                                          data=Myrtaceae) anova(ft_richAdd) #> Analysis of Variance Table #>  #> Response: logrich #>                             Df  Sum Sq Mean Sq F value    Pr(>F)     #> soil                         8  15.075 1.88438 12.9887 < 2.2e-16 *** #> poly(TMP_MAX, degree = 2)    2   5.551 2.77533 19.1299 7.068e-09 *** #> poly(TMP_MIN, degree = 2)    2   5.162 2.58082 17.7892 2.573e-08 *** #> poly(RAIN_ANN, degree = 2)   2   2.382 1.19081  8.2081 0.0002915 *** #> Residuals                  985 142.902 0.14508                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"code-box-9-9-moving-block-bootstrap-standard-errors-for-species-richness-predictions","dir":"Articles","previous_headings":"","what":"Code Box 9.9: Moving block bootstrap standard errors for species richness predictions","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"expected see? bootstrapped standard errors account spatial autocorrelation data, whereas lm standard errors . effect ignoring spatial autocorrelation tends false confidence results – P-values standard errors small. P-values small Code Box 9.8, see standard errors tend small (although couple bigger). average, 25% bigger (less expected given happened P-values).","code":"ft_richAdd = lm(logrich~soil+poly(TMP_MAX,degree=2)+           poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2),           data=Myrtaceae) nBoot=nrow(BootID) predMat = matrix(NA,length(Myrtaceae$logrich),nBoot) for(iBoot in 1:nBoot) {    ids = BootID[iBoot,]    ft_i = update(ft_richAdd,data=Myrtaceae[ids,])    predMat[ids,iBoot] = predict(ft_i)  } bootSEs = apply(predMat,1,sd,na.rm=TRUE) lmSEs   = predict(ft_richAdd,se.fit=TRUE)$se.fit cbind(bootSEs,lmSEs)[1:10,] #>          bootSEs      lmSEs #>  [1,] 0.04082675 0.02982530 #>  [2,] 0.03986889 0.02396074 #>  [3,] 0.04403786 0.02853756 #>  [4,] 0.05468778 0.03348368 #>  [5,] 0.06589231 0.06279115 #>  [6,] 0.03676736 0.03413518 #>  [7,] 0.05445444 0.02808283 #>  [8,] 0.07245802 0.08272950 #>  [9,] 0.03751627 0.02759009 #> [10,] 0.05979565 0.06622908"},{"path":"https://dwarton.github.io/ecostats/articles/Chapter9Solutions.html","id":"exercise-9-8-does-block-length-matter","dir":"Articles","previous_headings":"","what":"Exercise 9.8: Does block length matter?","title":"Chapter 9 -- Design-based inference -- Exercise solutions and Code Boxes","text":"Ian’s species richness data, compute standard errors using different block sizes (say 5km, 10km, 20km, 40km) compare. take run – first three lines take three times long relevant line Code Box 9.8 :( results change, changed block size? Yep, standard errors tend getting bit bigger block size increases Compute mean standard errors block size. trend? mean standard errors predictions tends getting bigger block size increases. makes sense increasing block size effectively reducing sample size, reducng number units spatial domain considered independent.","code":"bootSEall = matrix(NA,length(bootSEs),4) block_Ls=c(5,10,20,40) colnames(bootSEall)=block_Ls bootSEall[,3]=bootSEs #we already did block length 20 in Code Box 9.9 for (iLength in c(1,2,4)) {   BootIDi = BlockBootID(x = Myrtaceae$X, y = Myrtaceae$Y, block_L = block_Ls[iLength],              nBoot = 99, Grid_space = 5)   predMat = matrix(NA,length(Myrtaceae$logrich),nBoot)   for(iBoot in 1:nBoot)   {      ids = BootIDi[iBoot,]      ft_i = update(ft_richAdd,data=Myrtaceae[ids,])      predMat[ids,iBoot] = predict(ft_i)    }   bootSEall[,iLength] = apply(predMat,1,sd,na.rm=TRUE) } head(bootSEall) #>               5         10         20         40 #> [1,] 0.03136087 0.03698810 0.04082675 0.03107856 #> [2,] 0.02522205 0.02535885 0.03986889 0.03010555 #> [3,] 0.03652481 0.04242889 0.04403786 0.04725079 #> [4,] 0.03222793 0.03755962 0.05468778 0.05101881 #> [5,] 0.07821894 0.08720262 0.06589231 0.07060333 #> [6,] 0.03289217 0.03984379 0.03676736 0.03969544 apply(bootSEall,2,mean,na.rm=TRUE) #>          5         10         20         40  #> 0.04553464 0.04883025 0.05420780 0.05147955"},{"path":"https://dwarton.github.io/ecostats/articles/ecostats.html","id":"simulation-envelopes-in-plots","dir":"Articles","previous_headings":"","what":"Simulation envelopes in plots","title":"Eco-Stats -- Code and Data Accompanying the Eco-Stats Text","text":"command plotenvelope take fitted object construct standard residual plots global envelopes added around points (quantile plots) around smoothers (residual plots), constructed via simulation. constructed using GET package global envelopes, important interpretation – means model assumptions correct, 95% quantile plot envelopes (confidence level 95%) contain data (smoother) whole plot. (Pointwise envelopes easier construct, much harder interpret don’t control chance missing data globally, across whole plot. 95% pointwise envelope, constructed assumptions satisfied, might example miss data 60% time.) plotenvelope work lots different types fitted objects – pretty much anything comes simulate function behaves standard way. simulate.mlm simulate.manyglm functions written package specifically plotenvelope also works multivariate models fitted using lm mvabund::manyglm.  mlm objects, function compute conditional residuals fitted values, , computed response conditional responses observed, via cpredict cresiduals functions. done full conditionals distribution known diagnostic joint distributions, hence violation multivariate normality assumption expressed violation assumptions full conditional models. full conditionals well-known follow linear model, function responses well predictors. qqenvelope function can applied normal quantile plot, global envelope, either fitted model sample data:","code":"library(ecostats) #> Loading required package: mvabund data(iris) Y = with(iris, cbind(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width)) iris.mlm=lm(Y~Species,data=iris) # check normality assumption: par(mfrow=c(1,2),mar=c(3,3,1,1),mgp=c(1.75,0.75,0)) plotenvelope(iris.mlm,n.sim=199) y=rnorm(20) qqenvelope(y)"},{"path":"https://dwarton.github.io/ecostats/articles/ecostats.html","id":"anova-tests-using-a-parametric-bootstrap","dir":"Articles","previous_headings":"","what":"anova tests using a parametric bootstrap","title":"Eco-Stats -- Code and Data Accompanying the Eco-Stats Text","text":"command anovaPB computes analysis variance (deviance) tables two fitted model objects, \\({P}\\)-value estimated using parametric bootstrap – repeatedly simulating new responses fitted model null hypothesis. work lots different types fitted objects – like plotenvelope, work pretty much anything comes simulate function behaves standard way. fitted models also need respond either anova logLik. interface written lot like anova, requires two fitted objects specified – first fit null hypothesis, second fit alternative.","code":"# generate random Poisson data and a predictor: y = rpois(50,lambda=1) x = 1:50 # fit a Poisson regressions with and without x: rpois_glm = glm(y~x,family=poisson()) rpois_int = glm(y~1,family=poisson()) # use the parametric bootstrap to test for an effect of x (will usually be non-significant) anovaPB(rpois_int,rpois_glm,n.sim=99) #> Analysis of Deviance Table #>  #> Model 1: y ~ 1 #> Model 2: y ~ x #>   Resid. Df Resid. Dev Df Deviance      #> 1        49     51.637                  #> 2        48     50.932  1  0.70466 0.43"},{"path":"https://dwarton.github.io/ecostats/articles/ecostats.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"Eco-Stats -- Code and Data Accompanying the Eco-Stats Text","text":"datasets used Eco-Stats text, available elsewhere, supplied package. example:","code":"data(aphids)  cols=c(rgb(1,0,0,alpha=0.5),rgb(0,0,1,alpha=0.5)) #transparent colours  with(aphids$oat, interaction.plot(Time,Plot,logcount,legend=FALSE,                                 col=cols[Treatment], lty=1, ylab=\"Counts [log(y+1) scale]\",                                 xlab=\"Time (days since treatment)\") )  legend(\"bottomleft\",c(\"Excluded\",\"Present\"),col=cols,lty=1)"},{"path":"https://dwarton.github.io/ecostats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Warton. Author, maintainer. Christopher Chung. Contributor. Mark Donoghoe. Contributor. Eve Slavich. Contributor.","code":""},{"path":"https://dwarton.github.io/ecostats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Warton D (2022). ecostats: Code Data Accompanying Eco-Stats Text (Warton 2022). R package version 1.1.11, https://dwarton.github.io/ecostats/.","code":"@Manual{,   title = {ecostats: Code and Data Accompanying the Eco-Stats Text (Warton 2022)},   author = {David Warton},   year = {2022},   note = {R package version 1.1.11},   url = {https://dwarton.github.io/ecostats/}, }"},{"path":"https://dwarton.github.io/ecostats/index.html","id":"ecostats-","dir":"","previous_headings":"","what":"Code and Data Accompanying the Eco-Stats Text (Warton 2022)","title":"Code and Data Accompanying the Eco-Stats Text (Warton 2022)","text":"Code + Data Accompanying Eco-Stats Text","code":""},{"path":"https://dwarton.github.io/ecostats/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Code and Data Accompanying the Eco-Stats Text (Warton 2022)","text":"David Warton","code":""},{"path":"https://dwarton.github.io/ecostats/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Code and Data Accompanying the Eco-Stats Text (Warton 2022)","text":"LGPL (>= 2.1)","code":""},{"path":"https://dwarton.github.io/ecostats/index.html","id":"installation","dir":"","previous_headings":"License","what":"Installation","title":"Code and Data Accompanying the Eco-Stats Text (Warton 2022)","text":"can get latest version ecostats CRAN: want access development version, latest bells whistles (applicable), can installed GitHub using devtools package:","code":"install.packages(\"ecostats\") library(ecostats) devtools::install_github('dwarton/ecostats', ref='main') library(ecostats)"},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a moving block bootstrap resampling scheme — BlockBootID","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"spatial moving block bootstrap resampling scheme constructed, can used resampling-based inference (e.g. using anova.manyglm). Blocks constructed discs tiles observations user-specified size shape.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"","code":"BlockBootID(   x,   y,   block_L,   nBoot = 499,   Grid_space,   lookuptables.folderpath = NA,   shape = \"disc\",   ... )"},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"x easting spatial coordinate site. y northing spatial coordinate site. block_L size spatial blocks resampled. nBoot number resamples required (defaults 499). Grid_space resolution lattice used sample centres spatial blocks. Defaults third resolution block_Ls. lookuptables.folderpath (optional) path directory lookup tables can found assign observations spatial blocks. tables considerably speed process. shape shape spatial blocks resample. Default disc, square  tiles can also specified. ... additional arguments passed resample_blocks_by_area.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"matrix IDs moving block bootstrap resample, different resamples rows observations columns.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"spatial moving block bootstrap resampling scheme constructed, can used resampling-based inference. matrix IDs returned, different resamples  different rows matrix, can used input functions designed  resampling-based inference (anova.manyglm). Blocks constructed discs tiles observations, whose size controlled blockl_L, blocks kept together resampling. centre block chosen  random along lattice specified via Grid_space. computationally intensive part process working observations  belong blocks. repeated analyses undertaken spatial domain  using sites, best run process save result set lookup tables. path directory containing tables specified via lookuptables.folderpath whole thing runs heaps faster.","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"Eve Slavich <eve.slavich@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/BlockBootID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a moving block bootstrap resampling scheme — BlockBootID","text":"","code":"# \\donttest{ data(Myrtaceae) # fit a lm: library(mvabund) Myrtaceae$logrich=log(Myrtaceae$richness+1) mft_richAdd = manylm(logrich~soil+poly(TMP_MAX,degree=2)+                      poly(TMP_MIN,degree=2)+poly(RAIN_ANN,degree=2),                                         data=Myrtaceae)                                          # construct a boot ID matrix:  BootID = BlockBootID(x = Myrtaceae$X, y = Myrtaceae$Y, block_L = 20,             nBoot = 199, Grid_space = 5) anova(mft_richAdd,resamp=\"case\",bootID=BootID) #> Using <int> bootID matrix from input.  #> Analysis of Variance Table #>  #> Model: manylm(formula = logrich ~ soil + poly(TMP_MAX, degree = 2) +  #> Model:     poly(TMP_MIN, degree = 2) + poly(RAIN_ANN, degree = 2), data = Myrtaceae) #>  #> Overall test for all response variables #> Test statistics: #>                            Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)                   999                          #> soil                          991       8 11.971  0.640    #> poly(TMP_MAX, degree = 2)     989       2 18.244  0.005 ** #> poly(TMP_MIN, degree = 2)     987       2 17.533  0.550    #> poly(RAIN_ANN, degree = 2)    985       2  8.208  0.480    #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> Arguments: P-value calculated using 199 iterations via case resampling. #>  # }"},{"path":"https://dwarton.github.io/ecostats/reference/Myrtaceae.html","id":null,"dir":"Reference","previous_headings":"","what":"Species richness of Myrtaceae plants — Myrtaceae","title":"Species richness of Myrtaceae plants — Myrtaceae","text":"Data derived NSW National Parks Wildlife Service resources species richness members  Myrtaceae family (eucalypts relates species) 1000 monitoring transects west Sydney Greater Blue Mountains World Heritage Area. Also included soil type classified 9 categories, climate variables derived Worldclim.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/Myrtaceae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species richness of Myrtaceae plants — Myrtaceae","text":"","code":"data(Myrtaceae)"},{"path":"https://dwarton.github.io/ecostats/reference/Myrtaceae.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species richness of Myrtaceae plants — Myrtaceae","text":"dataframe containing (amongst things): X Easting site (km). Y Nothing site (km). richness Total number Mrtaceae species observed site. TMP_MAX Annual average daily maximum temperature (degrees Celsius). TMP_MIN Annual average daily minimum temperature (degrees Celsius). RAIN_ANN Annual precipitation (millimetres). soil Soil type, classified nine categories. aspect Aspect site (degrees, 0=360=due North).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/Myrtaceae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species richness of Myrtaceae plants — Myrtaceae","text":"","code":"data(Myrtaceae) library(ggplot2) ggplot(Myrtaceae, aes(x=X, y=Y))+geom_point(aes(color=richness))+   theme_classic()+xlab(\"West<-->East (km)\")+ylab(\"South<-->North (km)\")+   scale_color_gradient(low=\"lightgreen\",high=\"black\")+   labs(color=\"Species richness [log(y+1)-scale]\")+theme(legend.position=\"top\")+   guides(color = guide_colorbar(title.position = \"top\",ticks=FALSE,                                barwidth=15,barheight=0.5))+coord_fixed()"},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":null,"dir":"Reference","previous_headings":"","what":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"Adds smoother plot y x, confidence band around smoother pointwise coverage (global, unlike plotenvelope). smoother constructed using gam confidence bands use Wald intervals, extracting standard error predict.gam.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"","code":"addSmooth(   x,   y,   conf.level = 0.05,   line.col = \"slateblue4\",   envelope.col = adjustcolor(line.col, alpha.f = 0.1),   ... )"},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"x x co-ordinates plot, e.g. fitted values plot residuals vs fitted values. y y co-ordinates plot conf.level confidence level use constructing confidence band around smoother. line.col color smoother. Defaults \"slateblue4\". envelope.col color global envelope around expected trend. data points always stay within envelope (proportion conf.level datasets satisfying model assumptions). smoother used residual vs fits scale-location plot, envelope constructed around smoother, , smoother always stay within envelope. ... arguments sent lines polygon.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"smoother added existing plot, confidence band. addition, data frame invisibly returned following components: X values x smoother evaluated. Yhat Values smoother used predict y, value x. Yhi upper bound confidence band, value x. Ylo lower bound global envelope, value x.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"challenge interpreting diagnostic plots understanding extent deviations expected pattern due random noise (sampling variation) rather actual assumption violations. function intended assess ,  simulating multiple realizations residuals (fitted values) situations  assumptions satisfied, plotting global simulation envelope around level conf.level. function adds smoother plot y x using gam, confidence band  around smoother pointwise coverage (global, unlike plotenvelope) using Wald intervals take standard error predicted values predict.gam. constructing plot diagnose model fit, plotenvelope preferred, constructs simulation envelopes globally, simplifying interpretation, tends give accurate envelopes, via simulation. function intended fit trends data descriptive purposes, used (caution)  diagnose model fit residual plots situations plotenvelope unavailable.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"Warton DI (2022) Eco-Stats - Data Analysis Ecology, t-tests multivariate abundances. Springer, ISBN 978-3-030-88442-0","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/addSmooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"addSmooth Add a smoother to a plot, with pointwise confidence band — addSmooth","text":"","code":"data(globalPlants) plot(log(height)~lat,data=globalPlants) with(globalPlants, addSmooth(lat,log(height)) )"},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"Compute analysis variance (deviance) tables two fitted model objects, P-value estimated using parametric bootstrap -- repeatedly simulating new responses fitted model null hypothesis.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"","code":"anovaPB(   objectNull,   object,   n.sim = 999,   colRef = switch(class(object)[1], lm = 5, lmerMod = 6, 4),   rowRef = 2,   ... )"},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"objectNull fitted model null hypothesis. can object responds simulate, update anova. object fitted model alternative hypothesis. can object responds update, anova model.frame. must larger objectNull model frame contain terms required fit objectNull. n.sim number simulated datasets generate parametric bootstrap testing. Defaults 999. colRef column number test statistic interest can found standard anova output calling anova(objectNull,object). Default choices set common models (colRef=5 lm objects, colRef=6 lmer objects colRef=4 otherwise, correct  glm gam objects). rowRef row number test statistic interest can found standard anova output calling anova(objectNull,object). Defaults 2, second row common models. ... arguments sent anova.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"matrix appearance behaviour object returned  anova(objectNull,object), except P-value computed parametric bootstrap, matrix now inherits class anovaPB.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"anova function typically relies classical asymptotic results sometimes apply well, e.g. using penalised likelihood fit generalised additive model, testing whether random effect included mixed model. cases can get accurate test using simulation estimate P-value -- repeatedly simulating  new sets simulated responses, refitting null alternative models,  recomputing test statistic. process allows us estimate  distribution test statistic null hypothesis true, hence  draw conclusion whether observed test statistic large relative expected null hypothesis. process often referred parametric bootstrap (Davison & Hinkley 1997), PB function name (anovaPB) referring . function take pair fitted models, null (objectNull) alternative (object), use simulation estimate  P-value test whether evidence model objectNull favour model object. function works repeatedly performing anova compare objectNull  object, responses model.frame replaced values simulated applying simulate objectNull. Hence function work, objects compared need respond  anova, simulate model.frame functions. function needs able find test statistic anova output, stored different places different types objects. assumed anova(objectNull,object) returns matrix test statistic stored (rowRef,colRef)th element, rowRef colRef chosen correct common model types (glm, gam, lmer).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"Davison .C. & Hinkley D. V. (1997) Bootstrap methods application, Cambridge University Press. Warton DI (2022) Eco-Stats - Data Analysis Ecology, t-tests multivariate abundances. Springer, ISBN 978-3-030-88442-0","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/anovaPB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric bootstrap testing to compare two models by analysis of variance (deviance) — anovaPB","text":"","code":"# fit a Poisson regression to random data: y = rpois(50,lambda=1) x = 1:50 rpois_glm = glm(y~x,family=poisson()) rpois_int = glm(y~1,family=poisson()) anovaPB(rpois_int,rpois_glm,n.sim=99) #> Analysis of Deviance Table #>  #> Model 1: y ~ 1 #> Model 2: y ~ x #>   Resid. Df Resid. Dev Df Deviance      #> 1        49     58.478                  #> 2        48     58.445  1 0.033542 0.85"},{"path":"https://dwarton.github.io/ecostats/reference/aphids.html","id":null,"dir":"Reference","previous_headings":"","what":"Aphid data — aphids","title":"Aphid data — aphids","text":"study effects bird exclusion biological control aphids oat wheat fields  Germany (Grass et al. 2017). Many thanks Ingo providing raw data. two fields (one oats, one wheat) eight plots, four plastic netting  exclude birds, four without. Aphid abundance counted seven different occasions  first 38 weeks following netting. expectation aphid numbers decrease bird  exclusion, important food source tree sparrows aphid predators, hoverflies  ladybird beetles, presence birds may limit effectiveness biological control aphids.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/aphids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aphid data — aphids","text":"","code":"data(aphids)"},{"path":"https://dwarton.github.io/ecostats/reference/aphids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aphid data — aphids","text":"list containing two dataframes, oat wheat, depending crop. dataframe contains: Plot plot ID, factor eight levels Treatment factor indicating whether birds excluded, excluded present. Time number days since netting applied. counts Aphid abundance (counts) logcount log(y+1)-transformed aphid abundance","code":""},{"path":"https://dwarton.github.io/ecostats/reference/aphids.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aphid data — aphids","text":"Grass et al. (2017) Insectivorous birds disrupt biological control cereal aphids. Ecology, 98 1583-90.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/aphids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aphid data — aphids","text":"","code":"data(aphids) cols=c(rgb(1,0,0,alpha=0.5),rgb(0,0,1,alpha=0.5)) #transparent colours with(aphids$oat, interaction.plot(Time,Plot,logcount,legend=FALSE,                                col=cols[Treatment], lty=1, ylab=\"Counts [log(y+1) scale]\",                                xlab=\"Time (days since treatment)\") )                                legend(\"bottomleft\",c(\"Excluded\",\"Present\"),col=cols,lty=1)"},{"path":"https://dwarton.github.io/ecostats/reference/aphidsBACI.html","id":null,"dir":"Reference","previous_headings":"","what":"Aphid data as a BACI design — aphidsBACI","title":"Aphid data as a BACI design — aphidsBACI","text":"subset study effects bird exclusion biological control aphids German oat field (Grass et al. 2017). Many thanks Ingo providing raw data. full data aphids, provide just two sampling times, 3 days 30 days netting. OK, quite BACI design, 3 days netting quite \"\" effects  point negligible... eight plots, four plastic netting exclude birds, four without. Aphid abundance  counted 5 shoots per plot. expectation aphid numbers decrease bird  exclusion, important food source tree sparrows aphid predators, hoverflies  ladybird beetles, presence birds may limit effectiveness biological control aphids.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/aphidsBACI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aphid data as a BACI design — aphidsBACI","text":"","code":"data(aphidsBACI)"},{"path":"https://dwarton.github.io/ecostats/reference/aphidsBACI.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aphid data as a BACI design — aphidsBACI","text":"dataframe containing: Plot plot ID, factor eight levels Treatment factor indicating whether birds excluded, excluded present. Time data sampling (June 18th July 15th, 3 30 days netting, respectively) counts Aphid abundance (counts) logcount log(y+1)-transformed aphid abundance","code":""},{"path":"https://dwarton.github.io/ecostats/reference/aphidsBACI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aphid data as a BACI design — aphidsBACI","text":"Grass et al. (2017) Insectivorous birds disrupt biological control cereal aphids. Ecology, 98 1583-90.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/aphidsBACI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aphid data as a BACI design — aphidsBACI","text":"","code":"data(aphidsBACI) plot(logcount~interaction(Treatment,Time),data=aphidsBACI,col=c(\"lightgreen\",\"pink\"))"},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"Predicted values using full conditional models derived multivariate  linear model (mlm) object. full conditionals model response linear model responses used predictors addition regressors specified formula mlm object.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"","code":"cpredict(object, standardize = TRUE, ...)"},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"object mlm object, typically result calling lm matrix response. standardize logical defaults TRUE, standardising responses comparable across responses. ... arguments passed predict.lm, particular, newdata. However, function written accept non-default values se.fit,  interval terms.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"matrix predicted values full conditional models.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"Predictions using mlm object based full conditional model, , linear model response  function responses  well predictors. can used plots diagnose multivariate  normality assumption. default predictions standardised facilitate overlay plots multiple responses, plotenvelope. function behaves much like predict.lm, currently, standard  errors confidence intervals around predictions available.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"Warton DI (2022) Eco-Stats - Data Analysis Ecology, t-tests multivariate abundances. Springer, ISBN 978-3-030-88442-0","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cpredict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional Predictions for Multivariate Linear Model Fits — cpredict","text":"","code":"data(iris) # fit a mlm: iris.mlm=lm(cbind(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width)~Species,data=iris) # predict each response conditionally on the values of all other responses: cpredict(iris.mlm) #>     Sepal.Length Sepal.Width Petal.Length  Petal.Width #> 1    -1.08736105  1.11990451  -1.30535734 -1.289102302 #> 2    -1.40887637  0.90240104  -1.32330348 -1.426809568 #> 3    -1.38780021  0.73889341  -1.41361199 -1.369307187 #> 4    -1.23704333  0.52215000  -1.43809128 -1.324287689 #> 5    -1.02305799  1.01115277  -1.35051159 -1.244083452 #> 6    -0.58929269  1.64442572  -1.17328586 -1.098807930 #> 7    -1.19253101  0.75627260  -1.43461819 -1.259218023 #> 8    -1.04413414  0.95715694  -1.32983663 -1.276618123 #> 9    -1.47317943  0.35864237  -1.48704987 -1.396925289 #> 10   -1.19617643  0.66827844  -1.36812650 -1.361739254 #> 11   -0.85122496  1.39216387  -1.22158198 -1.228948557 #> 12   -0.93660417  0.68565763  -1.39947018 -1.219115095 #> 13   -1.36800947  0.61352254  -1.39260579 -1.414325713 #> 14   -1.69059938  0.23175138  -1.56668966 -1.449512396 #> 15   -0.98090568  1.98915831  -1.11332732 -1.278884948 #> 16   -0.48283732  2.07867260  -1.12052294 -1.038655157 #> 17   -1.01941257  1.86040907  -1.17328586 -1.228949205 #> 18   -1.12822795  1.30003127  -1.27087180 -1.289102302 #> 19   -0.61272885  1.79055416  -1.09298359 -1.168794489 #> 20   -0.82778879  1.24603543  -1.30188424 -1.158961998 #> 21   -0.82907420  1.28417220  -1.19056953 -1.261482905 #> 22   -0.93295875  1.42616220  -1.25706122 -1.191496993 #> 23   -1.45317787  0.79212919  -1.48977869 -1.324289309 #> 24   -1.01597796  1.49829728  -1.18122575 -1.256566335 #> 25   -0.61401426  0.52367012  -1.39947018 -1.121509138 #> 26   -1.19381642  0.90316110  -1.28848670 -1.374222785 #> 27   -1.01833797  1.26341462  -1.26086555 -1.244082804 #> 28   -0.97983108  1.17466040  -1.27054056 -1.269050838 #> 29   -1.15166411  1.22865624  -1.26020308 -1.334121152 #> 30   -1.06521030  0.57690590  -1.41361199 -1.271701230 #> 31   -1.12951336  0.68565763  -1.36845773 -1.316720080 #> 32   -1.12586794  1.75241740  -1.12159845 -1.326553543 #> 33   -0.55314581  0.99453364  -1.36705099 -1.073840868 #> 34   -0.63723961  1.55491144  -1.23845261 -1.111292756 #> 35   -1.23704333  0.84840520  -1.33364096 -1.361739254 #> 36   -1.49533018  1.11914445  -1.30916167 -1.439294070 #> 37   -1.19489102  1.60890728  -1.16609024 -1.371573040 #> 38   -0.98219109  0.72227428  -1.41981391 -1.231599597 #> 39   -1.51640634  0.41263821  -1.49738735 -1.396925613 #> 40   -1.04413414  1.06590867  -1.29501985 -1.289101978 #> 41   -1.23575792  1.24527537  -1.30568857 -1.309153766 #> 42   -2.00739467  0.70151670  -1.35572266 -1.637154433 #> 43   -1.38780021  0.41263821  -1.51806231 -1.331855623 #> 44   -1.03576870  1.62366815  -1.20223195 -1.211547809 #> 45   -0.43853581  1.21017885  -1.26739870 -1.028820722 #> 46   -1.44974326  0.97377607  -1.32363471 -1.414325713 #> 47   -0.67939192  1.01191283  -1.33636978 -1.126426679 #> 48   -1.28027024  0.57614584  -1.44842876 -1.324288013 #> 49   -0.85122496  1.28341214  -1.25639875 -1.216464703 #> 50   -1.21596718  1.01115277  -1.31949915 -1.341688437 #> 51    0.83955654  0.22566811   0.63898330  0.320380078 #> 52    0.58362970 -0.13872386   0.46456820  0.330212569 #> 53    0.94944652  0.18905146   0.64898955  0.365399575 #> 54   -0.45101392 -1.20776380   0.17528348 -0.012924288 #> 55    0.43394742 -0.08396796   0.54073490  0.220124053 #> 56    0.40815125 -1.26023952   0.19322962  0.287459572 #> 57    0.82212581 -0.17534050   0.45389948  0.440302056 #> 58   -1.01681996 -2.02268364  -0.14741127 -0.133233397 #> 59    0.57998428 -0.33546976   0.49624311  0.240175193 #> 60   -0.34219854 -1.29989640   0.06396877  0.122131938 #> 61   -1.05897227 -2.02192358  -0.07124457 -0.210786594 #> 62    0.13243366 -0.52049502   0.31115929  0.229955896 #> 63   -0.39271629 -1.20438543   0.25624821 -0.107878557 #> 64    0.64664735 -0.75309750   0.35664478  0.335129786 #> 65   -0.49531543 -0.88302872   0.14807537  0.039660552 #> 66    0.45266357  0.06140042   0.54487046  0.227690690 #> 67    0.45502358 -1.00873773   0.20670897  0.365013417 #> 68    0.03632900 -1.47588473   0.13492726  0.112299447 #> 69   -0.05940092 -0.35622733   0.49830947  0.029830328 #> 70   -0.34820397 -1.40526976   0.12045421  0.007126528 #> 71    0.78361892 -0.30408975   0.39394095  0.490237799 #> 72   -0.12949861 -0.55525340   0.33249672  0.074847558 #> 73    0.56362815 -0.46345894   0.50211380  0.245092734 #> 74    0.66407809 -1.11335102   0.29801118  0.302594791 #> 75    0.25739437 -0.39098571   0.42660956  0.167536946 #> 76    0.38836050 -0.04735132   0.52039117  0.207639550 #> 77    0.68987426 -0.04583120   0.61069968  0.247743126 #> 78    0.91093963  0.27780568   0.65866457  0.390367609 #> 79    0.39072051 -0.57373079   0.35631355  0.282543003 #> 80   -0.67315389 -1.26066144   0.11044796 -0.102963607 #> 81   -0.52003700 -1.46002566   0.09597492 -0.045459931 #> 82   -0.58670008 -1.58615658   0.06148938 -0.077995250 #> 83   -0.26046474 -1.00763953   0.20389834  0.047228809 #> 84    0.86642732 -0.71757905   0.41147405  0.412684926 #> 85    0.45502358 -1.22624120   0.13707542  0.389981127 #> 86    0.67136893 -0.39360403   0.33911168  0.445217978 #> 87    0.73438658  0.07953967   0.57935600  0.325296647 #> 88   -0.02089404 -0.55373328   0.45381768  0.017346149 #> 89    0.10663749 -1.15300791   0.13773789  0.234872141 #> 90   -0.32240780 -1.20776380   0.15460852  0.052145702 #> 91    0.21288205 -1.60387391   0.10978550  0.214821973 #> 92    0.60342044 -0.69910166   0.34630730  0.335129462 #> 93   -0.21723783 -1.06163537   0.21423582  0.047229133 #> 94   -1.08112302 -1.91393190  -0.10225701 -0.178252246 #> 95    0.02125827 -1.20700374   0.16875033  0.169802475 #> 96    0.25503436 -1.27837877   0.13806912  0.254923605 #> 97    0.14986440 -1.09825201   0.18289214  0.222388610 #> 98    0.25739437 -0.60848918   0.35697601  0.192504655 #> 99   -1.31597371 -1.46306590  -0.05362966 -0.223272068 #> 100  -0.02196864 -1.04425617   0.19322962  0.157318297 #> 101   1.46327960  0.05879821   1.05680304  1.398244181 #> 102   0.35489288 -1.07975851   0.73783081  0.972635614 #> 103   1.32630803  0.26230086   1.22840751  1.168233038 #> 104   1.06201575 -0.98610578   0.85675418  1.137962925 #> 105   1.17791117 -0.15608694   1.05399241  1.210600848 #> 106   2.07901783  0.42808867   1.40249138  1.333560997 #> 107  -0.33715928 -2.09480261   0.37618372  0.824708404 #> 108   1.81472555 -0.27655931   1.20492192  1.240871609 #> 109   1.01986345 -0.65909052   1.03737120  1.022958163 #> 110   1.76371876  0.98356798   1.33914156  1.416029792 #> 111   0.63554129 -0.13836961   0.96434636  1.047923606 #> 112   0.56995282 -0.53523978   0.94673145  0.962803123 #> 113   0.89618815  0.15202901   1.12395719  1.075543327 #> 114   0.07788988 -0.95438764   0.75817454  0.887514160 #> 115   0.21486145 -0.17912469   0.89992103  1.005170609 #> 116   0.72800054  0.18526727   1.03298621  1.125478098 #> 117   1.01878885 -0.71460648   0.91605024  1.112994891 #> 118   2.66010540  0.66297133   1.38909385  1.613892421 #> 119   2.06266170  0.73510642   1.54762917  1.288543119 #> 120   0.08931519 -1.52876625   0.72120960  0.752457610 #> 121   1.15812042  0.51304260   1.20707008  1.193200100 #> 122   0.16326910 -1.00914354   0.69234532  0.965067681 #> 123   2.09880858  0.30271781   1.42349758  1.288542471 #> 124   0.18069983 -0.60813493   0.87742914  0.845145702 #> 125   1.30415728 -0.06471440   1.05812797  1.250702805 #> 126   1.68504483 -0.22332353   1.13909270  1.253354493 #> 127   0.13747292 -0.66289082   0.83227488  0.857629233 #> 128   0.37360902 -0.82563839   0.77678315  0.967718397 #> 129   0.87511200 -0.33697376   1.00536505  1.092944075 #> 130   1.42311256 -0.47558538   1.09079658  1.123213865 #> 131   1.49449565  0.12031086   1.28456172  1.130782122 #> 132   2.41924929  0.68220878   1.38975631  1.491318755 #> 133   0.83424510 -0.15684700   1.03985060  1.092944075 #> 134   0.58266353 -1.25650689   0.76363504  0.942751335 #> 135   1.03257416 -1.92411630   0.68019091  1.065325649 #> 136   1.45963418  1.16707312   1.50627924  1.158400547 #> 137   1.13832968  0.09465479   1.01198001  1.300637900 #> 138   1.08309191 -0.82335821   0.87089599  1.158013741 #> 139   0.26607905 -0.88039429   0.74196637  0.947666933 #> 140   0.85296124  0.31477658   1.14843648  1.063059148 #> 141   0.94542049  0.52966173   1.18225956  1.153097496 #> 142   0.44863753  0.83701762   1.21740756  0.965453192 #> 143   0.35489288 -1.07975851   0.73783081  0.972635614 #> 144   1.37318036  0.29629919   1.17225331  1.270754593 #> 145   1.14068969  0.65579265   1.19607013  1.250702805 #> 146   0.49186444  0.56551831   1.15811150  0.990421225 #> 147   0.11875678 -0.48200400   0.93258964  0.812611031 #> 148   0.61446514 -0.19236544   0.98502133  1.015388935 #> 149   0.96413663 -0.08623203   0.94267770  1.248051117 #> 150   0.58866896 -1.15113354   0.70714960  1.057756744 #> attr(,\"scaled:center\") #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>     5.843333     3.057333     3.758000     1.199333  #> attr(,\"scaled:scale\") #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>    0.7711747    0.3473723    1.7463014    0.7444306"},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"Residuals full conditionals Multivariate  Linear Model (mlm) object. full conditional response linear model responses used predictors addition regressors specified formula mlm object. used  diagnose multivariate normality assumption plotenvelope.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"","code":"cresiduals(object, standardize = TRUE, ...)"},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"object mlm object, typically result calling lm matrix response. standardize logical defaults TRUE, return studentized residuals using rstandard comparable across responses. ... arguments passed residuals.lm rstandard.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"matrix residuals","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"residuals function mlm objects, returns residuals full  conditional model, , linear model response responses well predictors, can used diagnose multivariate normality assumption. can standardized (standardize=TRUE) facilitate overlay plots multiple responses, plotenvelope.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"Warton DI (2022) Eco-Stats - Data Analysis Ecology, t-tests multivariate abundances. Springer, ISBN 978-3-030-88442-0","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/cresiduals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Conditional Residuals from Multivariate Linear Model Fits — cresiduals","text":"","code":"data(iris) # fit a mlm: iris.mlm=lm(cbind(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width)~Species,data=iris) # construct full conditional residuals: cresiduals(iris.mlm) #>     Sepal.Length  Sepal.Width Petal.Length  Petal.Width #> 1     0.31367294  0.202516501 -0.301850145 -0.240802233 #> 2     0.47429637 -1.399025921 -0.182414309  0.383425946 #> 3    -0.24106926 -0.430574978  0.040805359  0.121609318 #> 4    -0.95656076 -0.526551269  0.977931661 -0.082401947 #> 5    -0.17937436  0.722221842  0.001542216 -0.444406291 #> 6     0.03684044  1.027064635 -0.035185225  0.113854365 #> 7    -1.06638351  0.302912457  0.568257718  0.231824439 #> 8    -0.12555699  0.038402502  0.247256532 -0.296982266 #> 9    -1.02163525 -1.073564006  0.928033767  0.249331951 #> 10   -0.06906266 -0.717018438  0.506389609 -0.521175728 #> 11    0.70432417  0.602598703 -0.481941948 -0.514492009 #> 12   -1.05806421  0.395862394  1.100021030 -0.558626361 #> 13    0.03856698 -1.022861007  0.285886695 -0.283412794 #> 14   -0.79359598 -0.523744394  0.301957654 -0.123918794 #> 15    2.39074532  0.983205596 -2.402668062 -0.297851087 #> 16    0.77993035  2.378404054 -1.194609506 -0.164180908 #> 17    1.14114905  0.751020347 -1.583614700  0.710204145 #> 18    0.41749985 -0.033719952 -0.533339756  0.365965061 #> 19    1.08891546  0.458914685 -0.578561536 -0.178876645 #> 20   -0.34719866  1.169090759  0.059832579 -0.222795197 #> 21    0.64680923 -0.391324618  0.081397497 -0.366435755 #> 22   -0.07882492  0.556805328 -0.242226956  0.532763437 #> 23   -0.40690250  1.013489593 -0.605385681 -0.082452599 #> 24    0.13350884 -1.053990605  0.018542848  1.434963264 #> 25   -1.88757612  0.616994229  2.254306053 -1.012183196 #> 26    0.25660863 -1.401820927  0.356892429  0.144769653 #> 27   -0.19154825 -0.363806017  0.169085164  0.769448604 #> 28    0.36994408  0.130742220 -0.151091206 -0.331372964 #> 29    0.80609842 -0.318020557 -0.605529117 -0.037514982 #> 30   -1.06283978 -0.219248419  1.196481823 -0.321242591 #> 31   -0.57013365 -0.740713087  0.894145300 -0.116686827 #> 32    1.40310765 -1.010001464 -1.156980074  1.147027061 #> 33   -0.73266508  2.638772263  0.510822238 -1.848088488 #> 34    0.50102878  2.294492202 -0.770695777 -1.068625741 #> 35    0.03518436 -0.951627009  0.273804363  0.087582529 #> 36    1.02240977 -0.931005292 -1.047316979  0.439576676 #> 37    1.90554110 -0.444227300 -1.628699251  0.133442915 #> 38   -0.61504939  1.102790030  0.469434698 -1.108612687 #> 39   -0.90738785 -0.762257934  0.607909875  0.248210421 #> 40    0.20378563 -0.104156763  0.013444430 -0.240679959 #> 41    0.36156611  0.038145328 -0.684167003  0.456755021 #> 42    0.71303380 -3.796152408 -0.368595372  2.022975618 #> 43   -1.23045090 -0.002554199  0.745811697 -0.047983180 #> 44   -0.14866091 -0.463378746 -0.227985891  1.836582177 #> 45   -1.34143584  1.223866798  1.373284194 -0.205195356 #> 46    0.24802768 -1.494071645 -0.180531025  0.936460217 #> 47   -0.72728884  1.476979480  0.680351481 -0.980021291 #> 48   -0.84426391 -0.217635235  0.660695161 -0.082138419 #> 49    0.37382592  0.744292344 -0.246893593 -0.570270905 #> 50    0.31091285 -0.409667887 -0.206831036 -0.003272779 #> 51    1.68957653  0.246746532 -0.679363521 -0.233450850 #> 52    0.35298194  0.723153609 -0.267979617  0.334498226 #> 53    1.07730540 -0.087859861  0.033747984  0.175871678 #> 54    0.01486333 -1.277495369 -0.248455591  0.673179257 #> 55    1.06426882 -0.865129455 -0.396144787  0.833865887 #> 56   -1.51087044  0.686187291  1.557510587 -0.692678269 #> 57   -0.58991947  1.153054518  0.580255443  0.446763578 #> 58   -0.53404722  0.174238166 -0.784937722 -0.618516844 #> 59    1.02240519 -0.155022005 -0.095240382 -0.476785166 #> 60   -1.25581297  0.359066972  0.117722184  0.671530577 #> 61   -0.08978165 -1.359776950 -0.524485451 -0.262794937 #> 62   -0.15036502  0.467563296 -0.391402858  0.786988763 #> 63    1.53325798 -1.675388916 -0.805518854 -0.736006984 #> 64   -0.79974572  0.395449033  1.228100512 -0.297626185 #> 65    0.46219241  0.570435769 -1.608443005  0.436784351 #> 66    1.67667024  0.081552694 -1.199771561  0.191440045 #> 67   -1.96206311  1.118912675  1.477945908  0.178343388 #> 68   -0.23741526  0.591640418  0.413217225 -1.716226501 #> 69    1.35685822 -2.774528746 -0.507540895  1.721910043 #> 70    0.08334738 -0.262174134 -0.264023989 -0.636622821 #> 71   -1.83786599  0.962988692  1.394709855  1.463152957 #> 72    1.17579011 -0.244657858 -1.302793177  0.274218337 #> 73    0.07372279 -1.508885653  1.033350712  0.727795819 #> 74   -0.84894626  0.493568978  1.625203955 -1.368949759 #> 75    1.18031586 -0.081628486 -0.783342172 -0.146666616 #> 76    1.50756664 -0.155687033 -1.031685527  0.282062506 #> 77    1.40673285 -0.919897002 -0.095304521  0.099748115 #> 78    0.51552919 -0.589188625  0.358554184  1.287247982 #> 79   -0.47746675  0.158818713  0.461729892  0.548965075 #> 80    1.25514315 -0.074702458 -1.749524151 -0.757249471 #> 81    0.19123586 -0.569569506 -0.485766942 -0.399506237 #> 82    0.36300710 -0.405304588 -0.641911527 -0.863638063 #> 83    0.52008783 -0.027666268 -0.824199807 -0.209868313 #> 84   -1.71772439 -0.419859412  2.419762790  0.583245153 #> 85   -2.62242806  1.419019355  1.959490218  0.064506930 #> 86   -1.20502772  1.820996766  0.586145012  0.427376857 #> 87    0.96078712  0.057195773 -0.270293271  0.357535896 #> 88    1.57201343 -2.136355333 -0.588794575  0.541445620 #> 89   -1.07556713  1.296600140  0.392852482 -0.452787864 #> 90   -0.31278905 -0.521110187 -0.108010667  0.376125701 #> 91   -1.67686811  0.381386630  1.736280416 -0.975366683 #> 92   -0.68898984  0.701729573  0.913641774 -0.297196839 #> 93    0.40963934 -0.334695490 -0.508764716 -0.209594801 #> 94   -0.03222012 -0.355535679 -1.090876188 -0.411674872 #> 95   -0.85522990  0.234250581  0.567293819 -0.156462455 #> 96   -1.12559242  1.462365503  0.778463848 -1.152599249 #> 97   -0.85328349  0.846491387  0.472767886 -0.394590880 #> 98    0.52123569  0.204192096 -0.313412470 -0.258944708 #> 99    0.92234629 -0.191661943 -2.581566313  0.419353141 #> 100  -0.41640415  0.397912240  0.017566294 -0.099833515 #> 101  -2.25424661  0.867643747  1.568447010  1.619394130 #> 102  -1.04844897  0.067494783  0.207494683 -0.143007886 #> 103   0.77182779 -0.561899643 -0.012243150  0.188772645 #> 104  -1.20044706  0.705365838  1.336541211 -1.499470094 #> 105  -0.83137069 -0.011808760  0.777142236  0.605625943 #> 106   0.51806305 -0.796316080  1.538184164 -0.572596556 #> 107  -2.30079610  0.668513530  0.340699854 -0.714347939 #> 108   0.19376148 -0.237768898  1.714678718 -1.987900618 #> 109   0.23466643 -1.251532201  0.897595397 -0.987400660 #> 110  -0.01166894  0.773131454  0.013575063  1.515082345 #> 111   0.55300317  0.725008281 -1.319645615  0.125839197 #> 112   0.38666929 -0.647668680 -0.428948302 -0.097758646 #> 113   0.87500786 -0.416677672 -0.849682791  0.607631007 #> 114  -0.67809909 -0.861638747 -0.319661454  0.858509859 #> 115  -0.71219374 -0.761445014 -0.912288390  2.766822883 #> 116  -0.01584990  0.299357829 -1.017180438  1.600947681 #> 117  -0.42736870  0.723753683  0.550341854 -1.381915644 #> 118  -0.66646844  1.984426717  2.036461904 -1.260233033 #> 119   0.93034168 -2.786261646  1.780196205  0.911085033 #> 120   0.29752378 -1.260306855 -0.069083416 -1.605397308 #> 121   0.54209724 -0.135129758 -0.641938840  1.290299193 #> 122  -1.22769475  0.356808241 -0.261640576  0.505755212 #> 123   0.81586426 -1.416302396  1.808551215 -0.999307925 #> 124   1.05382161 -0.557400516 -1.507438169 -0.174869139 #> 125  -0.49236091  1.000729889  0.363463489 -0.185009157 #> 126   0.19202082  0.845057354  0.987816473 -2.025383158 #> 127   0.83459110 -0.103490428 -1.589526739 -0.232166648 #> 128  -0.10475371  0.873372761 -0.832360831 -0.733036474 #> 129  -0.39013411 -0.530245163  0.332824272  0.528853749 #> 130   0.87923078  0.420105139  0.544183410 -2.659820843 #> 131   1.34934882 -1.146266442  0.387367204 -0.870902652 #> 132   0.65494937  1.962837666  0.860313912 -1.931850346 #> 133  -0.28719298 -0.768645052  0.101042833  1.136413042 #> 134   0.02476654  0.692207317  0.033388636 -2.443261221 #> 135  -1.86032534  0.841725217  2.602557556 -3.628615651 #> 136   2.43145936 -1.780791069 -1.138877601  1.479245005 #> 137  -1.40892868  1.189665443  0.294077000  1.431496706 #> 138  -0.92464944  1.246812696  0.857588193 -1.588341991 #> 139  -0.16206772  0.947945104 -0.986246691 -0.643708808 #> 140   1.31606460 -0.253524423 -1.399570167  0.667042119 #> 141   0.42640785 -0.540950046 -0.867059255  2.076104009 #> 142   2.38637729 -0.970693255 -3.034934886  2.362773567 #> 143  -1.04844897  0.067494783  0.207494683 -0.143007886 #> 144  -0.33893801  0.150908579  0.367158376  0.941244220 #> 145  -0.07740846  0.057299380 -0.575839356  2.249737400 #> 146   1.59784060 -0.978724620 -2.248738202  2.220908730 #> 147   1.21362577 -1.481214991 -1.496748247  0.588360951 #> 148   0.60367745  0.035946981 -1.069763113  0.272590818 #> 149  -1.29168602  1.423671672 -0.016470849  1.057043006 #> 150  -1.31819069  1.302294870  0.417277409 -1.142817297"},{"path":"https://dwarton.github.io/ecostats/reference/ecostats-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ecostats: Code and Data Accompanying the Eco-Stats Text (Warton 2022) — ecostats-package","title":"ecostats: Code and Data Accompanying the Eco-Stats Text (Warton 2022) — ecostats-package","text":"Functions data supporting Eco-Stats text (Warton, 2022, Springer), solutions exercises. Functions include tools using simulation envelopes diagnostic plots, function diagnostic plots multivariate linear models. Datasets mentioned package included (available elsewhere) vignette chapter text solutions exercises.","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/ecostats-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ecostats: Code and Data Accompanying the Eco-Stats Text (Warton 2022) — ecostats-package","text":"Maintainer: David Warton david.warton@unsw.edu.au contributors: Christopher Chung [contributor] Mark Donoghoe [contributor] Eve Slavich [contributor]","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect of pollution on marine microinvertebrates in estuaries — estuaries","title":"Effect of pollution on marine microinvertebrates in estuaries — estuaries","text":"Data observational study whether different microinvertebrate communities estuaries heavily modified human activity , across seven estuaries along coast New South Wales, Australia (Clark et al. 2015).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect of pollution on marine microinvertebrates in estuaries — estuaries","text":"","code":"data(estuaries)"},{"path":"https://dwarton.github.io/ecostats/reference/estuaries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Effect of pollution on marine microinvertebrates in estuaries — estuaries","text":"dataframe containing (amongst things): Mod factor describing whether sample taken 'Modified' 'Pristine' estuary. Zone Whether sample taken Inner (upstream) Outer (downstream) zone estuary. Estuary factor seven levels identifying estuary sample taken . Total Total abundance invertebrates sample Richness Richness taxa sample -- number responses (columns 8-94) taking non-zero value variables dataset give invertebrate counts separately different taxa.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaries.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Effect of pollution on marine microinvertebrates in estuaries — estuaries","text":"Clark, G. F., Kelaher, B. P., Dafforn, K. ., Coleman, M. ., Knott, N. .,  Marzinelli, E. M., & Johnston, E. L. (2015). impacted look like? high diversity abundance epibiota modified estuaries. Environmental Pollution 196, 12-20.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effect of pollution on marine microinvertebrates in estuaries — estuaries","text":"","code":"data(estuaries) plot(Total~Estuary,data=estuaries,col=c(4,2,2,4,2,4,2))"},{"path":"https://dwarton.github.io/ecostats/reference/estuaryZone.html","id":null,"dir":"Reference","previous_headings":"","what":"Effect of pollution on marine microinvertebrates in estuaries in different zones — estuaryZone","title":"Effect of pollution on marine microinvertebrates in estuaries in different zones — estuaryZone","text":"Data observational study whether different microinvertebrate communities estuaries heavily modified human activity , across seven estuaries along coast New South Wales, Australia (Clark et al. 2015). Sampling undertaken Inner Outer zones estuary.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaryZone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effect of pollution on marine microinvertebrates in estuaries in different zones — estuaryZone","text":"","code":"data(estuaryZone)"},{"path":"https://dwarton.github.io/ecostats/reference/estuaryZone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Effect of pollution on marine microinvertebrates in estuaries in different zones — estuaryZone","text":"dataframe containing (amongst things): Mod factor describing whether sample taken 'Modified' 'Pristine' estuary. Zone Whether sample taken Inner (upstream) Outer (downstream) zone estuary. Estuary factor seven levels identifying estuary sample taken . Total Total abundance invertebrates sample Richness Richness taxa sample -- number responses (columns 8-94) taking non-zero value variables dataset give invertebrate counts separately different taxa.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaryZone.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Effect of pollution on marine microinvertebrates in estuaries in different zones — estuaryZone","text":"Clark, G. F., Kelaher, B. P., Dafforn, K. ., Coleman, M. ., Knott, N. .,  Marzinelli, E. M., & Johnston, E. L. (2015). impacted look like? high diversity abundance epibiota modified estuaries. Environmental Pollution 196, 12-20.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/estuaryZone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effect of pollution on marine microinvertebrates in estuaries in different zones — estuaryZone","text":"","code":"data(estuaryZone) cols=c(\"blue\",\"red\",\"lightblue\",\"pink\") plot(Total~interaction(Estuary,Zone),data=estuaryZone,col=cols[c(1,2,2,1,2,1,2,3,4,4,3,4,3,4)])"},{"path":"https://dwarton.github.io/ecostats/reference/globalPlants.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Plants data — globalPlants","title":"Global Plants data — globalPlants","text":"Data inspired worldwide study plant height association climate latitude (Moles et al. 2009). Height recorded one dominant plant 178 sites, along dozens climatic variables extracted BIOCLIM. Sites, climate data species lists come Moles et al. (2009) height data actually field measurements, due data unavailability. Instead height taken species descriptions available Google, accessed 7/1/21.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/globalPlants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Plants data — globalPlants","text":"","code":"data(globalPlants)"},{"path":"https://dwarton.github.io/ecostats/reference/globalPlants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global Plants data — globalPlants","text":"dataframe containing whole bunch stuff, main things : height Maximum plant height, metres, taken species descriptions Google (available) lat latitude site plant found temp average daily maximum temperature rain total annual precipitation rain.wetm Rainfall wettest month","code":""},{"path":"https://dwarton.github.io/ecostats/reference/globalPlants.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Plants data — globalPlants","text":"Moles et al. (2009) Global patterns plant height. Journal Ecology 97, 923-932.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/globalPlants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global Plants data — globalPlants","text":"","code":"data(globalPlants) plot(height~lat,data=globalPlants)"},{"path":"https://dwarton.github.io/ecostats/reference/guineapig.html","id":null,"dir":"Reference","previous_headings":"","what":"Guineapig data — guineapig","title":"Guineapig data — guineapig","text":"Data derived study effects nicotine development guineapig offspring (Johns et al 1993). Ten pregnant guineapigs injected nicotine hydrogen tartite solution, ten control guinea pigs injected saline solution control. Learning capabilities offspring measured number errors made trying remember find food simple maze. Data presented  original paper- generated match summary statistics reported Johns et al (1993).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/guineapig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guineapig data — guineapig","text":"","code":"data(guineapig)"},{"path":"https://dwarton.github.io/ecostats/reference/guineapig.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Guineapig data — guineapig","text":"list containing two dataframes, oat wheat, depending crop. dataframe contains: errors Number errors made treatment N=Nicotine, C=Control","code":""},{"path":"https://dwarton.github.io/ecostats/reference/guineapig.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Guineapig data — guineapig","text":"Johns et al. (1993) effects chronic prenatal exposure nicotine behavior guinea pigs (Cavia porcellus). Journal General Psychology 120, 49-63.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/guineapig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guineapig data — guineapig","text":"","code":"data(guineapig) plot(errors~treatment,data=guineapig)"},{"path":"https://dwarton.github.io/ecostats/reference/headbobLizards.html","id":null,"dir":"Reference","previous_headings":"","what":"Headbob displays of Anolis lizards — headbobLizards","title":"Headbob displays of Anolis lizards — headbobLizards","text":"Displays 14 male Anolis lizards recorded Puerto Rican forest (Ord et al. 2016), along key environmental characteristics. lizards bob head (push-ups) attempts attract attention females, advertise territory ownership males. fast lizard bobs head recorded, interest understand environmental features (temperature, light noisiness)  related head bobbing speed.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/headbobLizards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Headbob displays of Anolis lizards — headbobLizards","text":"","code":"data(headbobLizards)"},{"path":"https://dwarton.github.io/ecostats/reference/headbobLizards.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Headbob displays of Anolis lizards — headbobLizards","text":"dataframe containing: LizardID factor indicating lizard talking . one observation per lizard (originally collected). TemperatureC Temperature, degrees Celsius, location lizard first observed. AmbientLight Ambient light recorded using handheld sensor pointed towards bobbing happening. Bg_noise_max Visual background noise measured using video analysis. Hbspd_max Maximum head-bobbing speed. time Date time observation.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/headbobLizards.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Headbob displays of Anolis lizards — headbobLizards","text":"Ord, T. J., Charles, G. K., Palmer, M. & Stamps, J. . (2016). Plasticity social communication implications colonization novel habitats. Behavioral Ecology 27, 341-351","code":""},{"path":"https://dwarton.github.io/ecostats/reference/headbobLizards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Headbob displays of Anolis lizards — headbobLizards","text":"","code":"data(headbobLizards) plot(Hbspd_max~Bg_noise_max, data=headbobLizards)"},{"path":"https://dwarton.github.io/ecostats/reference/maunaloa.html","id":null,"dir":"Reference","previous_headings":"","what":"Atmospheric carbon dioxide concentration from the Mauna Loa Observatory — maunaloa","title":"Atmospheric carbon dioxide concentration from the Mauna Loa Observatory — maunaloa","text":"Monthly average measurements carbon dioxide concentration Mauna Loa Observatory Hawaii, March 1958 February 2021. Data available courtesy Global Monitoring Laboratory National Oceanic Atmospheric Administration (NOAA) United States (https://www.esrl.noaa.gov/gmd/ccgg/trends/data.html).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/maunaloa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atmospheric carbon dioxide concentration from the Mauna Loa Observatory — maunaloa","text":"","code":"data(maunaloa)"},{"path":"https://dwarton.github.io/ecostats/reference/maunaloa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atmospheric carbon dioxide concentration from the Mauna Loa Observatory — maunaloa","text":"dataframe containing: Date data measurement date format. One measurement available month, first day month assumed . year year measurement. month month measurement. DateNum date numerical format, year+month/12. co2 Carbon dioxide measurement parts per million. Calculated average daily measurements month.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/maunaloa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atmospheric carbon dioxide concentration from the Mauna Loa Observatory — maunaloa","text":"","code":"data(maunaloa) plot(co2~Date, type=\"l\", data=maunaloa)"},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"Produces diagnostic plots fitted model y, adds global envelopes constructed simulating new residuals, see departures expected trends compare might expected  fitted model correct. Global envelopes constructed using GET package (Myllymäki et al 2017) simultaneous control error rates whole plot, simulating new responses fitted model recomputing residuals (can computationally intensive), alternatively, simulating residuals directly (multivariate) normal distribution (faster, always smart move). Options diagnostic plots construct residual vs fits, normal quantile plot, scale-location plot, along lines plot.lm.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"","code":"plotenvelope(   y,   which = 1:2,   sim.method = \"refit\",   n.sim = 199,   conf.level = 0.95,   type = \"st\",   overlay = TRUE,   transform = NULL,   main = c(\"Residuals vs Fitted Values\", \"Normal Quantile Plot\", \"Scale-Location Plot\"),   xlab = c(\"Fitted values\", \"Theoretical Quantiles\", \"Fitted Values\"),   ylab = c(\"Residuals\", \"Residuals\", expression(sqrt(\"|Residuals|\"))),   col = NULL,   line.col = if (add.smooth) c(\"slateblue4\", \"olivedrab\", \"slateblue4\") else     rep(\"olivedrab\", 3),   envelope.col = adjustcolor(line.col, 0.1),   add.smooth = TRUE,   plot.it = TRUE,   resFunction = NULL,   predFunction = NULL,   fitMin = if (inherits(y, \"glm\") | inherits(y, \"manyglm\")) -6 else -Inf,   ... )"},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"y object responds residuals, predict  (sim.method=\"refit\") simulate update. vector specifying diagnostic plots construct: residual vs fits, smoother normal quantile plot scale-location plot, smoother first three options plot.lm little borrowed  code. global envelope included plot around expect see data (smoother, requested, plots 1 3) model assumptions satisfied. fully captured global envelope, evidence model assumptions satisfied. sim.method residuals simulated? default objects \"refit\", constructs new responses (via simulate), refits model (via update), recomputes residuals, often known parametric bootstrap. computationally intensive gives robust answer. suitable option residuals expected normal assumptions satisfied (like using glm non-Gaussian family).  Alternatively, \"norm\" simulates normal distribution, matches means variances (covariances multivariate responses) observed residuals. \"stand.norm\" option sets means zero variances one, appropriate residuals standard normal assumptions satisfied (object fitted using mvabund package, example). options faster approximate \"refit\", fact \"stand.norm\"  used default manyglm objects, computational reasons. n.sim number simulated sets residuals generated, observed residuals compared. default 199 datasets. conf.level confidence level use constructing envelope. type type global envelope construct, see  global_envelope_test details. Default \"st\" uses  studentized envelope tests protect unequal variance, performed well simulations context. overlay logical. multivariate data, determines whether residuals  different responses overlaid single plot (default), plotted separately. transform character vector pointing function applied axes normal quantile plot. common use set transform=\"pnorm\" PP-plot. main plot title (plot produced). vector three titles, one plot. one value given used plots. xlab x axis label (plot produced). vector three labels, one plot. one value given used plots. ylab y axis label (plot produced). vector three labels, one plot. one value given used plots. col color points line.col vector length three containing colors lines three diagnostic plots. Defaults \"slateblue4\" smoothers \"olivedrab\" otherwise. cool. envelope.col color global envelope around expected trend. data points always stay within envelope (proportion conf.level datasets satisfying model assumptions). smoother used residual vs fits scale-location plot, envelope constructed around smoother, , smoother always stay within envelope. add.smooth logical defaults TRUE, adds smoother residual vs fits scale-location plots, computes global envelope around smoother rather data (add.smooth=FALSE). smoother added normal quantile plot. plot.logical. result plotted? , list analysis outputs returned, see Value. resFunction function used compute residuals diagnostic plots. Defaults cresiduals multivariate linear models, rstandard linear models, residuals cases. predFunction function used compute predicted values residual vs fits scale-location plots. Defaults cpredict multivariate linear models cpredict otherwise. fitMin minimum fitted value use plots, fitted value less truncated fitMin. useful generalised linear models, small fitted values correspond predictions numerically zero. default set fitMin -6 GLMs, otherwise truncation (-Inf). ... arguments sent plot.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"three diagnostic plots simulation envelopes returned, additionally list  three objects used plotting, plots 1-3 respectively. list five components: x X-values used envelope. plots 1 3 fitted values, add.smooth=TRUE, 500 equally spaced points covering range fitted values. plot 2, sorted normal quantiles corresponding observed data. y Y-values used envelope. plots 1 3 residuals, add.smooth=TRUE, values smoother corresponding x. plot 2, sorted residuals. lo lower bound global envelope, value x. hi upper bound global envelope, value x. p.value P-value test observed smoother data consistent expected fitted model correct, computed global_envelope_test.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"challenge interpreting diagnostic plots understanding extent deviations expected pattern due random noise (sampling variation) rather actual assumption violations. function intended assess ,  simulating multiple realizations residuals (fitted values) situations  assumptions satisfied, plotting global simulation envelope around level conf.level. function can take fitted model, construct three diagnostic plots, determined : Residual vs fits plot (optionally, smoother) Normal quantile plot Scale-Location plot (optionally, smoother) see trend behaving expected model true. long  fitted model responds residuals predict  (sim.method=\"refit\", simulate update) simulation envelope constructed plot. Simulation envelopes global, constructed using GET-package, meaning (example) 95% global envelope quantile plot contain residuals 95% datasets satisfy model assumptions. data points lie outside quantile plot's envelope evidence assumptions fitted model satisfied.  GET-package originally constructed place envelopes around functions, motivated problem diagnostic testing spatial processes (Myllymäki et al 2017), can equally well applied , treating set residuals (ordered according x-axis) point-wise evaluations function. residual vs fits scale-location plots, .smooth=TRUE, global envelopes constructed smoother, data, hence looking see smoother wholly contained within envelope. smoother constructed using gam mgcv  package maximum likelihood estimation (method=\"ML\"). Note global envelopes tell evidence violation model assumptions -- tell whether violations large enough worry . example, linear models, violations normality usually much less important violations linearity equal variance. cases, modest violations tend modest effects validity inferences, need think big observed violations rather just thinking whether anything outside simulation envelope. method used simulate data global envelopes controlled sim.method. default method (sim.method=\"refit\") uses parametric bootstrap approach: simulate  new responses fitted model, refit model recompute residuals fitted values.  directly assesses whether trends observed trends depart expected fitted model correct, without assumptions. complex models large datasets however super-slow. fast, approximate alternative (sim.method=\"norm\") simulate new (multivariate) normal residuals  repeatedly use assess whether trends observed data depart expected independent (multivariate) normal residuals. residuals expected standard normal, refined check simulate standard normal using (sim.method=\"stand.norm\"). might example useful diagnosing model fitted using mvabund package (Wang et al. 2012), since calculates Dunn-Smyth residuals (Dunn & Smyth 1996), approximately standard normal assumptions satisfied.   y glm non-Gaussian family residuals normal \"refit\" appropriate option, hence choices overridden warning reporting done. Note Multivariate Linear Models (mlm), cresiduals cpredict  used construct residuals fitted values (respectively) full conditional models (, models constructed regressing response responses together predictors). done full conditionals diagnostic joint  distributions, violation multivariate normality expressed violation  linear model assumptions full conditionals. Results responses overlaid single plot, future versions function may overlay option separately plot response. simulated data subsequent analysis also used obtain P-value  test model assumptions correct, plot. tests sample residuals smoothers unusually far values expected model assumptions satisfied. details see global_envelope_test.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"Dunn, P. K., & Smyth, G. K. (1996), Randomized quantile residuals. J. Comp. Graphical Stat. 5, 236-244. doi:10.1080/10618600.1996.10474708 Myllymäki, M., Mrkvička, T., Grabarnik, P., Seijo, H. Hahn, U. (2017), Global envelope tests spatial processes. J. R. Stat. Soc. B, 79: 381-404. doi:10.1111/rssb.12172 Wang, Y. ., Naumann, U., Wright, S. T., & Warton, D. . (2012), mvabund - R package model-based analysis multivariate abundance data. Methods Ecology Evolution, 3, 471-474. doi:10.1111/j.2041-210X.2012.00190.x Warton DI (2022) Eco-Stats - Data Analysis Ecology, t-tests multivariate abundances. Springer, ISBN 978-3-030-88442-0","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/plotenvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic Plots for a Fitted Object with Simulation Envelopes — plotenvelope","text":"","code":"# fit a Poisson regression to random data: y = rpois(50,lambda=1) x = 1:50 rpois_glm = glm(y~x,family=poisson()) plotenvelope(rpois_glm,n.sim=59)    # Fit a multivariate linear model to the iris dataset: data(iris) Y = with(iris, cbind(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width)) iris_mlm=lm(Y~Species,data=iris) # check normality assumption: plotenvelope(iris_mlm,n.sim=59,which=2)   # A few more plots, with envelopes around data not smoothers: plotenvelope(iris_mlm, which=1:3, add.smooth=FALSE)    # Note minor violation on the scale/location plot.  # Repeat but with smoothers and with separate plots for each response and  # a multiple testing adjustment to sim envelopes: plotenvelope(iris_mlm, which=1:3, overlay=FALSE, conf.level=1-0.05/4)"},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"Produces normal QQ plot data, residuals fitted model y, user-specified  line compare \"theoretical\" quantiles, global envelopes constructed simulating new residuals. Global envelopes constructed using GET package simultaneous control error rates whole curve.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"","code":"qqenvelope(y, n.sim = 199, conf.level = 0.95, ylab = \"Sample Quantiles\", ...)"},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"y can set values wish check (multivariate) normality,  can object responds residuals, simulate update functions. n.sim number simulated sets residuals generated, observed residuals compared. default 199 datasets. conf.level confidence level use constructing envelope. ylab y axis label (plot produced). ... arguments sent plotenvelope","code":""},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"qqplot simulation envelope returned, additionally: x vector theoretical quantiles standard normal sorted  smallest largest y vector observed residuals sorted smallest largest lo lower bounds global simulation envelope residuals hi upper bounds global simulation envelope residuals p.value P-value test model assumptions correct,  using 'parametric bootstrap' test, based far sample residuals depart  values expected model assumptions satisfied.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"challenge interpreting qqplot understanding extent deviations expected values due random noise (sampling variation) rather actual assumption violations. function intended assess ,  simulating multiple realizations residuals situations assumptions  satisfied, plotting global (\"simultaneous\") simulation envelope around level conf.level. data points lie assumptions satisfied, proportion conf.level datasets satisfy assumptions. function can take data (univariate multivariate) check (multivariate) normality, can take fitted model use qq plots interrogate residuals see behaving expect model true. envelope global, constructed using GET-package. data points lie outside envelope evidence assumptions satisfied.  GET-package originally constructed place envelopes around functions, motivated problem diagnostic testing spatial processes (Myllymäki et al 2017), can equally well applied , treating sorted residuals point-wise evaluations function. details refer plotenvelope, called construct plot.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"Myllymäki, M., Mrkvička, T., Grabarnik, P., Seijo, H. Hahn, U. (2017), Global envelope tests spatial processes. J. R. Stat. Soc. B, 79: 381-404. doi:10.1111/rssb.12172 Warton DI (2022) Eco-Stats - Data Analysis Ecology, t-tests multivariate abundances. Springer, ISBN 978-3-030-88442-0","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/qqenvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normal Quantile-Quantile Plots with Global Simulation Envelopes — qqenvelope","text":"","code":"# simulate some data and fit a qq plot: y=rnorm(20) qqenvelope(y)   # fit a multivariate linear model to the iris dataset: data(iris) Y = with(iris, cbind(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width)) iris.mlm=lm(Y~Species,data=iris) # check normality assumption: qqenvelope(iris.mlm,n.sim=79)"},{"path":"https://dwarton.github.io/ecostats/reference/ravens.html","id":null,"dir":"Reference","previous_headings":"","what":"Ravens data — ravens","title":"Ravens data — ravens","text":"Data study whether ravens fly towards sound gunshots (White 2005). Many thanks Crow White providing raw data. twelve locations, four treatments applied (1=gunshot, 2-air horn, 3=whistle, 4=sound). Ravens within 100 metre radius author counted ten minutes ten minutes treatment applied. Primary interest assessing effect gunshot raven numbers. Posthoc analyses suggested ravens attracted gunshots forested areas .","code":""},{"path":"https://dwarton.github.io/ecostats/reference/ravens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ravens data — ravens","text":"","code":"data(ravens)"},{"path":"https://dwarton.github.io/ecostats/reference/ravens.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ravens data — ravens","text":"dataframe containing: number ravens treatment applied number ravens treatment applied delta -count site Location, one twelve Jackson Hole, Wyoming's ungulate hunting zone treatment 1=gunshot, 2=air horn, 3=whistle, 4=sound trees 1=forested habitat (>300 trees within 100 metres observer), 0=open","code":""},{"path":"https://dwarton.github.io/ecostats/reference/ravens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ravens data — ravens","text":"Crow White (2005) Hunters ring dinner bell ravens: experimental evidence unique foraging strategy. Ecology, 86 1057-60.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/ravens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ravens data — ravens","text":"","code":"data(ravens) ravens1 = ravens[ravens$treatment==1,] t.test(ravens1$Before,ravens1$After,paired=TRUE,alternative=\"less\") #>  #> \tPaired t-test #>  #> data:  ravens1$Before and ravens1$After #> t = -2.6, df = 11, p-value = 0.01235 #> alternative hypothesis: true mean difference is less than 0 #> 95 percent confidence interval: #>       -Inf -0.335048 #> sample estimates: #> mean difference  #>       -1.083333  #>  boxplot(ravens1$delta,ylab=\"After-Before counts\") abline(h=0,col=\"red\",lty=3)"},{"path":"https://dwarton.github.io/ecostats/reference/reveg.html","id":null,"dir":"Reference","previous_headings":"","what":"Invertebrate abundances in a revegetation study — reveg","title":"Invertebrate abundances in a revegetation study — reveg","text":"Data study looking effect revegetation invertebrate communities  (data Anthony Pik, Macquarie University). Invertebrates sampled 4-5 pitfall traps eight sites undergone revegetation, two sites , interest see effect revegetation invertebrate community.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/reveg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invertebrate abundances in a revegetation study — reveg","text":"","code":"data(reveg)"},{"path":"https://dwarton.github.io/ecostats/reference/reveg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Invertebrate abundances in a revegetation study — reveg","text":"list containing three objects: abund data frame abundances 24 Orders invertebrate. pitfalls vector specifying number pitfall traps collected site. treatment Whether site `Control` site undergone revegetation (`Impact`).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/reveg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invertebrate abundances in a revegetation study — reveg","text":"","code":"data(reveg) worms = reveg$abund$Haplotaxida plot(worms~treatment, data=reveg, horizontal=TRUE,   las=1, xlab=\"\",ylab=\"Worm abundance\")"},{"path":"https://dwarton.github.io/ecostats/reference/seaweed.html","id":null,"dir":"Reference","previous_headings":"","what":"Habitat Configuration data from seaweed experiment — seaweed","title":"Habitat Configuration data from seaweed experiment — seaweed","text":"Data study habitat configuration, specifically, density invertebrate epifauna seaweed vary across sites different levels isolation .","code":""},{"path":"https://dwarton.github.io/ecostats/reference/seaweed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Habitat Configuration data from seaweed experiment — seaweed","text":"","code":"data(seaweed)"},{"path":"https://dwarton.github.io/ecostats/reference/seaweed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Habitat Configuration data from seaweed experiment — seaweed","text":"dataframe containing: Size character vector describing size experimental plots \"SMALL\" \"LARGE\" Dist Distance isolation -- 0, 2 10 metres algal beds Time Sampling time - either 5 10 weeks start experiment. Rep replicate number (1 5). Wmass Wet mass algal bed plot. Total Total invertebrate density plot, calculated nuber individuals divided Wmass. variables dataset give invertebrate counts separately different taxa.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/seaweed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Habitat Configuration data from seaweed experiment — seaweed","text":"Roberts, D. . & Poore, . G. (2006). Habitat configuration affects colonisation epifauna marine algal bed. Biological Conservation 127, 18-26.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/seaweed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Habitat Configuration data from seaweed experiment — seaweed","text":"","code":"data(seaweed) boxplot(Total~Dist, data=seaweed)"},{"path":"https://dwarton.github.io/ecostats/reference/seedsTemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Germination rates of Abutilon angulatum at different temperatures — seedsTemp","title":"Germination rates of Abutilon angulatum at different temperatures — seedsTemp","text":"Germination rates Abutilon angulatum 29 different studies, undertaken different ambient temperatures. like know germination rate varies temperature, particular, range temperatures Abutilon angulatum  germinate. data come larger study across species environments look latitudinal signal tolerance changing temperature (Sentinella et al 2020).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/seedsTemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germination rates of Abutilon angulatum at different temperatures — seedsTemp","text":"","code":"data(seedsTemp)"},{"path":"https://dwarton.github.io/ecostats/reference/seedsTemp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Germination rates of Abutilon angulatum at different temperatures — seedsTemp","text":"dataframe containing: NumSown number seeds sown. NumGerm number seeds germinated. Test.Temp ambient temperature (degrees Celsius) location seeds sown.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/seedsTemp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Germination rates of Abutilon angulatum at different temperatures — seedsTemp","text":"Sentinella, , Warton, DI, Sherwin, WB, Offord, CA, Moles, . (2020) Tropical plants narrower temperature tolerances, risk warming close upper thermal limits. Global Ecol Biogeogr. 29, 1387-1398.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/seedsTemp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Germination rates of Abutilon angulatum at different temperatures — seedsTemp","text":"","code":"data(seedsTemp) seedsTemp$propGerm = seedsTemp$NumGerm / seedsTemp$NumSown plot(propGerm/(1-propGerm)~Test.Temp,data=seedsTemp,log=\"y\",  ylab=\"Germination rate [logit scale]\", xlab=\"Temperature (Celsius)\") #> Warning: 5 y values <= 0 omitted from logarithmic plot"},{"path":"https://dwarton.github.io/ecostats/reference/simulate.manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from manyglm objects — simulate.manyglm","title":"Simulate from manyglm objects — simulate.manyglm","text":"Simulates new responses manyglm object.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from manyglm objects — simulate.manyglm","text":"","code":"# S3 method for manyglm simulate(object, nsim = 1, seed = NULL, newdata = object$data, ...)"},{"path":"https://dwarton.github.io/ecostats/reference/simulate.manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from manyglm objects — simulate.manyglm","text":"object manyglm object mvabund package. nsim number simulated datasets generate. seed seed random number generation (defaults NULL) newdata new dataset predictors simulate new values . Defaults data model fitted . ... additional optional arguments.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from manyglm objects — simulate.manyglm","text":"Simulates data frame new values responses. multiple datasets requested, stacked one (see example(simulate.cord).","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.manyglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from manyglm objects — simulate.manyglm","text":"Returns data frame containing response predictors. function just calls simulate.cord  ecoCopula package, cord object constructed default settings -- ,  fits copula latent variable model two latent variables, uses simulate new data.","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/simulate.manyglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate from manyglm objects — simulate.manyglm","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"Simulate one sets responses Multivariate Linear Model (mlm) object.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"","code":"# S3 method for mlm simulate(object, nsim = 1, seed = NULL, ...)"},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"object mlm object, typically result calling lm  response matrix. nsim number replicate datasets simulate. nsim greater 1, output arranged 3D array. seed object specifying random number generator  initialized (‘seeded’). Either NULL integer used call set.seed simulating response vectors. set, value saved \"seed\" attribute  returned value. default, NULL change random generator state,  return .Random.seed \"seed\" attribute, see ‘Value’ ... additional optional arguments.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"matrix simulated values response (array, nsim greater 1)","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"simulate function mlm objects, simulates one  sets responses Multivariate Linear Model (mlm) object. multiple sets responses requested, returned 3D array, simulation number along third dimension. weights argument currently ignored -- constant  variance-covariance matrix assumed mlm.","code":""},{"path":[]},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"David Warton <david.warton@unsw.edu.au>","code":""},{"path":"https://dwarton.github.io/ecostats/reference/simulate.mlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Responses from a Multivariate Linear Model — simulate.mlm","text":"","code":"# fit a mlm to iris data: data(iris) iris.mlm=lm(cbind(Sepal.Length,Sepal.Width,Petal.Length,Petal.Width)~Species,data=iris) # simulate new responses: simulate(iris.mlm) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1       4.200978    2.825801   1.39654723  0.24972630 #> 2       4.318562    3.329894   0.55164717 -0.21515575 #> 3       5.254231    3.342421   1.92664855  0.13956214 #> 4       5.151684    3.796836   1.93569845  0.27291349 #> 5       5.684409    3.652141   1.65650601 -0.01001265 #> 6       4.395321    3.733580   1.12744259  0.47708597 #> 7       5.292739    3.799997   1.60536750  0.20466059 #> 8       4.871967    2.899367   1.38114076  0.13185737 #> 9       4.069070    3.312135   0.64972774  0.28445416 #> 10      5.120769    3.265031   2.12782054  0.40315003 #> 11      5.330841    3.580128   1.49985877  0.12988763 #> 12      5.177083    3.348545   1.45113047  0.06459168 #> 13      4.534609    3.092727   1.11303165  0.18218810 #> 14      5.102923    2.959697   1.02322860  0.02505378 #> 15      4.718782    2.919131   1.39063341  0.27385550 #> 16      5.381146    3.450103   1.39278148  0.32428560 #> 17      5.479397    3.750609   1.46704446  0.09967066 #> 18      5.372375    3.370330   1.42191789  0.12612435 #> 19      5.511614    3.438025   1.61361386  0.32239343 #> 20      4.116455    3.506816   1.35512711  0.21195580 #> 21      5.481359    3.149424   1.63130883  0.15972582 #> 22      5.189062    3.634384   1.16130518  0.28275605 #> 23      5.337538    3.156004   1.32658709  0.26517995 #> 24      5.187569    3.908086   1.65475241  0.38743281 #> 25      5.468330    3.580206   1.51620296  0.08262696 #> 26      5.657252    3.832517   2.14679065  0.28630975 #> 27      5.454075    3.607925   1.53473719  0.15563142 #> 28      4.691469    3.187503   1.29080489  0.08845448 #> 29      5.757686    3.481600   2.15656965  0.45261661 #> 30      3.748291    2.732238   0.03106476 -0.00192140 #> 31      4.524957    2.947170   1.72126368  0.11654952 #> 32      4.993370    3.446627   1.60979786  0.49172608 #> 33      5.589128    4.374694   1.92220404  0.52627870 #> 34      4.805306    3.141613   1.37619382  0.19821375 #> 35      4.369410    3.059210   0.78113190 -0.11233389 #> 36      5.420600    3.840031   1.49620323  0.27249807 #> 37      5.057003    3.399689   1.94689036  0.32590815 #> 38      6.070911    3.560182   2.49515102  0.35188214 #> 39      4.099611    2.903688   0.92726848 -0.02125550 #> 40      4.155101    2.916433   0.92337749  0.21030629 #> 41      4.776597    3.610434   1.33003909  0.52290947 #> 42      6.269068    3.657671   1.70859781  0.18616687 #> 43      5.075855    3.603221   1.00825932  0.16871696 #> 44      4.175744    3.087367   1.05323519  0.00448581 #> 45      5.331882    3.698521   1.93788203  0.54763104 #> 46      5.234957    3.551521   1.89731820  0.24308328 #> 47      4.784011    3.497571   1.09922231  0.41383138 #> 48      4.644260    3.131348   1.11997240  0.10067307 #> 49      5.208339    3.776496   1.51508267  0.19229795 #> 50      5.058882    3.895116   1.23385397  0.17812715 #> 51      5.888575    2.741548   4.51030271  1.46710507 #> 52      5.157908    2.915565   3.62074831  1.32600173 #> 53      5.510412    2.832324   3.89756530  1.28695552 #> 54      6.889023    3.244702   4.48671180  1.29458596 #> 55      6.223730    3.216808   4.09585254  1.32071499 #> 56      4.945582    2.648886   4.35506344  1.38315941 #> 57      5.862038    2.825527   4.25906634  1.40888464 #> 58      5.836171    2.616747   4.48362509  1.00668985 #> 59      6.005799    2.862617   4.12858800  1.19343146 #> 60      6.008198    2.625672   4.41345098  1.49755684 #> 61      6.397126    2.913171   3.97496167  1.19158122 #> 62      6.458854    3.330773   4.45104757  1.40526369 #> 63      5.638839    2.377427   4.68614951  1.29898775 #> 64      6.461039    2.836803   4.31707407  1.37683395 #> 65      5.570467    2.661451   3.71641382  1.20921125 #> 66      5.903847    2.458873   4.17330718  1.10593412 #> 67      6.133798    3.223465   4.30762761  1.50840333 #> 68      6.693772    2.775698   5.19786378  1.56301913 #> 69      5.678777    2.290029   3.84846467  0.94094348 #> 70      5.981038    3.350287   3.76508183  1.35099290 #> 71      5.127382    2.579653   4.06910868  1.38872350 #> 72      5.829341    2.900984   4.41336330  1.60208906 #> 73      6.550752    3.308670   4.88071681  1.40360426 #> 74      6.306020    2.937496   4.63926974  1.42896111 #> 75      5.428768    2.960488   4.19512013  1.42947991 #> 76      5.583977    2.308025   3.63783498  1.29339551 #> 77      5.769178    2.542574   4.15342206  1.29378662 #> 78      5.436676    2.879526   3.93128351  1.10809954 #> 79      5.517751    2.002300   3.67113774  0.99858724 #> 80      5.846115    1.870301   4.50527638  1.15240025 #> 81      6.160182    3.062861   4.59945323  1.45666668 #> 82      6.188599    2.816063   4.32571447  1.01942451 #> 83      6.927651    2.751601   4.83776050  1.26474315 #> 84      6.578900    3.356976   4.48122020  1.45530214 #> 85      5.901538    2.664915   3.85721813  1.12767880 #> 86      6.343354    3.486992   4.13931872  1.22566719 #> 87      5.158934    2.304629   4.06493495  1.48948267 #> 88      6.155114    2.947692   4.60166119  1.37079810 #> 89      5.877358    2.549802   4.12612682  1.30902947 #> 90      6.208156    2.914024   4.46405046  1.61043407 #> 91      5.731889    3.089871   4.05771509  1.41757849 #> 92      5.785944    2.470860   4.10826241  1.34356767 #> 93      6.277305    2.239251   4.48031399  0.97822668 #> 94      5.329332    2.695397   4.21400072  1.45954137 #> 95      5.490871    2.408655   4.08282241  1.16138024 #> 96      6.130336    3.186481   4.20612236  1.47632227 #> 97      6.570670    2.581203   4.33043202  1.23917103 #> 98      6.493433    2.853993   4.90840254  1.35498107 #> 99      5.499063    2.432872   4.08103066  1.45904832 #> 100     5.737791    2.523484   4.43517421  1.05846908 #> 101     6.170510    2.438281   5.72318985  1.96181642 #> 102     7.559341    3.261659   6.25307976  2.22593852 #> 103     5.602563    2.519204   4.79105087  1.99283041 #> 104     6.793641    2.868664   5.71492483  1.94889950 #> 105     6.817845    3.167786   5.80026353  2.01929626 #> 106     6.148711    3.111413   5.36894328  2.25657762 #> 107     7.000574    2.831003   6.28392291  2.09265570 #> 108     5.737640    2.927709   5.29954310  2.16004725 #> 109     5.905507    2.642863   4.76948601  1.65699227 #> 110     6.719933    3.325212   5.67722284  2.04188529 #> 111     6.381337    2.943559   6.31726367  2.00935825 #> 112     6.670436    3.311127   5.56800204  2.14794538 #> 113     6.393279    2.722976   5.80626699  1.93592546 #> 114     7.224158    2.909177   5.51818041  1.84001682 #> 115     7.006358    3.380429   5.40786608  1.67411915 #> 116     5.724481    3.063453   5.35179271  2.05456893 #> 117     6.464930    2.543877   5.28019591  1.66596215 #> 118     6.585043    3.053046   5.36951422  1.67827731 #> 119     6.617169    2.696539   5.46787534  2.17210765 #> 120     7.577495    3.452656   6.22914597  2.33136393 #> 121     5.736586    2.535274   5.61763134  2.12691785 #> 122     6.842067    3.286865   5.81180600  2.08340625 #> 123     6.624108    3.246115   5.22852724  1.77047034 #> 124     5.251712    2.542523   4.55011959  1.67185744 #> 125     6.045971    2.821633   5.38661058  2.05200170 #> 126     6.760700    2.564690   5.72696913  1.93560420 #> 127     6.774125    3.007770   5.64261835  2.03382768 #> 128     6.947480    3.456937   5.40871058  1.88968597 #> 129     6.086330    2.632093   4.87746580  1.58873888 #> 130     6.122349    2.785627   5.13676877  1.81664256 #> 131     6.309947    2.673486   5.45723879  1.83560642 #> 132     6.762739    2.770839   5.58241429  1.74705510 #> 133     6.652610    2.647762   6.11001382  2.13361299 #> 134     5.948742    2.516633   5.33277058  2.16418115 #> 135     6.233129    2.686854   5.71388528  2.25352258 #> 136     6.774710    3.413097   5.77703327  2.24487898 #> 137     7.689391    3.395205   6.39795822  2.50450067 #> 138     6.629541    2.990771   5.48793394  2.07009894 #> 139     6.580580    2.670852   5.86346312  2.07942445 #> 140     6.281282    2.415028   5.23390393  1.76034377 #> 141     6.906161    2.966723   6.28265271  2.26270725 #> 142     6.575812    2.748573   5.58388747  2.11177876 #> 143     6.164891    2.854123   5.28275524  1.98669015 #> 144     7.814234    3.757725   5.89751371  2.18528802 #> 145     6.770769    2.967283   5.65783213  2.21855981 #> 146     6.826235    2.783189   5.72632797  1.81549031 #> 147     6.054140    2.563505   5.48236955  2.07980576 #> 148     6.407925    2.848938   5.28950155  1.91076111 #> 149     6.077798    2.436157   5.28193894  2.12977076 #> 150     7.126842    2.669864   6.14942295  1.86534143 #> attr(,\"seed\") #>   [1]       10403          30 -1468252688  1857059959 -1958502717 -1241505050 #>   [7] -1748131059  1298074777  -522308475 -1128108087  1670336994  -398414487 #>  [13]   944470253  2039619258   893154523  -245923846  -653589308 -1284500889 #>  [19] -1554204129  1540985095   322801081 -2057992450  -754108434  -695468052 #>  [25]    34315742   -89962947 -1344233196   135222390   583505768   499964670 #>  [31]  1304086270  -150129211  1107333043 -1686926405  -419149541   426711857 #>  [37] -1023055620  -349850212 -2127089142  2041885984 -1115571200  -909717822 #>  [43]   869673997   969619254 -1809339400   669915365  1504627545  1002577835 #>  [49] -1733870903   547219677 -1219200944 -1683528752   634133668 -1666269438 #>  [55] -2070172959  -434315218  -447416448 -1929319557   773614468  1155891062 #>  [61]   476991732 -1871181774 -1505412191 -1400669513  1762478946  -977750151 #>  [67] -2065522220 -1201125852 -1464432409   654512469   863597464  1512905636 #>  [73]  1135580520  -128129795  1056068711 -1631531899 -1255009338   647685601 #>  [79]    46763593  -591257232    -5217954  -779159538   313910819 -1075551494 #>  [85]  -449884798  -309951676  -760672105  1528941304   265135426  1732998611 #>  [91]  -409465844 -1855056783  1785930446  2138218078   217142379 -1288241167 #>  [97] -1801726798  -390722272   724264071  -654578753 -2126228877   775198367 #> [103]  1025451618 -1679103725   482548295   476442969  -682884406  -894007572 #> [109]  2090659354  2134232689  -399271830  -910721800   169514656  1577073725 #> [115]  -588690595 -1560241421   489030233  1446902965  2043857341  1606701229 #> [121]  -226326892  2092456103  -202343160   333802569  -806902847    18977304 #> [127]  1534124209  1525478765   215315583 -1905028537   298408997   965627869 #> [133]  1183370752 -1656853887  1062437432  1301521616  1373664256   173393582 #> [139]  1894560111  1110920976 -1372403286  -144068993 -1888025008  1821999710 #> [145] -1337082094   162021649 -1213028596 -1414717415  -825266544  1156129295 #> [151]  1689599401   459384318   802620753  -225350419   572325267   312003573 #> [157]  -433781420  -448344015 -1443996650   450223902  2140766335  1126158026 #> [163]  1663441128 -2061072907 -1971793845 -1622670158   249017058    12685665 #> [169]   250378141  1234659719 -1215944518   180382662   168158964    53467640 #> [175]   176420157   459000044 -1382253533   848047273  1448651746   811016567 #> [181]    21214108  -799605568   461184215  1021280383   951803259 -1960286733 #> [187]  1350792426   439801758 -1235984320   554426045   277386530 -1670552933 #> [193]   854965626   137721739  -678531143  1496351243  -503823232  -966869089 #> [199]  1643724826   352630622 -1632950609   -88000184   154354495  1188172599 #> [205]   732960122 -1814007950  -275117108 -1326591946   546674086  1725969605 #> [211]  1266347109  -510020000 -1620994198  -768582738   -86407759 -1752107607 #> [217]   324901629 -2045959323  1761686028 -1654123180  1512090156  -310610381 #> [223]  -715562866 -1188496765  -150236858   177154943  1403815865 -1327000545 #> [229]  2024217491   635588853 -1033918029  2068705410  -533019402 -2145543279 #> [235] -1874811030 -1604760764   381242244   666094464  1966339432  -907039334 #> [241] -1549026974      -57048   705570169  1670133020 -1944563867 -1192620921 #> [247]  1174097474  -252700033  -734157346 -1823059394 -1589586568  -333412077 #> [253] -1794214168  1172319011  -172325135   206768049   189914062   550960722 #> [259] -1741239737  1781184838  1903433368 -1673420322 -2000879536  -713062451 #> [265]  2054398692  -569480048  -212285237   676876797  2071526397   -51598963 #> [271]   895409137   317840701  -113006094 -1393388563  1980236091  -326104809 #> [277]  1140069307 -1929642044 -2137681475   225888433  -659787528 -1189335260 #> [283]  -478511751  2064156481 -1101162599 -2114406862 -1736728851 -1101734365 #> [289]  -667427864   952140852  1486651119 -1415930367  -140675447  1333179448 #> [295] -1226641607  1819353301  1975378996  -965921382 -1241134129   -43283729 #> [301]  -392027820   624978752 -2066435379  -859609154  -866336642   382239781 #> [307]   677365699 -2038408346  1418079110 -1318257394   551951458 -1989985512 #> [313]  1491866775  1395781575  -319956264  1834625187   348796238  -871557990 #> [319]   655194596  -693103950 -1986789639  1843262890 -1797162627   345186838 #> [325] -1996651483  -586971209  -368721027 -1433759398  1136154534  1390839228 #> [331]   394339830   651596370  1311146953  1776491658   954315023  -749845938 #> [337]  -931485652   558289287  1188565774   837545477 -1988787000  -751723977 #> [343]   673522616  1938881874  -480183930  1468488952    79202616   481038015 #> [349]  -595169325  -293001965  1194349556 -1421667856   313704099   315342300 #> [355]  -827110496 -1626162362  1333561189 -1415970660   877215498  1408412431 #> [361]  1092899791  -262843277  -357803824 -2113573336 -1776958402  -678868439 #> [367]    17544013 -1414947037 -1124245538 -1053937393   886419697 -1385486802 #> [373]   472897801 -1297037737  1998977212 -1876805825   -37784667 -1023744346 #> [379]  1904944874  1571585845 -1168601362   599833402  2038868951   372999419 #> [385]  -172945948   395995041 -1254519736  1399596844   174648881 -1433696948 #> [391]  1944069311 -1522314512 -1065919756   899005832   260023115  -546652385 #> [397]  1550892266   647946156   147556696  1237044241 -1301550477   654009853 #> [403] -1748902826  -850363058  -193394884 -1004677390  1001914355  1765916711 #> [409] -1036837385 -2090027385  1560950754  1580086644 -1216728711   373508474 #> [415]  1798316602  2054819250 -1049763554  -456586389 -1772613483  1259377175 #> [421] -1139925545   559675645   630283524 -2085603755  1678720300 -1165794384 #> [427] -1311534297  2026290614 -1351498634 -1814040972 -1805289120 -1923180184 #> [433]   187084078 -1150111522 -1699163710   867332072    13086645  1363385666 #> [439]   415772348  1221983085  -149280741 -1797045976   -83616369   169324616 #> [445] -1031032488   918814459   625524287  -693550959  -779947230  -460292246 #> [451]  -104538789 -1770031701  1762818166 -1344570345  1585708005 -2070001950 #> [457]  1602474991  1191516870  1325325724  1886693149  1270752358  2041361644 #> [463]  -561487394   166281667  1330357896  1919459548  1995289182  1891806110 #> [469] -1961941306  -574706773 -1424490846  -883213102  1649981723   913252804 #> [475]   332271450   631530059  1642201445   552464073     3487912  1931590989 #> [481]   821355293   992022568   120650764  1939018662 -1388120216  -779212692 #> [487]   904851286  -631361828 -1350494972   -62282283  1049579713   215308288 #> [493]  2040995736 -1394496792  1927716242 -1613077540  1776793899 -1565489921 #> [499]  1314523911 -1568620229  -691961623  1107767402 -1015765595  -372076736 #> [505]  1000947905   265733373  1380121045  -738596860 -1950742036   816987224 #> [511]   716498000   699295552 -2030668781   921633643 -1581955396  -974757188 #> [517] -1282929069  1936875566 -1612370921  2138496160   883896403 -1851193139 #> [523]   -27409771  1895585703  1006992140  -326154186   515966776  2133369170 #> [529] -1488935758 -2040630930   692086962  -776300506  -610529059 -1081350387 #> [535]  2142032816  1327289627  1199752580  1226428466  1517100486  1547364926 #> [541]  2071867131  -376454572  -348617133  -211357651  1424404545   788101647 #> [547]   212419341   324351010 -1173746076 -2033538116  -120968066  1341175245 #> [553]  -516698549 -1438312160  -718511204  -620049088  -386137216  1827909352 #> [559]  -318671427   346438949  -357591836  1892281209    72841714    50765530 #> [565] -1425294091   677563172  1914280582  1451399635  -450496539 -1124162123 #> [571]  2098734964  -735098453   715305932   517306416   -96342192   311769076 #> [577]   584015109   614623819   513670558 -2127736893  2118330253  2130451102 #> [583]  -998801589 -1535998872   146825565 -1601165398  1290979351 -1981195231 #> [589]  -993563899   717784789 -1575862468  1856866498  1825385021  -110349599 #> [595]  1595467916 -2125558290    22707222 -1005242373   290470055  -893524482 #> [601]  -803125308 -1255965703  -197109890 -1095764475   621343362  1298850276 #> [607]   -17062252   756947593  -711119586    14486898  1428866940 -1804327601 #> [613]  -513989650  -232105102  2092280956 -1443112203 -1649618438  -321473689 #> [619]  -761343003  1872349909  1973733616 -1458548324  1443569093  1511953803 #> [625]  1431375706  1559599008"},{"path":"https://dwarton.github.io/ecostats/reference/snowmelt.html","id":null,"dir":"Reference","previous_headings":"","what":"How flowering time relates to snowmelt date — snowmelt","title":"How flowering time relates to snowmelt date — snowmelt","text":"Data study time snowmelt flowering relates snowmelt date elevation (Wheeler et al 2016) Salix herbacea, based 120 plots three mountains Swiss Alps.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/snowmelt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How flowering time relates to snowmelt date — snowmelt","text":"","code":"data(snowmelt)"},{"path":"https://dwarton.github.io/ecostats/reference/snowmelt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"How flowering time relates to snowmelt date — snowmelt","text":"dataframe containing: id Plot patch ID flow Number days snowmelt day flowering snow Snowmelt day year sex Sex patch, corrected across years, NA - flowering, 0 - male, 1 - female elev Elevation (dGPS)","code":""},{"path":"https://dwarton.github.io/ecostats/reference/snowmelt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"How flowering time relates to snowmelt date — snowmelt","text":"Wheeler, J. ., Cortés, . J., Sedlacek, J., Karrenberg, S., van Kleunen, M., Wipf, S., Hoch G., Bossdorf, O. & Rixen C. (2016) snow willows: earlier spring snowmelt reduces performance low-lying alpine shrub Salix herbacea. Journal Ecology 104, 1041-50.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/snowmelt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How flowering time relates to snowmelt date — snowmelt","text":"","code":"data(snowmelt) plot(flow~snow,data=snowmelt, log=\"y\") #> Warning: 1 y value <= 0 omitted from logarithmic plot"},{"path":"https://dwarton.github.io/ecostats/reference/waterQuality.html","id":null,"dir":"Reference","previous_headings":"","what":"Water Quality data — waterQuality","title":"Water Quality data — waterQuality","text":"Data study association water quality catchment area. Fish composition used construct index biotic integrity (IBI) relate catchment Seine river basin France.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/waterQuality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Water Quality data — waterQuality","text":"","code":"data(waterQuality)"},{"path":"https://dwarton.github.io/ecostats/reference/waterQuality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Water Quality data — waterQuality","text":"dataframe containing: catchment catchment area square kilometres quality Index Biotic Integrity (IBI) logCatchment log base 10 catchment area","code":""},{"path":"https://dwarton.github.io/ecostats/reference/waterQuality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Water Quality data — waterQuality","text":"Oberdorff, T. & Hughes, R. M. (1992). Modification index biotic integrity based fish assemblages characterize rivers Seine Basin, France\". Hydrobiologia, 228, 117-130.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/waterQuality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Water Quality data — waterQuality","text":"","code":"data(waterQuality) plot(quality~logCatchment, data=waterQuality)"},{"path":"https://dwarton.github.io/ecostats/reference/windFarms.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from wind farm study — windFarms","title":"Data from wind farm study — windFarms","text":"Data study effect offshore wind farms fish communities  (Bergström et al. 2013), measurements (2003) (2010) wind  farm installation 36 different sites three zones -- two affected wind farms, two control zones. Abundances recorded 16 different taxa.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/windFarms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from wind farm study — windFarms","text":"","code":"data(windFarms)"},{"path":"https://dwarton.github.io/ecostats/reference/windFarms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from wind farm study — windFarms","text":"list containing three objects: X data frame descriptors location time sampling. include:  `Year`, factor giving year sampling, 2003 2010 measurements available ;  `Zone`, factor giving zone sampling, WF wind farm, N Northern zone,    S Southern zone;  `Station`, factor indicating station ID;  `Impact`, factor indicating whether sampling `` `` wind farm construction. abund data frame containing abundances 16 different fish taxa. totalAbund total abundance fish site.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/windFarms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from wind farm study — windFarms","text":"Bergström, L., Sundqvist, F., & Bergström, U. (2013). Effects  offshore wind farm temporal spatial patterns demersal fish community.  Marine Ecology Progress Series 485, 199-210.","code":""},{"path":"https://dwarton.github.io/ecostats/reference/windFarms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data from wind farm study — windFarms","text":"","code":"data(windFarms) eels =windFarms$abund[,14]  plot(eels~interaction(Impact,Zone), data=windFarms$X, horizontal=TRUE,   las=1, xlab=\"\",ylab=\"Eel abundance\")"}]
